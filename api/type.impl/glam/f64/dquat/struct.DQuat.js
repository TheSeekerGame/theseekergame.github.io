(function() {var type_impls = {
"bevy_xpbd_2d":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#38\">source</a><a href=\"#impl-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IDENTITY\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#43\">source</a><h4 class=\"code-header\">pub const <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#associatedconstant.IDENTITY\" class=\"constant\">IDENTITY</a>: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> = _</h4></section></summary><div class=\"docblock\"><p>The identity quaternion. Corresponds to no rotation.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.NAN\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#46\">source</a><h4 class=\"code-header\">pub const <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#associatedconstant.NAN\" class=\"constant\">NAN</a>: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> = _</h4></section></summary><div class=\"docblock\"><p>All NANs.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_xyzw\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#60\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_xyzw\" class=\"fn\">from_xyzw</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, z: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, w: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a new rotation quaternion.</p>\n<p>This should generally not be called manually unless you know what you are doing.\nUse one of the other constructors instead such as <code>identity</code> or <code>from_axis_angle</code>.</p>\n<p><code>from_xyzw</code> is mostly used by unit tests and <code>serde</code> deserialization.</p>\n<h5 id=\"preconditions\"><a href=\"#preconditions\">Preconditions</a></h5>\n<p>This function does not check if the input is normalized, it is up to the user to\nprovide normalized input or to normalized the resulting quaternion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_array\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#71\">source</a><h4 class=\"code-header\">pub const fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_array\" class=\"fn\">from_array</a>(a: [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">4</a>]) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a rotation quaternion from an array.</p>\n<h5 id=\"preconditions-1\"><a href=\"#preconditions-1\">Preconditions</a></h5>\n<p>This function does not check if the input is normalized, it is up to the user to\nprovide normalized input or to normalized the resulting quaternion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_vec4\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#82\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_vec4\" class=\"fn\">from_vec4</a>(v: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec4/struct.DVec4.html\" title=\"struct glam::f64::dvec4::DVec4\">DVec4</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a new rotation quaternion from a 4D vector.</p>\n<h5 id=\"preconditions-2\"><a href=\"#preconditions-2\">Preconditions</a></h5>\n<p>This function does not check if the input is normalized, it is up to the user to\nprovide normalized input or to normalized the resulting quaternion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#102\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_slice\" class=\"fn\">from_slice</a>(slice: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>]) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a rotation quaternion from a slice.</p>\n<h5 id=\"preconditions-3\"><a href=\"#preconditions-3\">Preconditions</a></h5>\n<p>This function does not check if the input is normalized, it is up to the user to\nprovide normalized input or to normalized the resulting quaternion.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Panics if <code>slice</code> length is less than 4.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_to_slice\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#112\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.write_to_slice\" class=\"fn\">write_to_slice</a>(self, slice: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>])</h4></section></summary><div class=\"docblock\"><p>Writes the quaternion to an unaligned slice.</p>\n<h5 id=\"panics-1\"><a href=\"#panics-1\">Panics</a></h5>\n<p>Panics if <code>slice</code> length is less than 4.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_axis_angle\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#127\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_axis_angle\" class=\"fn\">from_axis_angle</a>(axis: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>, angle: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Create a quaternion for a normalized rotation <code>axis</code> and <code>angle</code> (in radians).</p>\n<p>The axis must be a unit vector.</p>\n<h5 id=\"panics-2\"><a href=\"#panics-2\">Panics</a></h5>\n<p>Will panic if <code>axis</code> is not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_scaled_axis\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#138\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_scaled_axis\" class=\"fn\">from_scaled_axis</a>(v: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Create a quaternion that rotates <code>v.length()</code> radians around <code>v.normalize()</code>.</p>\n<p><code>from_scaled_axis(Vec3::ZERO)</code> results in the identity quaternion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rotation_x\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#149\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_rotation_x\" class=\"fn\">from_rotation_x</a>(angle: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a quaternion from the <code>angle</code> (in radians) around the x axis.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rotation_y\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#156\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_rotation_y\" class=\"fn\">from_rotation_y</a>(angle: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a quaternion from the <code>angle</code> (in radians) around the y axis.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rotation_z\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#163\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_rotation_z\" class=\"fn\">from_rotation_z</a>(angle: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a quaternion from the <code>angle</code> (in radians) around the z axis.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_euler\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#170\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_euler\" class=\"fn\">from_euler</a>(euler: <a class=\"enum\" href=\"https://docs.rs/glam/0.24.2/glam/euler/enum.EulerRot.html\" title=\"enum glam::euler::EulerRot\">EulerRot</a>, a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, b: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a quaternion from the given Euler rotation sequence and the angles (in radians).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mat3\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#236\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_mat3\" class=\"fn\">from_mat3</a>(mat: &amp;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dmat3/struct.DMat3.html\" title=\"struct glam::f64::dmat3::DMat3\">DMat3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a quaternion from a 3x3 rotation matrix.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_mat4\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#242\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_mat4\" class=\"fn\">from_mat4</a>(mat: &amp;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dmat4/struct.DMat4.html\" title=\"struct glam::f64::dmat4::DMat4\">DMat4</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a quaternion from a 3x3 rotation matrix inside a homogeneous 4x4 matrix.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rotation_arc\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#263\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_rotation_arc\" class=\"fn\">from_rotation_arc</a>(from: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>, to: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  The rotation is in the\nplane spanned by the two vectors.  Will rotate at most 180 degrees.</p>\n<p>The inputs must be unit vectors.</p>\n<p><code>from_rotation_arc(from, to) * from โ to</code>.</p>\n<p>For near-singular cases (fromโto and fromโ-to) the current implementation\nis only accurate to about 0.001 (for <code>f32</code>).</p>\n<h5 id=\"panics-3\"><a href=\"#panics-3\">Panics</a></h5>\n<p>Will panic if <code>from</code> or <code>to</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rotation_arc_colinear\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#296\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_rotation_arc_colinear\" class=\"fn\">from_rotation_arc_colinear</a>(from: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>, to: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Gets the minimal rotation for transforming <code>from</code> to either <code>to</code> or <code>-to</code>.  This means\nthat the resulting quaternion will rotate <code>from</code> so that it is colinear with <code>to</code>.</p>\n<p>The rotation is in the plane spanned by the two vectors.  Will rotate at most 90\ndegrees.</p>\n<p>The inputs must be unit vectors.</p>\n<p><code>to.dot(from_rotation_arc_colinear(from, to) * from).abs() โ 1</code>.</p>\n<h5 id=\"panics-4\"><a href=\"#panics-4\">Panics</a></h5>\n<p>Will panic if <code>from</code> or <code>to</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_rotation_arc_2d\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#317\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_rotation_arc_2d\" class=\"fn\">from_rotation_arc_2d</a>(from: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec2/struct.DVec2.html\" title=\"struct glam::f64::dvec2::DVec2\">DVec2</a>, to: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec2/struct.DVec2.html\" title=\"struct glam::f64::dvec2::DVec2\">DVec2</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Gets the minimal rotation for transforming <code>from</code> to <code>to</code>.  The resulting rotation is\naround the z axis. Will rotate at most 180 degrees.</p>\n<p>The inputs must be unit vectors.</p>\n<p><code>from_rotation_arc_2d(from, to) * from โ to</code>.</p>\n<p>For near-singular cases (fromโto and fromโ-to) the current implementation\nis only accurate to about 0.001 (for <code>f32</code>).</p>\n<h5 id=\"panics-5\"><a href=\"#panics-5\">Panics</a></h5>\n<p>Will panic if <code>from</code> or <code>to</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_axis_angle\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#344\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.to_axis_angle\" class=\"fn\">to_axis_angle</a>(self) -&gt; (<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class=\"docblock\"><p>Returns the rotation axis (normalized) and angle (in radians) of <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_scaled_axis\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#359\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.to_scaled_axis\" class=\"fn\">to_scaled_axis</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a></h4></section></summary><div class=\"docblock\"><p>Returns the rotation axis scaled by the rotation in radians.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_euler\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#366\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.to_euler\" class=\"fn\">to_euler</a>(self, euler: <a class=\"enum\" href=\"https://docs.rs/glam/0.24.2/glam/euler/enum.EulerRot.html\" title=\"enum glam::euler::EulerRot\">EulerRot</a>) -&gt; (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>)</h4></section></summary><div class=\"docblock\"><p>Returns the rotation angles for the given euler rotation sequence.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#372\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.to_array\" class=\"fn\">to_array</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class=\"docblock\"><p><code>[x, y, z, w]</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.xyz\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#378\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.xyz\" class=\"fn\">xyz</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a></h4></section></summary><div class=\"docblock\"><p>Returns the vector part of the quaternion.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.conjugate\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#386\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.conjugate\" class=\"fn\">conjugate</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Returns the quaternion conjugate of <code>self</code>. For a unit quaternion the\nconjugate is also the inverse.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inverse\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#406\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.inverse\" class=\"fn\">inverse</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Returns the inverse of a normalized quaternion.</p>\n<p>Typically quaternion inverse returns the conjugate of a normalized quaternion.\nBecause <code>self</code> is assumed to already be unit length this method <em>does not</em> normalize\nbefore returning the conjugate.</p>\n<h5 id=\"panics-6\"><a href=\"#panics-6\">Panics</a></h5>\n<p>Will panic if <code>self</code> is not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.dot\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#414\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.dot\" class=\"fn\">dot</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Computes the dot product of <code>self</code> and <code>rhs</code>. The dot product is\nequal to the cosine of the angle between two quaternion rotations.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.length\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#421\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.length\" class=\"fn\">length</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Computes the length of <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.length_squared\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#431\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.length_squared\" class=\"fn\">length_squared</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Computes the squared length of <code>self</code>.</p>\n<p>This is generally faster than <code>length()</code> as it avoids a square\nroot operation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.length_recip\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#439\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.length_recip\" class=\"fn\">length_recip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Computes <code>1.0 / length()</code>.</p>\n<p>For valid results, <code>self</code> must <em>not</em> be of length zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.normalize\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#452\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.normalize\" class=\"fn\">normalize</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>self</code> normalized to length 1.0.</p>\n<p>For valid results, <code>self</code> must <em>not</em> be of length zero.</p>\n<p>Panics</p>\n<p>Will panic if <code>self</code> is zero length when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#459\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if, and only if, all elements are finite.\nIf any element is either <code>NaN</code>, positive or negative infinity, this will return <code>false</code>.</p>\n</div></details><section id=\"method.is_nan\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#464\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.is_nan\" class=\"fn\">is_nan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_normalized\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#472\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.is_normalized\" class=\"fn\">is_normalized</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns whether <code>self</code> of length <code>1.0</code> or not.</p>\n<p>Uses a precision threshold of <code>1e-6</code>.</p>\n</div></details><section id=\"method.is_near_identity\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#477\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.is_near_identity\" class=\"fn\">is_near_identity</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.angle_between\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#506\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.angle_between\" class=\"fn\">angle_between</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a></h4></section></summary><div class=\"docblock\"><p>Returns the angle (in radians) for the minimal rotation\nfor transforming this quaternion into another.</p>\n<p>Both quaternions must be normalized.</p>\n<h5 id=\"panics-7\"><a href=\"#panics-7\">Panics</a></h5>\n<p>Will panic if <code>self</code> or <code>rhs</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#521\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.abs_diff_eq\" class=\"fn\">abs_diff_eq</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>, max_abs_diff: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the absolute difference of all elements between <code>self</code> and <code>rhs</code>\nis less than or equal to <code>max_abs_diff</code>.</p>\n<p>This can be used to compare if two quaternions contain similar elements. It works\nbest when comparing with a known value. The <code>max_abs_diff</code> that should be used used\ndepends on the values being compared against.</p>\n<p>For more see\n<a href=\"https://randomascii.wordpress.com/2012/02/25/comparing-floating-point-numbers-2012-edition/\">comparing floating point numbers</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#536\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, end: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Performs a linear interpolation between <code>self</code> and <code>rhs</code> based on\nthe value <code>s</code>.</p>\n<p>When <code>s</code> is <code>0.0</code>, the result will be equal to <code>self</code>.  When <code>s</code>\nis <code>1.0</code>, the result will be equal to <code>rhs</code>.</p>\n<h5 id=\"panics-8\"><a href=\"#panics-8\">Panics</a></h5>\n<p>Will panic if <code>self</code> or <code>end</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slerp\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#557\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.slerp\" class=\"fn\">slerp</a>(self, end: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>, s: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Performs a spherical linear interpolation between <code>self</code> and <code>end</code>\nbased on the value <code>s</code>.</p>\n<p>When <code>s</code> is <code>0.0</code>, the result will be equal to <code>self</code>.  When <code>s</code>\nis <code>1.0</code>, the result will be equal to <code>end</code>.</p>\n<h5 id=\"panics-9\"><a href=\"#panics-9\">Panics</a></h5>\n<p>Will panic if <code>self</code> or <code>end</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_vec3\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#596\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.mul_vec3\" class=\"fn\">mul_vec3</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a></h4></section></summary><div class=\"docblock\"><p>Multiplies a quaternion and a 3D vector, returning the rotated vector.</p>\n<h5 id=\"panics-10\"><a href=\"#panics-10\">Panics</a></h5>\n<p>Will panic if <code>self</code> is not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_quat\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#616\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.mul_quat\" class=\"fn\">mul_quat</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Multiplies two quaternions. If they each represent a rotation, the result will\nrepresent the combined rotation.</p>\n<p>Note that due to floating point rounding the result may not be perfectly normalized.</p>\n<h5 id=\"panics-11\"><a href=\"#panics-11\">Panics</a></h5>\n<p>Will panic if <code>self</code> or <code>rhs</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_affine3\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#632\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.from_affine3\" class=\"fn\">from_affine3</a>(a: &amp;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/daffine3/struct.DAffine3.html\" title=\"struct glam::f64::daffine3::DAffine3\">DAffine3</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Creates a quaternion from a 3x3 rotation matrix inside a 3D affine transform.</p>\n</div></details><section id=\"method.as_f32\" class=\"method\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#642\">source</a><h4 class=\"code-header\">pub fn <a href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html#tymethod.as_f32\" class=\"fn\">as_f32</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f32/sse2/quat/struct.Quat.html\" title=\"struct glam::f32::sse2::quat::Quat\">Quat</a></h4></section></div></details>",0,"bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUnit%3CQuaternion%3Cf64%3E%3E%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_quaternion.rs.html#39\">source</a><a href=\"#impl-From%3CUnit%3CQuaternion%3Cf64%3E%3E%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_quaternion.rs.html#41\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(e: <a class=\"struct\" href=\"nalgebra/base/unit/struct.Unit.html\" title=\"struct nalgebra::base::unit::Unit\">Unit</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Unit<Quaternion<f64>>>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CRotation%3Cf64,+3%3E%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_rotation.rs.html#25\">source</a><a href=\"#impl-From%3CRotation%3Cf64,+3%3E%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, 3&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_rotation.rs.html#27\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(e: <a class=\"struct\" href=\"nalgebra/geometry/rotation/struct.Rotation.html\" title=\"struct nalgebra::geometry::rotation::Rotation\">Rotation</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>, 3&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Rotation<f64, 3>>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CQuaternion%3Cf64%3E%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_quaternion.rs.html#32\">source</a><a href=\"#impl-From%3CQuaternion%3Cf64%3E%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/nalgebra/third_party/glam/common/glam_quaternion.rs.html#34\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(e: <a class=\"struct\" href=\"nalgebra/geometry/quaternion/struct.Quaternion.html\" title=\"struct nalgebra::geometry::quaternion::Quaternion\">Quaternion</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt;) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Quaternion<f64>>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#28\">source</a><a href=\"#impl-Clone-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#28\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#766\">source</a><a href=\"#impl-Default-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#768\">source</a><a href=\"#method.default\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>Returns the โdefault valueโ for a type. <a href=\"https://doc.rust-lang.org/1.75.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","bevy_xpbd_2d::math::double::Quaternion"],["<section id=\"impl-Pod-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_bytemuck.rs.html#46\">source</a><a href=\"#impl-Pod-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/pod/trait.Pod.html\" title=\"trait bytemuck::pod::Pod\">Pod</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section>","Pod","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UlpsEq-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#impl-UlpsEq-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"approx/ulps_eq/trait.UlpsEq.html\" title=\"trait approx::ulps_eq::UlpsEq\">UlpsEq</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_ulps\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#method.default_max_ulps\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\" class=\"fn\">default_max_ulps</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a></h4></section></summary><div class='docblock'>The default ULPs to tolerate when testing values that are far-apart. <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.default_max_ulps\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#method.ulps_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" class=\"fn\">ulps_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>,\n    epsilon: &lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses units in the last place (ULP) if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ulps_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/ulps_eq.rs.html#23\">source</a><a href=\"#method.ulps_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/ulps_eq/trait.UlpsEq.html#method.ulps_ne\" class=\"fn\">ulps_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>, max_ulps: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u32.html\">u32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/ulps_eq/trait.UlpsEq.html#tymethod.ulps_eq\" title=\"method approx::ulps_eq::UlpsEq::ulps_eq\"><code>UlpsEq::ulps_eq</code></a>.</div></details></div></details>","UlpsEq","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_serde.rs.html#985-987\">source</a><a href=\"#impl-Serialize-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_serde.rs.html#985-987\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product%3C%26DQuat%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#815\">source</a><a href=\"#impl-Product%3C%26DQuat%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#816-818\">source</a><a href=\"#method.product\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt;,</span></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product<&'a DQuat>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Product-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#806\">source</a><a href=\"#impl-Product-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Product.html\" title=\"trait core::iter::traits::accum::Product\">Product</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.product\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#807-809\">source</a><a href=\"#method.product\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Product.html#tymethod.product\" class=\"fn\">product</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt;,</span></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nmultiplying the items.</div></details></div></details>","Product","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_serde.rs.html#985-987\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_serde.rs.html#985-987\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#729\">source</a><a href=\"#impl-MulAssign-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#740\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>)</h4></section></summary><div class=\"docblock\"><p>Multiplies two quaternions. If they each represent a rotation, the result will\nrepresent the combined rotation.</p>\n<p>Note that due to floating point rounding the result may not be perfectly\nnormalized.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Will panic if <code>self</code> or <code>rhs</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details></div></details>","MulAssign","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#788\">source</a><a href=\"#impl-Sum-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#789-791\">source</a><a href=\"#method.sum\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt;,</span></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nโsumming upโ the items.</div></details></div></details>","Sum","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26DQuat%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#797\">source</a><a href=\"#impl-Sum%3C%26DQuat%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#798-800\">source</a><a href=\"#method.sum\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt;,</span></h4></section></summary><div class='docblock'>Method which takes an iterator and generates <code>Self</code> from the elements by\nโsumming upโ the items.</div></details></div></details>","Sum<&'a DQuat>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#660\">source</a><a href=\"#impl-Display-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#661\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#773\">source</a><a href=\"#impl-PartialEq-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#775\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, rhs: &amp;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3Cf64%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#702\">source</a><a href=\"#impl-Div%3Cf64%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#707\">source</a><a href=\"#method.div\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Divides a quaternion by a scalar value.\nThe quotient is not guaranteed to be normalized.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details></div></details>","Div<f64>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#758\">source</a><a href=\"#impl-Neg-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#761\">source</a><a href=\"#method.neg\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_bytemuck.rs.html#47\">source</a><a href=\"#impl-Zeroable-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bytemuck/zeroable/trait.Zeroable.html\" title=\"trait bytemuck::zeroable::Zeroable\">Zeroable</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bytemuck/zeroable.rs.html#32\">source</a><a href=\"#method.zeroed\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bytemuck/zeroable/trait.Zeroable.html#method.zeroed\" class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.75.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a href=\"bytemuck/zeroable/trait.Zeroable.html#method.zeroed\">Read more</a></div></details></div></details>","Zeroable","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#648\">source</a><a href=\"#impl-Debug-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#649\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#680\">source</a><a href=\"#impl-Sub-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#686\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Subtracts the <code>rhs</code> quaternion from <code>self</code>.</p>\n<p>The difference is not guaranteed to be normalized.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details></div></details>","Sub","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bf64;+4%5D%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#781\">source</a><a href=\"#impl-AsRef%3C%5Bf64;+4%5D%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">4</a>]&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#783\">source</a><a href=\"#method.as_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.array.html\">4</a>]</h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[f64; 4]>","bevy_xpbd_2d::math::double::Quaternion"],["<section id=\"impl-Copy-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#28\">source</a><a href=\"#impl-Copy-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section>","Copy","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#712\">source</a><a href=\"#impl-Mul-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#724\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Multiplies two quaternions. If they each represent a rotation, the result will\nrepresent the combined rotation.</p>\n<p>Note that due to floating point rounding the result may not be perfectly\nnormalized.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Will panic if <code>self</code> or <code>rhs</code> are not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details></div></details>","Mul","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cf64%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#691\">source</a><a href=\"#impl-Mul%3Cf64%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#697\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Multiplies a quaternion by a scalar value.</p>\n<p>The product is not guaranteed to be normalized.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details></div></details>","Mul<f64>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CDVec3%3E-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#745\">source</a><a href=\"#impl-Mul%3CDVec3%3E-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>&gt; for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#753\">source</a><a href=\"#method.mul\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>) -&gt; &lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class=\"docblock\"><p>Multiplies a quaternion and a 3D vector, returning the rotated vector.</p>\n<h5 id=\"panics\"><a href=\"#panics\">Panics</a></h5>\n<p>Will panic if <code>self</code> is not normalized when <code>glam_assert</code> is enabled.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dvec3/struct.DVec3.html\" title=\"struct glam::f64::dvec3::DVec3\">DVec3</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details></div></details>","Mul<DVec3>","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RelativeEq-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#impl-RelativeEq-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"approx/relative_eq/trait.RelativeEq.html\" title=\"trait approx::relative_eq::RelativeEq\">RelativeEq</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_max_relative\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#method.default_max_relative\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\" class=\"fn\">default_max_relative</a>() -&gt; &lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default relative tolerance for testing values that are far-apart. <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.default_max_relative\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#method.relative_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" class=\"fn\">relative_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>,\n    epsilon: &lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: &lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses a relative comparison if the values are far apart.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.relative_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/relative_eq.rs.html#22-27\">source</a><a href=\"#method.relative_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/relative_eq/trait.RelativeEq.html#method.relative_ne\" class=\"fn\">relative_ne</a>(\n    &amp;self,\n    other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>,\n    epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>,\n    max_relative: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/relative_eq/trait.RelativeEq.html#tymethod.relative_eq\" title=\"method approx::relative_eq::RelativeEq::relative_eq\"><code>RelativeEq::relative_eq</code></a>.</div></details></div></details>","RelativeEq","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#666\">source</a><a href=\"#impl-Add-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/f64/dquat.rs.html#675\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>) -&gt; <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class=\"docblock\"><p>Adds two quaternions.</p>\n<p>The sum is not guaranteed to be normalized.</p>\n<p>Note that addition is not the same as combining the rotations represented by the\ntwo quaternions! That corresponds to multiplication.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details></div></details>","Add","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbsDiffEq-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#impl-AbsDiffEq-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Epsilon\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Epsilon\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" class=\"associatedtype\">Epsilon</a> = &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a> as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>Used for specifying relative comparisons.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.default_epsilon\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#method.default_epsilon\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\" class=\"fn\">default_epsilon</a>() -&gt; &lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a></h4></section></summary><div class='docblock'>The default tolerance to use when testing values that are close together. <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.default_epsilon\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/glam/0.24.2/src/glam/features/impl_approx.rs.html#152\">source</a><a href=\"#method.abs_diff_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" class=\"fn\">abs_diff_eq</a>(\n    &amp;self,\n    other: &amp;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>,\n    epsilon: &lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a> as <a class=\"trait\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html\" title=\"trait approx::abs_diff_eq::AbsDiffEq\">AbsDiffEq</a>&gt;::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>A test for equality that uses the absolute difference to compute the approximate\nequality of two numbers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs_diff_ne\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/approx/abs_diff_eq.rs.html#24\">source</a><a href=\"#method.abs_diff_ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#method.abs_diff_ne\" class=\"fn\">abs_diff_ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>, epsilon: Self::<a class=\"associatedtype\" href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#associatedtype.Epsilon\" title=\"type approx::abs_diff_eq::AbsDiffEq::Epsilon\">Epsilon</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>The inverse of <a href=\"approx/abs_diff_eq/trait.AbsDiffEq.html#tymethod.abs_diff_eq\" title=\"method approx::abs_diff_eq::AbsDiffEq::abs_diff_eq\"><code>AbsDiffEq::abs_diff_eq</code></a>.</div></details></div></details>","AbsDiffEq","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypePath-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#impl-TypePath-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.type_path\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.type_path\" class=\"fn\">type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns the fully qualified path of the underlying type. <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.short_type_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.short_type_path\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.short_type_path\" class=\"fn\">short_type_path</a>() -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Returns a short, pretty-print enabled path to the type. <a href=\"bevy_reflect/type_path/trait.TypePath.html#tymethod.short_type_path\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_ident\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.type_ident\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.type_ident\" class=\"fn\">type_ident</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the type, or <a href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.type_ident\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.crate_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.crate_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.crate_name\" class=\"fn\">crate_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the crate the type is in, or <a href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.crate_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.module_path\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.module_path\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.module_path\" class=\"fn\">module_path</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the path to the module the type is in, or <a href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html#variant.None\" title=\"variant core::option::Option::None\"><code>None</code></a> if it is <a href=\"bevy_reflect/type_path/trait.TypePath.html#anonymity\" title=\"trait bevy_reflect::type_path::TypePath\">anonymous</a>. <a href=\"bevy_reflect/type_path/trait.TypePath.html#method.module_path\">Read more</a></div></details></div></details>","TypePath","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromReflect-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#impl-FromReflect-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.from_reflect\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#tymethod.from_reflect\" class=\"fn\">from_reflect</a>(reflect: &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt;</h4></section></summary><div class='docblock'>Constructs a concrete instance of <code>Self</code> from a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_from_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/from_reflect.rs.html#38\">source</a><a href=\"#method.take_from_reflect\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#method.take_from_reflect\" class=\"fn\">take_from_reflect</a>(\n    reflect: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to downcast the given value to <code>Self</code> using,\nconstructing the value using <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#tymethod.from_reflect\" title=\"associated function bevy_reflect::from_reflect::FromReflect::from_reflect::from_reflect\"><code>from_reflect</code></a> if that fails. <a href=\"bevy_reflect/from_reflect/trait.FromReflect.html#method.take_from_reflect\">Read more</a></div></details></div></details>","FromReflect","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Typed-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#impl-Typed-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_info/trait.Typed.html\" title=\"trait bevy_reflect::type_info::Typed\">Typed</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_info/trait.Typed.html#tymethod.type_info\" class=\"fn\">type_info</a>() -&gt; &amp;'static <a class=\"enum\" href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">TypeInfo</a></h4></section></summary><div class='docblock'>Returns the compile-time <a href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">info</a> for the underlying type.</div></details></div></details>","Typed","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Struct-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#impl-Struct-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/struct_trait/trait.Struct.html\" title=\"trait bevy_reflect::struct_trait::Struct\">Struct</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.field\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/struct_trait/trait.Struct.html#tymethod.field\" class=\"fn\">field</a>(&amp;self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a reference to the value of the field named <code>name</code> as a <code>&amp;dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.field_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/struct_trait/trait.Struct.html#tymethod.field_mut\" class=\"fn\">field_mut</a>(&amp;mut self, name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to the value of the field named <code>name</code> as a\n<code>&amp;mut dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.field_at\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/struct_trait/trait.Struct.html#tymethod.field_at\" class=\"fn\">field_at</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a reference to the value of the field with index <code>index</code> as a\n<code>&amp;dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_at_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.field_at_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/struct_trait/trait.Struct.html#tymethod.field_at_mut\" class=\"fn\">field_at_mut</a>(&amp;mut self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut (dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns a mutable reference to the value of the field with index <code>index</code>\nas a <code>&amp;mut dyn Reflect</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.name_at\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.name_at\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/struct_trait/trait.Struct.html#tymethod.name_at\" class=\"fn\">name_at</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns the name of the field with index <code>index</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.field_len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.field_len\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/struct_trait/trait.Struct.html#tymethod.field_len\" class=\"fn\">field_len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the number of fields in the struct.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.iter_fields\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/struct_trait/trait.Struct.html#tymethod.iter_fields\" class=\"fn\">iter_fields</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy_reflect/struct_trait/struct.FieldIter.html\" title=\"struct bevy_reflect::struct_trait::FieldIter\">FieldIter</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an iterator over the values of the reflectable fields for this struct.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.clone_dynamic\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/struct_trait/trait.Struct.html#tymethod.clone_dynamic\" class=\"fn\">clone_dynamic</a>(&amp;self) -&gt; <a class=\"struct\" href=\"bevy_reflect/struct_trait/struct.DynamicStruct.html\" title=\"struct bevy_reflect::struct_trait::DynamicStruct\">DynamicStruct</a></h4></section></summary><div class='docblock'>Clones the struct into a <a href=\"bevy_reflect/struct_trait/struct.DynamicStruct.html\" title=\"struct bevy_reflect::struct_trait::DynamicStruct\"><code>DynamicStruct</code></a>.</div></details></div></details>","Struct","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Reflect-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#impl-Reflect-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_represented_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.get_represented_type_info\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.get_represented_type_info\" class=\"fn\">get_represented_type_info</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"enum\" href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\">TypeInfo</a>&gt;</h4></section></summary><div class='docblock'>Returns the <a href=\"bevy_reflect/type_info/enum.TypeInfo.html\" title=\"enum bevy_reflect::type_info::TypeInfo\"><code>TypeInfo</code></a> of the type <em>represented</em> by this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.get_represented_type_info\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.into_any\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.into_any\" class=\"fn\">into_any</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>&gt;</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Box&lt;dyn Any&gt;</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.as_any\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.as_any_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_any_mut\" class=\"fn\">as_any_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a> + 'static)</h4></section></summary><div class='docblock'>Returns the value as a <a href=\"https://doc.rust-lang.org/1.75.0/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>&amp;mut dyn Any</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.into_reflect\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.into_reflect\" class=\"fn\">into_reflect</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt;) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Casts this type to a boxed reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.as_reflect\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_reflect\" class=\"fn\">as_reflect</a>(&amp;self) -&gt; &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.as_reflect_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.as_reflect_mut\" class=\"fn\">as_reflect_mut</a>(&amp;mut self) -&gt; &amp;mut (dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)</h4></section></summary><div class='docblock'>Casts this type to a mutable reflected value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.clone_value\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.clone_value\" class=\"fn\">clone_value</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;</h4></section></summary><div class='docblock'>Clones the value as a <code>Reflect</code> trait object. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.clone_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.set\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a>&gt;&gt;</h4></section></summary><div class='docblock'>Performs a type-checked assignment of a reflected value to this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.set\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.apply\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.apply\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.apply\" class=\"fn\">apply</a>(&amp;mut self, value: &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static))</h4></section></summary><div class='docblock'>Applies a reflected value to this value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.apply\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.reflect_ref\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_ref\" class=\"fn\">reflect_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectRef.html\" title=\"enum bevy_reflect::reflect::ReflectRef\">ReflectRef</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns an enumeration of โkindsโ of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.reflect_mut\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_mut\" class=\"fn\">reflect_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectMut.html\" title=\"enum bevy_reflect::reflect::ReflectMut\">ReflectMut</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Returns a mutable enumeration of โkindsโ of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_owned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.reflect_owned\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_owned\" class=\"fn\">reflect_owned</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;<a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a>&gt;) -&gt; <a class=\"enum\" href=\"bevy_reflect/reflect/enum.ReflectOwned.html\" title=\"enum bevy_reflect::reflect::ReflectOwned\">ReflectOwned</a></h4></section></summary><div class='docblock'>Returns an owned enumeration of โkindsโ of type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#tymethod.reflect_owned\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_partial_eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#323\">source</a><a href=\"#method.reflect_partial_eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_partial_eq\" class=\"fn\">reflect_partial_eq</a>(&amp;self, value: &amp;(dyn <a class=\"trait\" href=\"bevy_reflect/reflect/trait.Reflect.html\" title=\"trait bevy_reflect::reflect::Reflect\">Reflect</a> + 'static)) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class='docblock'>Returns a โpartial equalityโ comparison result. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_partial_eq\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.debug\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#323\">source</a><a href=\"#method.debug\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.debug\" class=\"fn\">debug</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Debug formatter for the value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.debug\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#88\">source</a><a href=\"#method.type_name\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.type_name\" class=\"fn\">type_name</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated since 0.12.0: view the method documentation to find alternatives to this method.</span></div></span><div class='docblock'>Returns the type path of the underlying type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.type_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.reflect_hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#204\">source</a><a href=\"#method.reflect_hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_hash\" class=\"fn\">reflect_hash</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class='docblock'>Returns a hash of the value (which includes the type). <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.reflect_hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.serializable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#238\">source</a><a href=\"#method.serializable\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.serializable\" class=\"fn\">serializable</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"bevy_reflect/serde/ser/enum.Serializable.html\" title=\"enum bevy_reflect::serde::ser::Serializable\">Serializable</a>&lt;'_&gt;&gt;</h4></section></summary><div class='docblock'>Returns a serializable version of the value. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.serializable\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_dynamic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/reflect.rs.html#254\">source</a><a href=\"#method.is_dynamic\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.is_dynamic\" class=\"fn\">is_dynamic</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Indicates whether or not this type is a <em>dynamic</em> type. <a href=\"bevy_reflect/reflect/trait.Reflect.html#method.is_dynamic\">Read more</a></div></details></div></details>","Reflect","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GetTypeRegistration-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#impl-GetTypeRegistration-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html\" title=\"trait bevy_reflect::type_registry::GetTypeRegistration\">GetTypeRegistration</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a><span class=\"where fmt-newline\">where\n    <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.f64.html\">f64</a>: <a class=\"trait\" href=\"bevy_reflect/from_reflect/trait.FromReflect.html\" title=\"trait bevy_reflect::from_reflect::FromReflect\">FromReflect</a> + <a class=\"trait\" href=\"bevy_reflect/type_path/trait.TypePath.html\" title=\"trait bevy_reflect::type_path::TypePath\">TypePath</a>,</span></h3></section></summary><div class=\"impl-items\"><section id=\"method.get_type_registration\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_reflect/impls/glam.rs.html#322-331\">source</a><a href=\"#method.get_type_registration\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_reflect/type_registry/trait.GetTypeRegistration.html#tymethod.get_type_registration\" class=\"fn\">get_type_registration</a>() -&gt; <a class=\"struct\" href=\"bevy_reflect/type_registry/struct.TypeRegistration.html\" title=\"struct bevy_reflect::type_registry::TypeRegistration\">TypeRegistration</a></h4></section></div></details>","GetTypeRegistration","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AdjustPrecision-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_xpbd_2d/math/double.rs.html#74-79\">source</a><a href=\"#impl-AdjustPrecision-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_xpbd_2d/math/trait.AdjustPrecision.html\" title=\"trait bevy_xpbd_2d::math::AdjustPrecision\">AdjustPrecision</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Adjusted\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Adjusted\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"bevy_xpbd_2d/math/trait.AdjustPrecision.html#associatedtype.Adjusted\" class=\"associatedtype\">Adjusted</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h4></section></summary><div class='docblock'>A math construct type with the desired precision.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.adjust_precision\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_xpbd_2d/math/double.rs.html#76-78\">source</a><a href=\"#method.adjust_precision\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_xpbd_2d/math/trait.AdjustPrecision.html#tymethod.adjust_precision\" class=\"fn\">adjust_precision</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"bevy_xpbd_2d/math/trait.AdjustPrecision.html#associatedtype.Adjusted\" title=\"type bevy_xpbd_2d::math::AdjustPrecision::Adjusted\">Adjusted</a></h4></section></summary><div class='docblock'>Adjusts the precision of <a href=\"bevy_xpbd_2d/math/index.html\" title=\"mod bevy_xpbd_2d::math\"><code>self</code></a> to <a href=\"#associatedtype.Adjusted\"><code>Self::Adjusted</code></a>.</div></details></div></details>","AdjustPrecision","bevy_xpbd_2d::math::double::Quaternion"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsF32-for-DQuat\" class=\"impl\"><a class=\"src rightside\" href=\"src/bevy_xpbd_2d/math/mod.rs.html#67-72\">source</a><a href=\"#impl-AsF32-for-DQuat\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"bevy_xpbd_2d/math/trait.AsF32.html\" title=\"trait bevy_xpbd_2d::math::AsF32\">AsF32</a> for <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f64/dquat/struct.DQuat.html\" title=\"struct glam::f64::dquat::DQuat\">DQuat</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.F32\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.F32\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"bevy_xpbd_2d/math/trait.AsF32.html#associatedtype.F32\" class=\"associatedtype\">F32</a> = <a class=\"struct\" href=\"https://docs.rs/glam/0.24.2/glam/f32/sse2/quat/struct.Quat.html\" title=\"struct glam::f32::sse2::quat::Quat\">Quat</a></h4></section></summary><div class='docblock'>The <code>f32</code> version of a math construct.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_f32\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/bevy_xpbd_2d/math/mod.rs.html#69-71\">source</a><a href=\"#method.as_f32\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"bevy_xpbd_2d/math/trait.AsF32.html#tymethod.as_f32\" class=\"fn\">as_f32</a>(&amp;self) -&gt; Self::<a class=\"associatedtype\" href=\"bevy_xpbd_2d/math/trait.AsF32.html#associatedtype.F32\" title=\"type bevy_xpbd_2d::math::AsF32::F32\">F32</a></h4></section></summary><div class='docblock'>Returns the <code>f32</code> version of this type.</div></details></div></details>","AsF32","bevy_xpbd_2d::math::double::Quaternion"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()