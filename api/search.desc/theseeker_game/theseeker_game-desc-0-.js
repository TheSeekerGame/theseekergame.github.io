searchState.loadedDescShard("theseeker_game", 0, "Everything to do with loading assets\nEverything to do with the in-game camera(s)\nEverything related to gameplay and game mechanics.\nLevel Management\nCustom prelude, for stuff we’d like to access all over …\nState type: Which “screen” is the app in?\nInitial loading screen at startup\nGameplay\nMain Menu\nMarker for entities that should be despawned on <code>AppState</code> …\nCliCommand for switching state\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTracks the target location of the camera, as well as …\nLimits to the viewable gameplay area.\nMarker component for the main gameplay camera\nFor spawning the main gameplay camera\nthe “base” position of the camera before screen shake …\nUpdates the Camera rig (ie, the camera target) based on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe camera is moved towards this position smoothly\nApplies screen shake based on this amount.\nCamera updates the camera position to smoothly interpolate …\nTiny system that just makes sure trauma is always going …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTemporary function to use during development\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAllows the entity to apply critical strikes. Crits in …\nComponent applied to Gfx entity sibling of Gent which has …\nResource which tracks total number of enemies killed …\nComponent added to an entity damaged by a pushback attack\nComponent added to attack entity to indicate it causes …\nAmount of damage that was actually applied\nTracks which entities collided with the attack, and still …\nCounts how many successful hits since the 19th hit\nYes\nIncludes every single instance of damage that was applied. …\nUnique entities that where in contact with collider and …\nEntity that got damaged\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of targets that can be hit by this attack …\nLifetime is in game ticks\nused to track if multiple hits are in the same attack or …\nThe tick it was damaged\nAttach this to an <code>Attack</code> entity to make it move with a …\nApplies gravity to the projectile\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a projectile component with a starting …\nTracks how long the parent has been despawned\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nComponent added to Decaying enemy not a GentState because …\nEnemy spawner, each slot has its own spawn cooldown\nComponent that indicates that the player is inside of this …\nComponent used to track kills for each EnemySpawner not …\nHp added from spawner due to number of enemies killed.\nIncrements the global KillCount, removes most components …\nDespawns the gent after enemy enters Decay state the gfx …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA plugin that handles when the player has a game over\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPseudostate, currently when this is added to player it is …\nA GenericState has a blanket Transitionable impl for any …\nStates states are components which are added to the entity …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStartingState::new_transition(EndingState)\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf a player attack lands, locks their velocity for the …\nPushback applied to the player for movement effects. …\nset to order the player behavior, state transitions, and …\nExtend with additional parameter Stats\nFor now, Status Modifier is implemented so that only one …\nIndicates that sliding is tracked for this entity\nHow long before the player can dash again?\nHow many seconds does our character dash for?\nHow many pixels/s do they dash with?\nOffseting Value on Stat, e.g. 100.0 - 10.0 = 90.0\nHow fast does the player accelerate downward while in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHow many ticks is the players velocity locked to zero …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHow fast does the player accelerate downward while holding …\nHow much velocity does the player have at the moment they …\nHow many seconds does our characters innate hover boots …\nThe maximum downward velocity the player can fall at.\nHow much max health the player has\nThe maximum horizontal velocity the player can move at.\nPushback velocity on basic melee hits\nTicks for melee pushback velocity; determines how long …\nThe acceleration applied to the player while they continue …\nThe initial acceleration applied to the player for the …\nMultiplying Factor on Stat, e.g. 102.0 * 0.5 = 51.0\nPlayer is sliding if f32 value is less then the coyote time\nOnlly applies in the downward y direction while the player …\nHow many seconds does our character stealth for?\nHow many seconds does our character stealth for?\nPushback velocity on wall jumps\nTicks for wall pushback velocity; determines how long …\nSpends this much energy per second when using whirl\nSpends this much energy per second when not using whirl\nplay animations here, run after transitions\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTries to keep the characters shape caster this far above …\nPlayer behavior systems. Do stuff here in states and add …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMarker for “wall” tiles\nBundle for “wall” tiles\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpawns XPBD colliders for the walls of a level\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nModified to work with 2d from: …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTo use this plugin add it to your app, and make sure the …\nDarkness Post Process Settings\nRGB\n0.0 is pitch black, and 1.0 is normal brightness\nChanges the intensity over time to show that the effect is …\nApplies a dark color tint to parallaxed backrounds, to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOutput of the light source; 0.0 is off and 1.0 is normal …\nRGB\nPosition is currently relative to the camera center\nMarker component for a damage number, the vec2 is the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe extra texture used as the second render target for the …\nA more accurate simulation, in which circles of confusion …\nThe first bokeh pass: vertical and diagonal.\nThe second bokeh pass: two diagonals.\nThe bind group shared among all invocations of the depth …\nThe layout for the bind group shared among all invocations …\nControls the appearance of the effect.\nThe node in the render graph for depth of field.\nInformation needed to specialize the pipeline …\nA key that uniquely identifies depth of field pipelines.\nA plugin that adds support for the depth of field effect …\nDepth of field settings.\nData about the depth of field effect that’s uploaded to …\nIdentifies a specific depth of field render pass.\nA faster simulation, in which out-of-focus areas are …\nThe first, horizontal, Gaussian blur pass.\nThe second, vertical, Gaussian blur pass.\nBind group layouts for depth of field specific to a single …\nAlong with the focal length, controls how much objects not …\nGiven the sensor height and the FOV, returns the focal …\nThe premultiplied factor that we scale the circle of …\nThe sampler used to sample from the color buffer or …\nConfigures depth textures so that the depth of field …\nReturns true if multisampled depth textures are supported …\nThe bind group layout for the second bokeh pass, which …\nExtracts all <code>DepthOfFieldSettings</code> components into the …\nThe distance in meters to the location in focus.\nThe distance in meters to the location in focus.\nThe focal length. See the comment in <code>DepthOfFieldParams</code> in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInitializes <code>DepthOfFieldSettings</code> from a set of …\nThe bind group layout shared among all invocations of the …\nWhether we’re using HDR.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe layout.\nThe maximum diameter, in pixels, that we allow a circle of …\nThe maximum circle of confusion diameter in pixels. See …\nObjects are never considered to be farther away than this …\nThe depth value that we clamp distant objects to. See the …\nThe appearance of the effect.\nWhether the render target is multisampled.\nPadding.\nPadding.\nPadding.\nWhether we’re doing Gaussian or bokeh blur.\nPopulates the information that the <code>DepthOfFieldNode</code> needs …\nCreates the second render target texture that the first …\nCreates depth of field bind group 1, which is shared among …\nSpecializes the depth of field pipelines specific to a …\nCreates the bind group layouts for the depth of field …\nThe height of the image sensor format in meters.\nThe bind group layout for passes that take only one input.\nThe bind group layouts specific to each view.\nmarker component for tracking position of a fog emitter …\neach emitter field: (x, y, max_fog, max_dist)\ndepth is used for the parallax affect, note that this is …\nx, y, are the coordinates of the emitter; z is distance\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA number between <code>0</code> and <code>1</code> indicating how much of the bar …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn indicator component for when you want the main …\nwhen a specific entity is spawned on level load\nattaches parallax components to the different …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSystem to perform initial setup when entering the gameplay …\nlevel_0 is a giant grey object that blocks all our …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn optional component; add it if the center of the parallax…\nStores the “base” position of the Parallaxed object if …\nA simple plugin for applying parallax to entities. Use by …\nApplies parallax transformations to all components with …\nHow far away from the camera is the layer? 0 is on top of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nApplies parallax transformations\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPer vertex coloring. Use in conjunction with …\nPer vertex joint transform matrix index. Use in …\nPer vertex joint transform matrix weight. Use in …\nThe direction the vertex normal is facing in. Use in …\nWhere the vertex is located in space. Use in conjunction …\nThe direction of the vertex tangent. Used for normal …\nTexture coordinates for the vertex. Use in conjunction …\nAlternate texture coordinates for the vertex. Use in …\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe <code>GizmoConfigGroup</code> used for debug visualizations of <code>Aabb</code> …\nAbort\nIndependent of all other nodes, but relative to its parent …\nCombines the color of the fragments with the colors behind …\nA filter on a component that only retains results added …\nEmitted whenever an <code>Asset</code> is added.\nFound on Sun’s USB keyboard.\nIndicates an alias of/shortcut to something is to be …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nIndicates that the something can be scrolled in any …\nContains the set of permitted types by their <code>TypeId</code>.\nSets how a material’s base color alpha channel is used …\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn ambient light, which lights the entire scene equally.\nAn <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.\nAn animatable value type.\nA list of <code>VariableCurve</code>, and the <code>EntityPath</code> to which they …\nAnimation controls\nAdds animation support to an app\nThe <code>Error</code> type, a wrapper around a dynamic error type.\nThe <code>AnyOf</code> query parameter fetches entities with any of the …\n<code>Result&lt;T, Error&gt;</code>\nA container of app logic and data.\nA trait adding <code>init_gizmo_group&lt;T&gt;()</code> to the app\nA <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …\nA thread-safe reference-counting pointer. ‘Arc’ stands …\n↓\n←\n→\n↑\nAdds asset-related builder methods to <code>App</code>.\nTrait to mark a struct as a collection of assets\nDerive macro for <code>AssetCollection</code>\nExtension trait for <code>App</code> enabling initialisation of asset …\nExtension trait for <code>World</code> enabling initialisation of asset …\nEvents that occur for a specific loaded <code>Asset</code>, such as “…\nA <code>MapKey</code> that uses the <code>file_name</code> of the asset’s path as …\nA <code>MapKey</code> that uses the <code>file_stem</code> of the asset’s path as …\nA unique runtime-only identifier for an <code>Asset</code>. This is …\nComponent for when we want to use a dynamic asset key …\nA <code>MapKey</code> that uses the <code>label</code> of the asset’s path as key.\nProvides “asset” loading and processing functionality. …\nLoads and tracks the state of <code>Asset</code> values from a …\nStores <code>Asset</code> values identified by their <code>AssetId</code>.\nResource for tracking the loading of assets\nUse this for system ordering relative to assets (within …\nSystem Set for assets progress tracking.\nThe window’s top-left corner should be placed at the …\nA UI node that is a texture atlas sprite\nA more general form of the <code>FogFalloff::Exponential</code> mode. …\nBundle for playing a standard bevy audio asset\nUsed to control audio during playback.\nCommon interactions with an audio sink.\nA source of audio data\nBundle for playing a sound.\nAudioVolumeDown\nAudioVolumeMute\nAudioVolumeUp\nAutomatically determine the value based on the context and …\nUse the parent node’s <code>AlignItems</code> value to determine how …\nUse the parent node’s <code>JustifyItems</code> value to determine …\nTrack minimum size should be automatically sized\nTrack maximum size should be automatically sized\nRepeat the track to fill available space\nRepeat the track to fill available space but collapse any …\nPosition will be set by the window manager. Bevy will …\nStores the position data of the input devices of type <code>T</code>.\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nThe back mouse button.\nThe background color of the node\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nThe items are packed such that their baselines align.\nThe items are packed such that their baselines align.\nThis item will be aligned at the baseline.\nThis item will be aligned at the baseline.\nThe base color alpha value defines the opacity of the …\nAn individual input for <code>Animatable::blend</code>.\nThe border color of the UI node.\nStruct defining a <code>Sprite</code> border with padding values\nA polygon with a variable number of vertices, allocated on …\nA series of connected line segments in 2D space, allocated …\nA series of connected line segments in 3D space, allocated …\n[ on a US keyboard.\n] on a US keyboard.\nSome laptops place this key to the left of the ↑ key.\nBrowserFavorites\nSome laptops place this key to the right of the ↑ key.\nThe “home” button on Android.\nBrowserRefresh\nBrowserSearch\nBrowserStop\nTrait for removing, adding and replacing children and …\nCollection of methods similar to <code>BuildChildren</code>, but …\nTrait that defines adding, changing and children and …\nThe <code>Bundle</code> trait enables insertion and removal of <code>Component</code>…\nMarker struct for buttons\nA UI node that is a button\nA “press-able” input of type <code>T</code>.\nThe C button.\nThe calculated clip of the node\nThe defining <code>Component</code> for camera entities, storing …\nConfiguration for the “main 3d render graph”.\nCapsLock or ⇪\nA 2D capsule primitive, also known as a stadium or pill …\nA 3D capsule primitive. A three-dimensional capsule is …\nIndicates that a cell or set of cells may be selected. …\nLeftmost &amp; rightmost characters are equidistant to the …\nThe items are packed along the center of the axis.\nThe items are packed along the center of the axis\nThis item will be aligned along the center of the axis.\nThis item will be aligned along the center of the axis.\nThe items are packed along the center of the axis.\nThe items are packed along the center of the axis.\nWindow will be centered on the selected monitor.\nSimilar to Bevy’s PipedSystem, but the second system is …\nSimilar to Bevy’s PipedSystem, but with diverging paths …\nA filter on a component that only retains results added or …\nStruct for building children entities and adding them to a …\nContains references to the child entities of this entity.\nA circle primitive\nCommand that clears all children from an entity and …\nA <code>Resource</code> that stores the color that is used to clear the …\nFor a camera, specifies the color used to clear the …\nProvides methods for managing the available “console …\nProvides methods to run/call “console commands”\nHide overflowing items.\nA clockwise winding order\nIndicates that the item/column can be resized …\nDynamic asset that is defined by multiple handles\nA 2d material that renders 2d meshes with a texture tinted …\nA component bundle for entities with a <code>Mesh2dHandle</code> and a …\nRenders the tile with its corresponding color in LDtk, so …\nFlex from top to bottom.\nItems are placed by filling each column in turn, adding …\nCombines <code>Column</code> with the dense packing algorithm.\nFlex from bottom to top.\n, on a US keyboard.\nA <code>Command</code> queue to perform structural changes to the <code>World</code>.\nNotifies when text should be inserted into the editor …\nA data type that can be used to store data for an entity.\nA system that determines if one or more scheduled systems …\nA cone primitive.\nMethods to configure a loading state\nA conical frustum primitive. A conical frustum can be …\nProvides the <code>context</code> method for <code>Result</code>.\nA context menu is available for the object under the …\nThe application context menu key, which is typically found …\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nIndicates something is to be copied. Often rendered as an …\nFound on Sun’s USB keyboard.\nRepeat the track fixed number of times\nA counterclockwise winding order\nA simple crosshair (e.g., short line segments resembling a …\nA marker trait used to indicate that an <code>RngCore</code> or …\nA spline interpolated continuously across the nearest four …\nA spline composed of a single cubic Bezier curve.\nA spline interpolated continuously across the nearest four …\nImplement this on cubic splines that can generate a curve …\nA spline interpolated continuously between the nearest two …\nA segment of a cubic curve, used to hold precomputed …\nCubic spline interpolation. The value of the two closest …\nA cuboid primitive, more commonly known as a box.\nUses the current monitor of the window.\nAn event that is sent whenever the user’s cursor enters …\nThe icon to display for a <code>Window</code>’s <code>Cursor</code>.\nAn event that is sent whenever the user’s cursor leaves …\nAn event reporting that the mouse cursor has moved inside …\nThe given clear color is used, overriding the <code>ClearColor</code> …\nFound on Sun’s USB keyboard.\nA cylinder primitive\n<code>ParallaxMappingMethod::Relief</code> with a 5 steps, a reasonable …\nThe uuid for the default <code>AssetId</code>. It is valid to assign a …\nWill play the associated audio source once and despawn the …\nThe down button of the D-Pad.\nThe left button of the D-Pad.\nThe right button of the D-Pad.\nThe up button of the D-Pad.\nConvenient query for giving a human friendly name to an …\nA type implementing this trait can be converted to a …\nThe type of the iterator of the audio samples, which …\nThe type of the audio samples. Usually a <code>u16</code>, <code>i16</code> or <code>f32</code>, …\nThe platform-dependent default cursor. Often rendered as …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe items are packed in their default position as if no …\nThe clear color is taken from the world’s <code>ClearColor</code> …\nThe default gizmo config group.\nThis plugin group will add all the default plugins for a …\nA <code>SystemParam</code> that stores a buffer which gets applied to …\n⌦. The forward delete key. Note that on Apple keyboards, …\nContains the set of prohibited types by their <code>TypeId</code>.\nImplements <code>Deref</code> for structs. This is especially useful …\nImplements <code>DerefMut</code> for structs. This is especially useful …\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nA <strong>data structure</strong> that can be deserialized from any data …\nDeserialize value by using its <code>FromStr</code> implementation\nA data structure that can be deserialized without …\nDespawns the given entity’s children recursively\nDespawns the given entity and all its children recursively\nTrait that holds functions for despawning recursively down …\nIndicates that a level has despawned.\nTypes that can read change detection information. This …\nTypes that implement reliable change detection.\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nDefines the text direction.\nA normalized vector pointing in a direction in 2D space\nA normalized vector pointing in a direction in 3D space\nA Directional light.\nA component bundle for <code>DirectionalLight</code> entities.\nNotifies when the IME was disabled.\nDefines the layout model used by this node.\nTypes (distributions) that can be used to create a random …\nFile is being dropped into a window.\nA <code>Duration</code> type to represent a span of time, typically …\nAny type implementing this trait can be assigned to asset …\nThis traits describes types that contain asset …\nResource keeping track of dynamic asset collection files …\nDifferent typed that can generate the asset field value of …\nResource to dynamically resolve keys to assets.\nGenerates a dynamic plugin entry point function for the …\nA collection of serializable resources and dynamic …\nA <code>DynamicScene</code> builder, used to build a scene from a <code>World</code> …\nA component bundle for a <code>DynamicScene</code> root.\nThe east border to be moved.\nThe right action button of the action pad (i.e. PS: …\nEject or ⏏. This key is placed in the function section …\nAn ellipse primitive\nNotifies when the IME was enabled.\nPage Down, End, or ↘\nThe items are packed towards the end of the axis.\nThe items are packed towards the end of the axis.\nThis item will be aligned with the end of the axis.\nThis item will be aligned with the end of the axis.\nThe items are packed towards the end of the axis.\nThe items are packed towards the end of the axis.\nEnter or ↵. Labeled Return on Apple keyboards.\nLightweight identifier of an entity.\n<code>Component</code> added to all <code>LdtkEntity</code>s by default.\nComponent added to any LDtk Entity by default.\nAn implementor of this trait knows how to map an <code>Entity</code> …\nProvides mutable access to a single entity and all of its …\nPath to an entity, with <code>Name</code>s. Each entity in a path must …\nA read-only reference to a particular <code>Entity</code> and all of …\nA mutable reference to a particular <code>Entity</code>, and the entire …\nA pair of cubemap textures that represent the surroundings …\n= on a US keyboard.\nContains the error value\nEsc or ⎋\nEuler rotation sequences.\nA type that can be stored in an <code>Events&lt;E&gt;</code> resource You can …\nReads events of type <code>T</code> in order and tracks which events …\nSends events of type <code>T</code>.\nAn event collection that represents the events that …\nThe east and west borders to be moved.\nAn exponential fog falloff with a given <code>density</code>.\nA squared exponential fog falloff with a given <code>density</code>.\nSchedule which extract data from the main world and …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nAll false.\nAll false.\nAll false.\nThe actual value of a field instance on a Level or …\nA dynamic asset directly loaded from a single file\nEvents related to files being dragged and dropped on a …\nA list of files to be loaded as a vector of handles\nFound on Sun’s USB keyboard.\nRuns first in the schedule.\nTrack maximum size should be sized according to the …\nTrack maximum size should be sized according to the …\nThe fixed timestep game clock following virtual time.\nRuns first in the <code>FixedMain</code> schedule.\nThe schedule that runs last in <code>FixedMain</code>\nThe schedule that runs after the <code>FixedUpdate</code> schedule, for …\nThe schedule that contains logic that must run before …\nThe schedule that contains most gameplay logic.\nUse Flexbox layout model to determine the position of this …\nDefines how flexbox items are ordered within a flexbox\nThe items are packed towards the end of the axis, unless …\nThis item will be aligned with the end of the axis, unless …\nThe items are packed towards the end of the axis, unless …\nThe items are packed towards the end of the axis, unless …\nThe items are packed towards the start of the axis, unless …\nThis item will be aligned with the start of the axis, …\nThe items are packed towards the start of the axis, unless …\nThe items are packed towards the start of the axis, unless …\nDefines if flexbox items appear on a single line or on …\nA trait for extending <code>f32</code> and <code>f64</code> with extra methods.\nFn This is typically a hardware key that does not generate …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nAllows switching between different fog falloff modes, and …\nConfigures the “classic” computer graphics distance fog…\nA folder to load all including asset files from\nThe forward mouse button.\nThe dimension as a fraction of the total available grid …\nAdds frame counting functionality to Apps.\nUpdate the clear color to use the entire editor’s …\nUpdate the clear color to use the background color of the …\nA trait that enables types to be dynamically constructed …\nDerives the <code>FromReflect</code> trait.\nCreates an instance of the type this trait is implemented …\nThis is when old “game tick events” are cleared (in …\nApply this to anything that relies on <code>GameTime</code>\nOur alternative to <code>FixedUpdate</code>\nA gamepad with an associated <code>ID</code>.\nAn axis of a <code>Gamepad</code>.\nA type of a <code>GamepadAxis</code>.\nA button of a <code>Gamepad</code>.\nA type of a <code>GamepadButton</code>.\nA collection of connected <code>Gamepad</code>s.\nA convenience trait which combines fetching and …\nA trait which allows nested <code>Reflect</code> values to be retrieved …\nA convenience trait which combines fetching and …\nPlugin that provides gamepad handling to an <code>App</code>.\nA struct that stores configuration for gizmos.\nA trait used to create gizmo configs groups.\nA <code>Resource</code> storing <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> structs\nA trait for rendering 2D geometric primitives (<code>P</code>) with …\nA trait for rendering 3D geometric primitives (<code>P</code>) with …\nA <code>SystemParam</code> for drawing gizmos.\nIndicates the order in which this node should be rendered …\nDescribe the position of an entity relative to the …\nUse this <code>Resource</code> to control the global volume of all …\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nUse CSS Grid layout model to determine the position of …\nControls whether grid items are placed row-wise or …\nComponent that stores grid-based coordinate information.\nRepresents the position of a grid item in a single axis.\nErrors that occur when setting constraints for a …\nA <code>GridTrack</code> is a Row or Column of a CSS Grid. This struct …\nHow many times to repeat a repeated grid track\nAn entity that is invisible in the hierarchy.\nAn entity that cannot be seen from any views.\nAn invisible <code>SpatialBundle</code>, with no translation, rotation, …\nA strong or weak handle to a specific <code>Asset</code>. If a <code>Handle</code> …\nReturns a bool that describes if an entity has the …\nA <code>HashMap</code> implementing aHash, a high speed keyed hashing …\nA <code>HashSet</code> implementing aHash, a high speed keyed hashing …\nHelp is available for the object under the cursor. Often …\nHelp. Not present on standard PC keyboards.\nAn entity with <code>Visibility::Hidden</code> will be unconditionally …\n“Hidden” progress reported by a system.\nProvides hierarchy functionality to a Bevy app.\nAn extension trait for <code>Query</code> that adds hierarchy related …\nUse for dedicated ひらがな key found on some Japanese …\nHome or ↖\nA torus that has no hole but also doesn’t intersect …\nThe node has been hovered over\nFile is currently being hovered over a window.\nFile hovering was canceled.\nHSL (hue, saturation, lightness) color with an alpha …\nLegacy modifier key.\nAn identity <code>GlobalTransform</code> that maps all points in space …\nAn identity <code>Transform</code> with no translation, rotation, and a …\nAn identity <code>TransformBundle</code> with no translation, rotation, …\nA 3x3 identity matrix, where all diagonal elements are <code>1</code>, …\nA 2x2 identity matrix, where all diagonal elements are <code>1</code>, …\nA 4x4 identity matrix, where all diagonal elements are <code>1</code>, …\nThe identity quaternion. Corresponds to no rotation.\nAll <code>f32::INFINITY</code>.\nAll <code>f32::INFINITY</code>.\nAll <code>f32::INFINITY</code>.\nA visible <code>SpatialBundle</code>, with no translation, rotation, …\nThis asset id <em>should</em> never be valid. Assigning a value to …\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nSpawn level with the given identifier.\nSpawn level with the given level <code>iid</code>.\nAn image asset\nA UI node that is an image\nAdds the <code>Image</code> as an asset and makes sure that they are …\nControls how the image is altered when scaled.\nA Input Method Editor event.\nWrapper type to mark a <code>SystemParam</code> as an input.\nThe input type to this system. See <code>System::In</code>.\nThe system’s input. See <code>In</code> for <code>FunctionSystem</code>s.\nUses the monitor with the specified index.\nA small / efficient runtime identifier that can be used to …\nSpawn level from its indices in the LDtk file’s …\nThe length of the direction vector is <code>std::f32::INFINITY</code>.\nInherit from parent node.\nAn entity with <code>Visibility::Inherited</code> will inherit the …\nWhether or not an entity is visible in the hierarchy. This …\nThe type contained within this smart pointer\nInsert or Ins. Not present on Apple keyboards.\nCommand that inserts a child at a given index of a parent…\nA measurement of a monotonically nondecreasing clock. …\nComponent added to any <code>IntGrid</code> tile by default.\nOption in LdtkSettings that determines the visual …\nDescribes what type of input interaction has occurred for …\nInterpolation method to use between keyframes.\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nConversion trait to turn something into a <code>System</code>.\nTypes that can convert into a <code>SystemConfigs</code>.\nTypes that can be converted into a <code>SystemSet</code>.\nTypes that can convert into a <code>SystemSetConfigs</code>.\nA torus with non-geometric properties like a minor or …\nAn invalid winding order indicating that it could not be …\nAn error indicating that a direction is invalid.\nDoes not render the tile\nMarker used to identify default cameras, they will have …\nThe element type.\nExtension trait on iterators, providing random sampling …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nDescribes the horizontal alignment of multiple lines of …\nJapanese: カタカナ/ひらがな/ローマ字 …\nUse for dedicated カタカナ key found on some Japanese …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nThe key code of a <code>KeyboardInput</code>.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nList of keyframes for one of the attribute of a <code>Transform</code>.\nWill play the associated audio source in a loop.\nMarker struct for labels\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nRuns last in the schedule.\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nLaunchMail\nComponent for storing some LDtk layer information on layer …\nLCH(ab) (lightness, chroma, hue) color with an alpha …\nProvides a constructor which can be used for spawning …\nProvides functions to register Bundles to bevy’s App for …\nConvenience methods for accessing field instances.\nProvides a constructor which can be used for spawning …\nProvides functions to register Bundles to bevy’s App for …\nUsed to allow a tile to point to its parent without using …\nAdds the default systems, assets, and resources used by …\nMain asset for loading LDtk project data.\nSettings resource for the plugin. Check out the …\n<code>Bundle</code> for spawning LDtk worlds and their levels. The main …\nLeftmost character is immediately to the right of the …\nThe left mouse button.\nThe horizontal value of the left stick.\nThe vertical value of the left stick.\nThe left thumb stick button.\nText is written left to right.\nThe first left trigger.\nThe second left trigger.\nThe value of the left <code>Z</code> button.\nOption in LdtkSettings that dictates how the plugin …\nEvents fired by the plugin related to level …\n<code>Component</code> that stores a level’s instance identifier.\nIndices pointing to the location of a level in an …\nConvenience methods for types that store levels and level …\n<code>Resource</code> for choosing which level(s) to spawn.\n<code>Component</code> that determines the desired levels to be spawned …\nOption in LdtkSettings that determines level spawn …\nA marker component for a light probe, which is a cuboid …\nAn infinite line along a direction in 2D space.\nAn infinite line along a direction in 3D space.\nLinear interpolation between the two closest keyframes.\nA linear fog falloff that grows in intensity between <code>start</code> …\nEmitted whenever an <code>Asset</code> has been fully loaded (including …\nA Bevy plugin to configure automatic asset loading\nExtension trait for Bevy Apps to add loading states …\nCan be used to add new asset collections or similar …\nSystems in this set check the loading state of assets.\nA system local <code>SystemParam</code>.\nIndicates the order in which this node should be rendered …\nThe largest possible axis value.\nAll <code>f32::MAX</code>.\nAll <code>f32::MAX</code>.\nAll <code>f32::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>i32::MAX</code>.\nAll <code>u32::MAX</code>.\nAll <code>u32::MAX</code>.\nAll <code>u32::MAX</code>.\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe smallest possible axis value.\nAll <code>f32::MIN</code>.\nAll <code>f32::MIN</code>.\nAll <code>f32::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>i32::MIN</code>.\nAll <code>u32::MIN</code>.\nAll <code>u32::MIN</code>.\nAll <code>u32::MIN</code>.\nThe schedule that contains the app logic that is evaluated …\nA type that can be used as key for mapped asset collection.\nReduce transparency to fully opaque or fully transparent …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nMaterials are used alongside <code>MaterialPlugin</code> and …\nA component bundle for entities with a <code>Mesh</code> and a <code>Material</code>.\nA UI node that is rendered using a <code>UiMaterial</code>\nAdds the necessary ECS resources and render logic to …\nTrack minimum size should be content sized under a …\nTrack maximum size should be content sized under a …\nMediaPlayPause\nMediaSelect\nMediaStop\nMediaTrackNext\nMediaTrackPrevious\nA 3D object made out of vertices representing triangles, …\nA trait for shapes that can be turned into a <code>Mesh</code>.\nLegacy modifier key. Also called “Super” in certain …\nThe middle mouse button.\nTrack minimum size should be content sized under a …\nTrack maximum size should be content sized under a …\nThis plugin group will add the minimal plugins for a <em>Bevy</em> …\n- on a US keyboard.\nThe mode button.\nEmitted whenever an <code>Asset</code> value is modified.\nReferences a screen monitor.\nControls the morph targets for all child <code>Handle&lt;Mesh&gt;</code> …\nA button on a mouse device.\nIndicates something is to be moved.\nConfiguration resource for Multi-Sample Anti-Aliasing.\nCombines the color of the fragments with the colors behind …\nUnique mutable borrow of an entity’s component or of a …\nAll NAN:s.\nAll <code>f32::NAN</code>.\nAll <code>f32::NAN</code>.\nAll NAN:s.\nAll NAN:s.\nAll NANs.\nAll <code>f32::NAN</code>.\nThe duration of one nanosecond.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nThe north border to be moved.\nThe length of the direction vector is <code>NaN</code>.\nComponent used to identify an entity. Stores a hash for …\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nThe next state of <code>State&lt;S&gt;</code>.\nDon’t update the clear color at all\nIndicates that the dragged item cannot be dropped at the …\nSingle line, will overflow if needed.\nBase component for a UI node, which also provides the …\nThe basic UI node.\nJapanese: 無変換 (muhenkan)\nShared borrow of a non-<code>Send</code> resource.\nUnique borrow of a non-<code>Send</code> resource.\nNothing has happened\nUse no layout, don’t render this node and its children.\nNo clear color is used: the camera will simply draw on top …\nThere will be no level backgrounds, not even an empty …\nThe upper action button of the action pad (i.e. PS: …\nIndicates that the requested action will not be carried …\nThe south and north borders to be moved.\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\nThe Enter key on the numpad.\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nWill play the associated audio source once.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nA simple linear interpolation, using a single texture …\nContains the success value\nAdd this component to an interactable UI node, to specify …\nThe label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …\nThe label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nRun once and stop.\nBase color alpha values are overridden to be fully opaque …\nFound on Sun’s USB keyboard.\nA filter that tests if any of the given filters apply.\nProject a 3D space onto a 2D surface using parallel lines, …\nMiscellaneous buttons, considered non-standard (i.e. Extra …\nNon-standard support for other axis types (i.e. HOTAS …\nAnother mouse button with the associated number.\nThe return type of this system. See <code>System::Out</code>.\nThe system’s output.\nThe <code>Outline</code> component adds an outline outside the edge of …\nThe output of <code>primitive_2d</code>. This is a builder to set …\nThe output of <code>primitive_3d</code>. This is a builder to set …\nThe output of <code>Self::mesh</code>. This can either be a <code>Mesh</code> or a …\nWhether to show or hide overflowing items\nWhether to show or hide overflowing items\nAn entity ID with a placeholder value. This may or may not …\nPage Down, PgDn, or ⇟\nPage Up, PgUp, or ⇞\nThe parallax mapping method to use to compute depth based …\nAn alternative to <code>Commands</code> that can be used in parallel …\nThe <code>SystemParam</code>/s used by this system to access the <code>World</code>.\nA collection of potentially conflicting <code>SystemParam</code>s …\nHolds a reference to the parent entity of this entity. …\nFound on Sun’s USB keyboard.\nPause Break\nA component bundle for PBR entities with a <code>Mesh</code> and a …\nSet the value as a percentage of its parent node’s …\nTrack minimum size should be a percentage value\nTrack maximum size should be a percentage value\n. on a US keyboard.\nA 3D camera projection in which distant objects appear …\nA source of sine wave sound\nBundle for playing a bevy note sound\nAn unbounded plane in 2D space. It forms a separating …\nAn unbounded plane in 3D space. It forms a separating …\nInitial settings to be used when audio starts playing. If …\nA collection of Bevy app logic and configuration.\nCombines multiple <code>Plugin</code>s into a single unit.\nA light that emits light in all directions from a central …\nA component bundle for <code>PointLight</code> entities.\nThe cursor is a pointer that indicates a link. Often …\nA polygon with N vertices.\nA series of connected line segments in 2D space.\nA series of connected line segments in 3D space.\nThe strategy used to position this node\nRuns after the <code>GameTickUpdate</code> schedule\nThe schedule that runs once after <code>Startup</code>.\nThe schedule that contains logic that must run after <code>Update</code>…\nThis key is placed in the function section on some Apple …\nRuns after <code>GameTime</code> is updated, but before the …\nThe schedule that runs before <code>Startup</code>.\nThe schedule that contains logic that must run before …\nNotifies when a new composing text should be set at the …\nHolds onto all handles for all “preloaded” assets.\nSimilar to <code>AlphaMode::Blend</code>, however assumes RGB channel …\nAnything that runs before and may affect operation\nThe node has been pressed.\nUses the primary monitor of the system.\nA marker trait for 2D primitives\nA marker trait for 3D primitives\nPrtScr SysRq or Print Screen\nSchedule for processing this plugin’s ECS API, inserted …\nAssets will be “pre-processed”. This enables assets to …\nProgress reported by a system\nA progress indicator. The program is performing some …\nResource for tracking overall progress\nAdd this plugin to your app, to use this crate for the …\nExtension trait for systems with progress tracking\nA configurable <code>CameraProjection</code> that can select its …\nFound on Sun’s USB keyboard.\nThe “Producers”, the meat of the logic\nCommand that adds a child to an entity.\nCommand that pushes children to the end of the entity’s …\nSet this value in logical pixels.\nTrack minimum size should be a fixed pixel value\nTrack maximum size should be a fixed pixel value\nSpecial value to indicate that something should happen …\nA quaternion representing an orientation.\nSystem parameter that provides selective access to the …\nBuilder struct to create <code>QueryState</code> instances at runtime.\nProvides scoped access to a <code>World</code> state according to a …\n’ on a US keyboard.\nWill play the associated audio source once and remove the …\nA 2% contrast threshold was originally proposed by …\nConvenience methods for accessing raw level data by …\nAn infinite half-line starting at <code>origin</code> and going in …\nAn infinite half-line starting at <code>origin</code> and going in …\n<code>System</code> types that do not modify the <code>World</code> when run. This …\nReal time clock representing elapsed wall clock time.\nAn event that is sent whenever a window receives a …\nA rectangle defined by two opposite corners.\nA rectangle primitive\nShared borrow of an entity’s component with access to …\nThe core trait of <code>bevy_reflect</code>, used for accessing and …\nThe main derive macro used by <code>bevy_reflect</code> for deriving …\nA struct used to operate on reflected <code>Component</code> trait of a …\nA struct used to provide the default value of a type.\nA struct used to deserialize reflected instances of a type.\nType data that represents the <code>FromReflect</code> trait and allows …\nA struct used to operate on the reflected <code>FromWorld</code> trait …\nSomething that can be interpreted as a reflection path in …\nA struct used to operate on reflected <code>Resource</code> of a type.\nA struct used to serialize reflected instances of a type.\nA bundle that contains everything needed to make an entity …\nCommand to register a standard dynamic asset under the …\nA polygon where all vertices lie on a circle, equally far …\nRelative to all other nodes with the <code>PositionType::Relative</code>…\nDiscovers the best depth value based on binary search.\nCommand that removes children from an entity, and removes …\nCommand that removes the parent of an entity, and removes …\nEmitted whenever an <code>Asset</code> is removed.\nA <code>SystemParam</code> that yields entities that had their <code>T</code> …\nThe level background’s color (and image, if it exists) …\nRepresents a <em>possibly</em> repeated <code>GridTrack</code>.\nReset when finished.\nCommand that clear all children from an entity, replacing …\nShared borrow of a <code>Resource</code>.\nUnique mutable borrow of a <code>Resource</code>.\nThis is when <code>AssetKey</code> gets resolved to <code>Handle</code>\nA type that can be inserted into a <code>World</code> as a singleton.\nComponent that indicates that an LDtk level or world …\nResume\nsRGBA color\nRGBA color in the Linear sRGB colorspace (often …\nRightmost character is immediately to the left of the …\nThe right mouse button.\nThe horizontal value of the right stick.\nThe vertical value of the right stick.\nThe right thumb stick button.\nText is written right to left.\nThe first right trigger.\nThe second right trigger.\nThe value of the right <code>Z</code> button.\nA torus that has a ring. The major radius is greater than …\nAn automatically-implemented extension trait on <code>RngCore</code> …\nThe core of a random number generator.\nKeyframes for rotation.\nSame way as text direction along the main axis.\nItems are placed by filling each row in turn, adding new …\nCombines <code>Row</code> with the dense packing algorithm.\nIndicates that the item/row can be resized vertically. …\nOpposite way as text direction along the main axis.\nUpdates the running gamepad rumble effects.\nThe duration of one second.\nThe south border to be moved.\nKeyframes for scale.\nTo spawn a scene, you can use either:\nA component bundle for a <code>Scene</code> root.\nA filter used to control which types can be added to a …\nHandles spawning and despawning scenes in the world, …\nA collection of systems, and the metadata and executor …\nResource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s …\nPlugin for screen space ambient occlusion.\nScroll Lock\nThe south-east corner to be moved.\nSeed type, which is restricted to types …\nA random number generator that can be explicitly seeded.\nA segment of a line along a direction in 2D space.\nA segment of a line along a direction in 3D space.\nThe select button.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nA <strong>data structure</strong> that can be serialized into any data …\nSerialize value by using it’s <code>Display</code> implementation\nThe type of <code>SystemSet</code> this instance converts into.\nOption in LdtkSettings that determines clear color …\nA shader, as defined by its <code>ShaderSource</code> and <code>ShaderStage</code> …\nShift or ⇧\nShift or ⇧\nAdd this <code>Component</code> to an entity to draw its <code>Aabb</code> component.\nDynamic asset that is defined by a single handle\n/ on a US keyboard.\nSleep\nExtension trait on slices, providing random mutation and …\nDefines how a texture slice scales when resized\nThe texture will be cut in 9 slices, keeping the texture …\nThe bottom action button of the action pad (i.e. PS: …\n  (space)\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between any …\nThe items are distributed such that the gap between any …\nThe items are distributed such that the gap between and …\nThe items are distributed such that the gap between and …\nUsed to control spatial audio during playback.\nA <code>Bundle</code> that allows the correct positional rendering of …\nSettings for the listener for spatial audio sources.\nSpecifies data that should be ignored completely when …\nThe schedule that contains scene spawning.\nIndicates that a level has been triggered to spawn, but …\nThe level, with all of its layers, entities, etc., has …\nA sphere primitive\nA self-intersecting torus. The major radius is less than …\nA light that emits light in a given direction from a …\nA component bundle for spot light entities\nSpecifies the rendering properties of a sprite.\nA <code>Bundle</code> of components for drawing a single sprite from an …\nA <code>Bundle</code> of components for drawing a single sprite from a …\nThese asset variants can be loaded from configuration …\nThe asset defining a mapping from asset keys to an array …\nThe asset defining a mapping from asset keys to dynamic …\nA material with “standard” properties used in PBR …\nThe start button.\nThe items are packed towards the start of the axis.\nThe items are packed towards the start of the axis.\nThis item will be aligned with the start of the axis.\nThis item will be aligned with the start of the axis.\nThe items are packed towards the start of the axis.\nThe items are packed towards the start of the axis.\nThe schedule that runs once when the app starts.\nA finite-state machine whose transitions have associated …\nRuns state transitions.\nEvent sent when any state transition of <code>S</code> happens.\nTypes that can define world-wide states in a finite-state …\nThe standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …\nStep interpolation, the value of the start keyframe is …\nA marker type indicating the storage type used for this …\nThe slice will be stretched to fit the area\nThe items are stretched to fill the space they’re given.\nThe items are stretched to fill the space they’re given.\nThis item will be stretched to fill the container.\nThis item will be stretched to fill the space it’s given.\nThe items are stretched to fill the container along the …\nThe items are stretched to fill the container along the …\nRepresents either a String or a Multilines\nRepresents either Strings or Multilines\nA “strong” reference to a live (or loading) <code>Asset</code>. If …\nA trait used to power struct-like operations via reflection…\nDescribes the style of a UI container node\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nSuspend\nThe south-west corner to be moved.\nAn ECS system that can be added to a <code>Schedule</code>\nThe type of <code>System</code> that this instance converts into.\nA trait implemented for all functions that can be used as …\nTypes that identify logical groups of systems.\nDerive macro generating an impl of the trait <code>SystemSet</code>.\nAll true.\nAll true.\nAll true.\nTab or ⇥\nIndicates that this root <code>Node</code> entity should be rendered to …\nHelper for configuring and creating the default task …\nSetup of default task pools: <code>AsyncComputeTaskPool</code>, …\nIndicates text that may be selected. Often rendered as an …\nThe bundle of components needed to draw text in a 2D scene …\nA UI node that is text\nComponent used to draw a specific section of a texture.\nA builder which is used to create a texture atlas from …\nStores a map used to lookup the position of a texture in a …\nA dynamic texture atlas asset loaded from a sprite sheet\nSingle texture slice, representing a texture rect to draw …\nSlices a texture using the <strong>9-slicing</strong> technique. This …\nA reference to the thread-local generator\nThe slice will be tiled to fit the area\nComponent for storing user-defined, enum-based tags for a …\nComponent for storing user-defined custom data for a …\nThe texture will be repeated if stretched beyond …\nThe <code>Tileset</code> definition is the most important part among …\nA generic clock resource that tracks how much it has …\nTracks elapsed time. Enters the finished state once …\nSpecifies <code>Timer</code> behavior.\nA torus primitive, often representing a ring or donut shape\nThe type of torus determined by the minor and major radii\nA touch input event.\nA collection of <code>Touch</code>es.\nAny system tracking progress should be part of this set. …\nDescribe the position of an entity. If the entity has a …\nA <code>Bundle</code> of the <code>Transform</code> and <code>GlobalTransform</code> <code>Component</code>s, …\nSystem parameter for computing up-to-date <code>GlobalTransform</code>s.\nThe base plugin for handling <code>Transform</code> components\nA trait for point transformation methods.\nOccurs during the <code>PostUpdate</code> after the level has spawned, …\nKeyframes for translation.\nA triangle in 2D space\nA trait used to power tuple struct-like operations via …\nTurbo\nA static accessor to type paths and names.\nDerives the <code>TypePath</code> trait, providing a stable alternative …\nRegistration of default types to the <code>TypeRegistry</code> resource.\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nFor disabling UI elements; our systems for handling …\nThe 2D texture displayed for this UI node\nMaterials are used alongside <code>UiMaterialPlugin</code> and …\nAdds the necessary ECS resources and render logic to …\nA type which is commonly used to define margins, paddings …\nThe current scale of the UI.\nSpawn level with the given level <code>uid</code>.\nFound on Sun’s USB keyboard.\nThis variant is used when the key cannot be translated to …\nLoads assets from their <code>AssetSource</code>’s default <code>AssetReader</code>…\nRepresents an unset filter.\nAn untyped variant of <code>Handle</code>, which internally stores the …\nEmitted when the last <code>super::Handle::Strong</code> of an <code>Asset</code> is …\nThe schedule that contains app logic. Ideally containing …\nNewly spawned levels will be spawned with translations …\nNewly spawned levels will be spawned with a translation of …\nA stable-across-runs / const asset identifier. This will …\nAn entity that is visible in the hierarchy.\nSet this value in percent of the viewport’s larger …\nSet this value in percent of the viewport’s smaller …\nRepresents the possible value types for layout properties.\nPrint a warning for each <code>Entity</code> with a <code>T</code> component whose …\nDescribes how an attribute of a <code>Transform</code> or <code>MorphWeights</code> …\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nIndicates vertical-text that may be selected. Often …\nSet this value in percent of the viewport height\nAlgorithmically-computed indication of whether an entity …\nThe virtual game clock representing game time.\nUser indication of whether an entity is visible. …\nA <code>Bundle</code> of the <code>Visibility</code>, <code>InheritedVisibility</code>, and …\nShow overflowing items.\nAn entity with <code>Visibility::Visible</code> will be unconditionally …\nSet this value in percent of the viewport width\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nWakeUp\nThe “Consumers”, anything that depends on / wants …\nSame as Want, but with RCs to run only if anything notable …\nA “weak” reference to an <code>Asset</code>. If a <code>Handle</code> is …\nKeyframes for morph target weights.\nThe left action button of the action pad (i.e. PS: Square, …\nThe winding order for a set of points\nThe defining <code>Component</code> for window entities, storing …\nAn event that is sent when a window is repositioned in …\nA <code>Plugin</code> that defines an interface for windowing support …\nDefines where a <code>Window</code> should be placed on the screen.\nThe size limits on a <code>Window</code>.\nFilter that selects entities with a component <code>T</code>.\nFilter that selects entities without a component <code>T</code>.\nStores and exposes operations on entities, components, …\nStruct for adding children to an entity directly through …\n<code>Component</code> that indicates that an ldtk entity should be a …\nMultiple lines, if needed.\nSame as <code>FlexWrap::Wrap</code> but new lines will appear before …\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nIntrinsic three-axis rotation XYZ\nIntrinsic three-axis rotation XZY\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nIntrinsic three-axis rotation YXZ\nIntrinsic three-axis rotation YZX\nThe Z button.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA 3x3 matrix with all elements set to <code>0.0</code>.\nAll zeroes.\nAll zeroes.\nA 2x2 matrix with all elements set to <code>0.0</code>.\nA 4x4 matrix with all elements set to <code>0.0</code>.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nA duration of zero time.\nIndicates that this <code>Node</code> entity’s front-to-back ordering …\nIntrinsic three-axis rotation ZXY\nIntrinsic three-axis rotation ZYX\nThe length of the direction vector is zero or very close …\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nGet alpha.\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nInstantaneous acceleration of a point at parametric value <code>t</code>…\nReturns a reference to the the <code>FilteredAccess</code> that will be …\nAdd an asset to be tracked\nAdds the given <code>asset</code> and allocates a new strong <code>Handle</code> for …\nQueues a new asset to be tracked by the <code>AssetServer</code> and …\nPanics\nPushes a generic <code>Command</code> to the command queue.\nAdds two quaternions.\nAdds a single child.\nAdds a single child.\nAdd an <code>AssetCollection</code> to the <code>LoadingState</code>\nAdds a command to be executed, like <code>Commands::add</code>.\nAdd a <code>VariableCurve</code> to an <code>EntityPath</code>.\nRegister files to be loaded as a certain type of …\nSetup the application to manage events of type <code>T</code>.\nAdd a loading state to your app\nAdds two 2x2 matrices.\nAdds two 3x3 matrices.\nAdds two 4x4 matrices.\nAdds one or more <code>Plugin</code>s.\nAdds a new <code>schedule</code> to the <code>App</code>.\nAdds the specified <code>Schedule</code> to the world. The schedule can …\nInsert a map of asset keys with corresponding standard …\nAdds a system to the given schedule in this app’s …\nAdd a collection of systems to the schedule.\nAdd a <em>section</em> to the list in the layout and returns its …\nAdds a texture to be copied to the texture atlas.\nWhether or not to additively blend this input into the …\nAdvance this clock by adding a <code>delta</code> duration to it.\nAdvance this clock to a specific <code>elapsed</code> time.\nReturns the 3d affine transformation matrix as an <code>Affine3A</code>.\nRun after all systems in <code>set</code>. If <code>set</code> has any systems that …\nRuns before all systems in <code>set</code>. If <code>set</code> has any systems …\nthe state we’re in now\nRun after all systems in <code>set</code>.\nRun after all systems in <code>set</code>.\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nCreates a new <code>UiRect</code> where all sides have the same value.\nReturns true if all the elements are true, false otherwise.\nReturns true if all the elements are true, false otherwise.\nReturns true if all the elements are true, false otherwise.\nReturns <code>true</code> if all items in <code>inputs</code> have been pressed.\nReturns a reference to the underlying allocator.\nAllows the given component type, <code>T</code>, to be included in the …\nAllow the given type, <code>T</code>.\nUpdates the filter to allow all component types.\nCreates a filter where all types are allowed.\nUpdates the filter to allow all resource types.\nWhen doing ambiguity checking this ignores systems that …\nIgnore system order ambiguities caused by conflicts on …\nIgnore system order ambiguities caused by conflicts on …\nWhen doing ambiguity checking this ignores systems that …\nIgnore system order ambiguities caused by conflicts on …\nIgnore system order ambiguities caused by conflicts on …\nAllow the given type.\nShould we count assets that failed to load as progress? …\nAllows the given resource type, <code>T</code>, to be included in the …\nReturns this material’s <code>AlphaMode</code>. Defaults to …\nHow to apply the alpha channel of the <code>base_color_texture</code>.\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\n<code>Anchor</code> point of the sprite in the world\nTakes a function over mutable access to a <code>QueryBuilder</code>, …\nReturns a new run condition that only returns <code>true</code> if both …\nReturns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …\nReturns the angle (in radians) between two vectors.\nReturns the angle (in radians) for the minimal rotation …\nHandle to the animation clip being played.\nReturns true if any of the elements are true, false …\nReturns true if any of the elements are true, false …\nReturns true if any of the elements are true, false …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nChecks if any touch input was just canceled.\nReturns <code>true</code> if any item in <code>inputs</code> has just been pressed.\nChecks if any touch input was just pressed.\nReturns <code>true</code> if any item in <code>inputs</code> has just been released.\nChecks if any touch input was just released.\nReturns some vector that is orthogonal to the given one.\nGiven a unit vector return two other vectors that together …\nReturns any unit vector that is orthogonal to the given …\nReturns <code>true</code> if any item in <code>inputs</code> has been pressed.\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nConstruct an ad-hoc error from a string or existing non-…\nTake all commands from <code>other</code> and append them to <code>self</code>, …\nApplies a reflected value to this value.\nQuantize a value\nUses reflection to set the value of this <code>Component</code> type in …\nUses reflection to set the value of this <code>Resource</code> type in …\nInstructs the executor to call <code>System::apply_deferred</code> on …\nApplies any <code>Deferred</code> system parameters (or other system …\nDirectly applies any accumulated <code>Deferred</code> system …\nUses reflection to set the value of this <code>Component</code> type in …\nUses reflection to set the value of this <code>Resource</code> type in …\nIf a new state is queued in <code>NextState&lt;S&gt;</code>, this system:\nDraw an arc, which is a part of the circumference of a …\nDraw an arc, which is a part of the circumference of a …\nReturns the archetype that the current entity belongs to.\nReturns the archetype that the current entity belongs to.\nReturns the archetype that the current entity belongs to.\nReturns the system’s archetype component <code>Access</code>.\nReturns the archetype components accessed by this query.\nRetrieves this world’s <code>Archetypes</code> collection.\nGet the area of the circle\nGet the area of the ellipse\nGet the area of the triangle\nGet the area of the rectangle\nGet the area of the regular polygon\nGet the surface area of the sphere\nGet the surface area of the cuboid\nGet the total surface area of the cylinder\nGet the surface area of the capsule\nGet the total surface area of the cone\nGet the surface area of the torus. Note that this only …\nThe area that the projection covers relative to …\nDraw an arrow in 3D, from <code>start</code> to <code>end</code>. Has four tips for …\nDraw an arrow in 2D (on the xy plane), from <code>start</code> to <code>end</code>.\nReturns the value as a <code>&amp;dyn Any</code>.\nReturns the value as a <code>&amp;mut dyn Any</code>.\nAllows you access to the dereferenced value of this …\nAllows you access to the dereferenced value of this …\nAllows you access to the dereferenced value of this …\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts this value to a form where it can be compared with …\nReturns a copy of this clock as fully generic clock …\nConverts a <code>Color</code> to variant <code>Color::Hsla</code>\nConverts a <code>Color</code> to a <code>[f32; 4]</code> from HSL colorspace\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nReturns self as <code>IRect</code> (i32)\nReturns self as <code>IRect</code> (i32)\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nConverts a <code>Color</code> to variant <code>Color::Lcha</code>\nConverts a <code>Color</code> to a <code>[f32; 4]</code> from LCH colorspace\nConverts a <code>Color</code> to a <code>[f32; 4]</code> from linear RGB colorspace\nConverts Color to a u32 from linear RGB colorspace.\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nConverts this <code>QueryState</code> reference to a <code>QueryState</code> that …\nProvides a raw pointer to the data.\nGets a <code>QueryLens</code> with the same accesses as the existing …\nConverts this <code>QueryState</code> reference to a <code>QueryState</code> that …\nGets read-only access to all of the entity’s components.\nReturns self as <code>Rect</code> (f32)\nReturns self as <code>Rect</code> (f32)\nCasts this type to a reflected value.\nCasts this type to a mutable reflected value.\nConverts a <code>Color</code> to variant <code>Color::Rgba</code>\nConverts a <code>Color</code> to a <code>[f32; 4]</code> from sRGB colorspace\nConverts a <code>Color</code> to variant <code>Color::RgbaLinear</code>\nConverts <code>Color</code> to a <code>u32</code> from sRGB colorspace.\nConverts a <code>Color</code> to a <code>[u8; 4]</code> from sRGB colorspace\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nGets the parent <code>Entity</code> as a slice of length 1.\nUnwrap as a <code>LdtkJsonWithMetadata&lt;InternalLevels&gt;</code>. For use …\nGets the name of the entity as a <code>&amp;str</code>.\nGets the Iid of the entity as a &amp;str.\nImmutable access to the IID as a <code>&amp;str</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCreates a new <code>UnsafeWorldCell</code> view with complete …\nCreates a new <code>UnsafeWorldCell</code> view with only read access …\nReturns self as <code>URect</code> (u32)\nReturns self as <code>URect</code> (u32)\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nReturns the aspect ratio (width / height) of a 2D image.\nThe aspect ratio of the node (defined as <code>width / height</code>)\nThe aspect ratio (width divided by height) of the viewing …\nThe dynamic asset to be registered\nA system that applies accumulated asset change events to …\nConverts to <code>Arc&lt;[T]&gt;</code>.\nConverts to <code>Arc&lt;T&gt;</code>.\nUsed to determine number of async compute threads to …\nRun condition to run something “every N ticks”\nThe sprite sheet texture atlas, allowing to draw a custom …\nThe resulting (non-absorbed) color after white light …\nHow far, on average, light travels through the volume …\nRetrieves the data currently set to the vertex attribute …\nRetrieves the data currently set to the vertex attribute …\nReturns an iterator that yields references to the data of …\nReturns an iterator that yields mutable references to the …\nCreate a grid track which is automatically sized to fit …\nCreate a repeating set of grid tracks with automatic size\nPlace the grid item automatically (letting the <code>span</code> …\nControl whether the added texture should be converted to …\nAn array containing all tiles generated by Auto-layer …\nCreates a new <code>UiRect</code> where both <code>left</code> and <code>right</code> take the …\nThe type of the axis.\nConverts a Color to variant <code>Color::Rgba</code> and return blue in …\nReturn the local back vector (Z).\nEquivalent to <code>local_z()</code>\nThe background color, which serves as a “fill” for …\nThe background color, which serves as a “fill” for …\nThe background color, which serves as a “fill” for …\nThe background color that will fill the containing node\nThe background color, which serves as a “fill” for …\nGet the backtrace for this Error.\nReturn early with an error.\nGet the base of the cylinder as a <code>Circle</code>\nGet the base of the cone as a <code>Circle</code>\nGet the surface area of one base of the cylinder\nGet the surface area of the base of the cone\nThe color of the surface of the material before lighting.\nThe texture component of the material’s color before …\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nthe state we were in before\nRun before all systems in <code>set</code>.\nRun before all systems in <code>set</code>.\nReturns a bitmask with the lowest 2 bits set from the …\nReturns a bitmask with the lowest 3 bits set from the …\nReturns a bitmask with the lowest 4 bits set from the …\nBlends one or more values together.\nThe sprite borders, defining the 9 sections of the image\nThe amount of space between the margins of a node and its …\nThe color of the Node’s border\nThe color of the Node’s border\nCreates a new <code>UiRect</code> where <code>bottom</code> takes the given value, …\nThe value corresponding to the bottom side of the UI rect.\nPixel padding to the bottom\nThe vertical position of the bottom edge of the node.\nA direct scale factor multiplied with <code>color</code> before being …\nReturn the handle(s) defining this asset\nConfigures the <code>App</code> to which this plugin is added.\nConfigures the <code>Plugin</code>s that are to be added.\nConsume the builder, producing a <code>DynamicScene</code>.\nFinish configuring the <code>LoadingState</code>\nCreate a <code>QueryState</code> with the accesses of the builder.\nThe constructor used by the plugin when spawning entities …\nThe constructor used by the plugin when spawning …\nRetrieves this world’s <code>Bundles</code> collection.\nMarker component that signals this node is a button\nThe type of the button.\nManually bypasses change detection, allowing you to mutate …\nRaw data of the audio source.\nGrid-based height\nGrid-based height\nGrid-based height\nGrid-based width\nGrid-based width\nGrid-based width\nThe following data is used internally for various …\nThe calculated size based on the given image\nThe calculated size based on the given image\nThe calculated size based on the given image\nThe “html canvas” element selector.\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nRetrieves a <code>WorldCell</code>, which safely enables multiple …\nThe center point of the rectangle.\nThe center point of the rectangle.\nThe center point of the rectangle.\nSet the window to a specific monitor.\nDefines how the center part of the 9 slices will scale\nAn iterator of the chain of source errors contained by …\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of system sets.\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of systems.\nReads the current change tick of this world.\nReceived character.\nCheck if a value matches\nChecks any <code>Tick</code>s stored on this system and wraps their …\nIterates all component change ticks and clamps any older …\nChecks if the constraints are valid.\nConfigure the <code>ProgressPlugin</code> to check progress in the …\nThe schedule where progress checking should occur (<code>Last</code> by …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\n<code>Entity</code> whose parent must be removed.\nChild entity to add.\nReturns a reference to one random element of the slice, or …\nChoose one element at random from the iterator.\nChooses <code>amount</code> elements from the slice at random, without …\nCollects <code>amount</code> values at random from the iterator into a …\nCollects values at random from the iterator into a …\nSimilar to <code>choose_multiple</code>, but where the likelihood of …\nReturns a mutable reference to one random element of the …\nChoose one element at random from the iterator.\nSimilar to <code>choose</code>, but where the likelihood of each …\nSimilar to <code>choose_mut</code>, but where the likelihood of each …\nDraw a circle in 3D at <code>position</code> with the flat side facing …\nDraw a circle in 2D.\nCompute the circle passing through all three vertices of …\nThe circumcircle on which all vertices lie\nGet the radius of the circumcircle on which all vertices …\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nRun <code>Plugin::cleanup</code> for each plugin. This is usually …\nRuns after all plugins are built and finished, but before …\nClears the <code>just pressed</code> and <code>just released</code> data for every …\nClears <code>just_pressed</code>, <code>just_released</code>, and <code>just_canceled</code> data …\nRemoves all events.\nConsumes all available events.\nConsumes all available events.\nRuns both <code>clear_entities</code> and <code>clear_resources</code>, invalidating …\nRemoves all children from this entity. The <code>Children</code> …\nRemoves all children from this entity. The <code>Children</code> …\nThe clear color operation to perform on the render target.\nDespawns all entities in this <code>World</code>.\nClears the <code>just_canceled</code> state of the touch input and …\nClears the <code>just_pressed</code> state of the <code>input</code> and returns <code>true</code>…\nClears the <code>just_pressed</code> state of the touch input and …\nClears the <code>just_released</code> state of the <code>input</code> and returns …\nClears the <code>just_released</code> state of the touch input and …\nClears all resources in this <code>World</code>.\nClears the internal component tracker state.\nRun an <code>iyes_cli</code> console command\nClip overflowing items on both axes\nThe rect of the clip\nClip overflowing items on the x axis\nClip overflowing items on the y axis\nCopies a reference to a resource.\nMakes a clone of the <code>Arc</code> pointer.\nClones the struct into a <code>DynamicStruct</code>.\nClones the struct into a <code>DynamicTupleStruct</code>.\nClones the value as a <code>Reflect</code> trait object.\nCreates a <code>Handle::Weak</code> clone of this <code>Handle</code>, which will …\nCreates an <code>UntypedHandle::Weak</code> clone of this <code>UntypedHandle</code>…\nClone the scene.\nWhether to close windows when they are requested to be …\nFinds the point on the circle that is closest to the given …\nFinds the point on the rectangle that is closest to the …\nFinds the point on the sphere that is closest to the given …\nFinds the point on the cuboid that is closest to the given …\nComparison for two <code>Arc</code>s.\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nThe color of the box.\nThe sprite’s color tint\nThe color of the fog effect.\nThe color of the outline.\nThe size of the gutters between items in a horizontal …\nTemporarily provides access to the <code>Commands</code> for the …\nWhether this animation clip can run on entity with given …\nNumber of times the animation has completed.\nReturns a shared reference to the component <code>T</code> of the given …\nReturns the system’s component <code>Access</code>.\nReturns the components accessed by this query.\nReturns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.\nReturns a mutable reference to the component <code>T</code> of the …\nRetrieves this world’s <code>Components</code> collection.\nHow the alpha channel of textures should be handled while …\nUsed to determine number of compute threads to allocate\nCompute the Axis-Aligned Bounding Box of the mesh vertices …\nReturns the 3d affine transformation matrix from this …\nCalculates the <code>Mesh::ATTRIBUTE_NORMAL</code> of a mesh.\nComputes the <code>GlobalTransform</code> of the given entity from the …\nReturns the 3d affine transformation matrix as a <code>Mat4</code>.\nReturns the 3d affine transformation matrix from this …\nSlices the given <code>rect</code> into at least 9 sections. If the …\nReturns the transformation as a <code>Transform</code>.\nComputed values for this camera, such as the projection …\nReturns <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> associated with …\nThe currently used <code>GizmoConfig</code>\nThe currently used <code>GizmoConfigGroup</code>\nReturns mutable <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> …\nConfigure an existing loading state with, for example, …\nApplies the provided <code>ScheduleBuildSettings</code> to all …\nApplies the provided <code>ScheduleBuildSettings</code> to all …\nConfigures a collection of system sets in the provided …\nConfigures a collection of system sets in this schedule, …\nReturns the quaternion conjugate of <code>self</code>. For a unit …\nReturns <code>true</code> if the <code>gamepad</code> is connected.\nCheck if a point lies within this rectangle, inclusive of …\nCheck if a point lies within this rectangle, inclusive of …\nCheck if a point lies within this rectangle, inclusive of …\nReturns <code>true</code> if the <code>id</code> exists in this collection. …\nReturns <code>true</code> if the given <code>Entity</code> matches the query.\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component of type …\nReturns whether entity contains this <code>Component</code>\nDoes a schedule with the provided label already exist?\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …\nReturns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …\nReturns <code>true</code> if the current entity has a component with …\nReturns <code>true</code> if the current entity has a component with …\nReturns <code>true</code> if the current entity has a component with …\nWrap the error value with additional context.\nWrap the error value with additional context.\nReturns a reference to the context of this specific clock.\nReturns a mutable reference to the context of this …\nConfigure the <code>ProgressPlugin</code> to move on to the given state …\nThe <code>LoadingState</code> will set this Bevy <code>State</code> after all asset …\nGet a value in these units\nConvert a texture from a format to another. Only a few …\nGets the value of this <code>Component</code> type from entity from …\nGets the value of this <code>Resource</code> type from <code>source_world</code> and …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nCounts all vertices of the mesh.\nReturns the name of the crate the type is in, or <code>None</code> if …\nCreate a new asset collection from the <code>AssetServer</code>\nInserts the default thread pools into the given resource …\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nDraw a wireframe cube in 3D.\nWhether to cull the “front”, “back” or neither …\nThe cursor of this window.\nThe cursor position in this window in logical pixels.\n<code>VariableCurve</code>s for each bone. Indexed by the bone ID.\nAn array of custom tile metadata\nAn optional custom size for the sprite that will be used …\nAdds accesses required for <code>T</code> to self.\nLDtk json data and level metadata.\nDebug formatter for the value.\nConstructs an event at the debug level.\nCall <code>debug!</code> once per call site.\nConstructs a span at the debug level.\nBuild and return a <code>Self::Decoder</code> of the implementing type\nShould the window have decorations enabled?\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nDecrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nReference of the <strong>Entity definition</strong> UID\nAn ergonomic abbreviation for <code>Default::default()</code> to make …\nReturns the default <code>Circle</code> with a radius of <code>0.5</code>.\nReturns the default <code>Ellipse</code> with a half-width of <code>1.0</code> and a …\nReturns the default <code>Plane2d</code> with a normal pointing in the …\nReturns the default <code>Triangle2d</code> with the vertices <code>[0.0, 0.5]</code>…\nReturns the default <code>Rectangle</code> with a half-width and …\nReturns the default <code>RegularPolygon</code> with six sides (a …\nReturns the default <code>Capsule2d</code> with a radius of <code>0.5</code> and a …\nReturns the default <code>Sphere</code> with a radius of <code>0.5</code>.\nReturns the default <code>Plane3d</code> with a normal pointing in the …\nReturns the default <code>Cuboid</code> with a width, height, and depth …\nReturns the default <code>Cylinder</code> with a radius of <code>0.5</code> and a …\nReturns the default <code>Capsule3d</code> with a radius of <code>0.5</code> and a …\nReturns the default <code>Torus</code> with a minor radius of <code>0.25</code> and …\nCreates a schedule with a default label. Only use in …\nCreates a new <code>Arc&lt;T&gt;</code>, with the <code>Default</code> value for <code>T</code>.\nCreates an empty str inside an Arc\nCreates an empty <code>[T]</code> inside an Arc\nCreates an empty CStr inside an Arc\ndefault is a 1x1x1 all ‘1.0’ texture\nDefault <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).\nThe default color for bounding box gizmos.\nCreates image settings with linear sampling by default.\nCreates image settings with nearest sampling by default.\nThe default image sampler to use when <code>ImageSampler</code> is set …\nReturns the system’s default system sets.\nReturns this material’s deferred fragment shader. If …\nUsed for selecting the deferred lighting pass for deferred …\nReturns this material’s deferred vertex shader. If …\nReturns how much time has advanced since the last <code>update</code>, …\nThe change in the position of the cursor since the last …\nReturns how much time has advanced since the last <code>update</code>, …\nReturns how much time has advanced since the last <code>update</code>, …\nDenies the given component type, <code>T</code>, from being included in …\nDeny the given type, <code>T</code>.\nUpdates the filter to deny all component types.\nCreates a filter where all types are denied.\nUpdates the filter to deny all resource types.\nDeny the given type.\nDenies the given resource type, <code>T</code>, from being included in …\nAdd a bias to the view depth of the mesh which can be used …\nHow closer to the camera than real geometry the line …\nAdjust rendered depth.\nThe depth clear operation to perform for the main 3d pass.\nThe depth map used for parallax mapping.\nThe texture usages for the depth texture created for the …\nRemove a “console command”, if it exists\nDeserialize this value from the given Serde deserializer.\nDeserializes a reflected value.\nSchedule the despawn of all instances of the provided …\nDespawns the current entity.\nDespawns the given <code>entity</code>, if it exists. This will also …\nConvenience system for despawning all entities that match …\nDespawns all descendants of the given entity.\nSchedule the despawn of a scene instance, removing all its …\nImmediately despawns a scene instance, removing all its …\nImmediately despawns all scene instances scheduled for …\nImmediately despawns all scenes scheduled for despawn by …\nDespawns the provided entity alongside all descendants.\nDespawns the provided entity and its children.\nImmediately despawns all instances of a dynamic scene.\nFunction for despawning an entity and all its children\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns an iterator of all the input devices that have …\nGet the diameter of the circle\nGet the diameter of the sphere\nThe blurry image that represents diffuse radiance …\nThe amount of light transmitted <em>diffusely</em> through the …\nThe direction of the line. The line extends infinitely in …\nThe direction of the line segment\nThe direction of the line\nThe direction of the line\nThe direction of the ray.\nThe direction of the ray.\nDefines the text direction. For example, English is …\nColor used to modulate the influence of directional light …\nThe exponent applied to the directional light alignment …\nDiscard a part of the overstep amount.\nWhich layout algorithm to use when laying out this node’…\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nAdd a run condition to each contained system.\nDivides a quaternion by a scalar value. The quotient is …\nDivide <code>Duration</code> by <code>Duration</code> and return <code>f32</code>.\nDivide <code>Duration</code> by <code>Duration</code> and return <code>f64</code>.\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nDivide <code>Duration</code> by <code>f32</code>.\nDivide <code>Duration</code> by <code>f64</code>.\nUnits of work completed during this execution of the system\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>. The dot product …\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nSupport two-sided lighting by automatically flipping the …\nReturn the local down vector (-Y).\nEquivalent to <code>-local_y()</code>\nReturns a boxed object from a boxed trait object if the …\nAttempt to downcast the error object to a concrete type.\nDowncasts the value to type <code>T</code>, consuming the trait object.\nAttempt to downcast the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a …\nReturns a mutable reference to the object within the trait …\nDowncast this error object by mutable reference.\nDowncasts the value to type <code>T</code> by mutable reference.\nReturns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …\nReturns a reference to the object within the trait object …\nDowncast this error object by reference.\nDowncasts the value to type <code>T</code> by reference.\nDowncasts the <code>Arc&lt;dyn Any + Send + Sync&gt;</code> to a concrete …\nCreates a new <code>Weak</code> pointer to this allocation.\nCreates a draining iterator that removes all events.\nDraws all bounding boxes in the scene when set to <code>true</code>.\nslice draw size\nDrops the <code>Arc</code>.\nDuplicates the vertex attributes so that no vertices are …\nDuration of the clip, represented in seconds\nReturns the duration of the timer.\nDuration for which sound will be played\nReturns the amount of time elapsed from another instant to …\nClones this <code>SystemSet</code>.\nFeeds this value into the given <code>Hasher</code>.\nGiven a <code>time</code> within <code>0..=1</code>, returns an eased value that …\nApplies the function to the <code>Schedule</code> associated with <code>label</code>.\nReturns the speed the clock advanced relative to your …\nReturns the speed the clock advanced relative to your …\nReturns how much time has advanced since <code>startup</code>, as …\nReturns the time elapsed on the timer. Guaranteed to be …\nTime elapsed playing the animation\nReturns the amount of time elapsed since this instant.\nReturns how much time has advanced since <code>startup</code>, as <code>f32</code> …\nReturns how much time has advanced since <code>startup</code>, as <code>f64</code> …\nReturns how much time has advanced since <code>startup</code> modulo …\nReturns how much time has advanced since <code>startup</code> modulo …\nReturns the time elapsed on the timer as an <code>f32</code>. See also …\nReturns how much time has advanced since <code>startup</code> modulo …\nGets a <code>&amp;T</code> to the specified element on the given <code>Reflect</code> …\nGets a <code>&amp;mut T</code> to the specified element on the given <code>Reflect</code>…\nDraw an ellipse in 3D at <code>position</code> with the flat side …\nDraw an ellipse in 2D.\nIf this value is set, then it means that this atlas uses …\nColor the material “emits” to the camera.\nThe emissive map, multiplies pixels with <code>emissive</code> to get …\nReturns true if this sink has no more sounds to play.\nCreates a new empty <code>App</code> with minimal default configuration.\nSet to <code>false</code> to stop drawing gizmos.\nSpecifies which window control buttons should be enabled.\nPlace the grid item specifying the <code>end</code> grid line (letting …\nPlace the grid item specifying the <code>end</code> grid line and how …\nReturn early with an error if a condition is not satisfied.\nRetrieves this world’s <code>Entities</code> collection.\nEntities contained in the dynamic scene.\nRetrieves this world’s <code>Entities</code> collection mutably.\nRetrieves an <code>EntityRef</code> that exposes read-only operations …\nReturns the <code>EntityCommands</code> for the requested <code>Entity</code>.\nThe unique identifier of the entity as a fallback.\nTarget entity\nTarget entity\nRetrieves an <code>EntityWorldMut</code> that exposes read and write …\nRun an “entity system” when the UI node is clicked\nGets an Entry into the world for this entity and component …\nTileset tags using Enum values specified by …\nThe cubemaps that make up this environment map.\nEquality for two <code>Arc</code>s.\nConstructs an event at the error level.\nCall <code>error!</code> once per call site.\nConstructs a span at the error level.\nFetch underlying <code>Events</code>.\nWhether to exit the app when there are no open windows.\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nAdds access to self’s underlying <code>FilteredAccess</code> …\nGet the external angle of the regular polygon in degrees.\nGet the external angle of the regular polygon in radians.\nExtract entities from the builder’s <code>World</code>.\nExtract one entity from the builder’s <code>World</code>.\nExtract resources from the builder’s <code>World</code>.\nDetermines which falloff mode to use, and its parameters.\nThe distance from the camera in world units of the viewing …\nThe distance of the far clipping plane in world units.\nSAFETY: we call <code>fetch</code> for each member that implements <code>Fetch</code>…\nReturns a reference to the value of the field named <code>name</code> …\nReturns a reference to the value of the field with index …\nReturns a reference to the value of the field with index …\nReturns a mutable reference to the value of the field with …\nImmutable accessor for this item’s field instances, by …\nAn array of all custom fields and their values.\nReturns the number of fields in the struct.\nReturns the number of fields in the tuple struct.\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nThe default file path to use (relative to the project …\nFill any type implementing <code>Fill</code> with random data\nFill <code>dest</code> with random data.\nAdds filter from <code>T</code> to self.\nFind the index of the keyframe at or before the current …\nFind the level matching the given <code>LevelSelection</code>.\nRun <code>Plugin::finish</code> for each plugin. This is usually called …\nFinish adding this plugin to the <code>App</code>, once all plugins …\nConsumes the builder, and returns the newly created …\nReturns <code>true</code> if the timer has reached its duration.\nThe first child <code>Handle&lt;Mesh&gt;</code> primitive controlled by these …\nRetrieves the position of the first currently pressed …\nReturns the <code>Instant</code> when <code>Self::update</code> was first called, if …\nCreate a <code>fit-content()</code> grid track with percentage limit.\nCreate a repeating set of <code>fit-content()</code> grid tracks with …\nCreate a <code>fit-content()</code> grid track with fixed pixel limit.\nCreate a repeating set of <code>fit-content()</code> grid tracks with …\nCreate a grid track with a <code>minmax(0, Nfr)</code> size.\nCreate a repeating set of grid tracks with a <code>minmax(0, Nfr)</code>…\nThe initial length of a flexbox in the main axis, before …\nWhether a Flexbox container should be a row or a column. …\nDefines how much a flexbox item should grow if there’s …\nDefines how much a flexbox item should shrink if there’s …\nWhether a Flexbox container should wrap its contents onto …\nNormal map textures authored for DirectX have their …\nFlip the sprite along the <code>X</code> axis\nWhether the image should be flipped along its x-axis\nFlip the sprite along the <code>Y</code> axis\nWhether the image should be flipped along its y-axis\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nThe underlying function pointers implementing methods on …\nThe underlying function pointers implementing methods on …\nThe underlying function pointers implementing methods on …\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nWhether this node should block interaction with lower nodes\nGet/set whether the window is focused.\nWhether to enable fog for this material.\nIf this is not specified, then\nThe vertical height of rasterized glyphs in the font atlas …\nRuns <code>func</code> on each query result for the given <code>World</code>. This …\nRuns <code>f</code> on each read-only query item.\nRuns <code>func</code> on each query result for the given <code>World</code>. This …\nRuns <code>f</code> on each query item.\nRuns <code>func</code> on each query result for the given <code>World</code>. This …\nDescribes how hard the screen was pressed.\nSets the texture format for textures in the atlas.\nReturn the local forward vector (-Z).\nEquivalent to <code>-local_z()</code>\nThe vertical field of view (FOV) in radians.\nCreate a grid track with an <code>fr</code> size. Note that this will …\nCreate a repeating set of grid tracks with an <code>fr</code> size. …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns the fraction of the timer elapsed time (goes from …\nReturns the fraction of the timer remaining time (goes …\nReturns this materials fragment shader. If …\nReturns this material’s fragment shader. If …\nFrequency at which sound will be played\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert this <code>NonSendMut</code> into a <code>Mut</code>. This allows keeping …\nConvert this <code>ResMut</code> into a <code>Mut</code>. This allows keeping the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.")