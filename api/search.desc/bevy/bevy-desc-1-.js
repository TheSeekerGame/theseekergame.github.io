searchState.loadedDescShard("bevy", 1, "Runs the system with the given input in the world.\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems in this set(s) only if the <code>Condition</code> is …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nRuns this system with the given input in the world.\nRuns the system with the given input in the world. Unlike …\nFlags this value as having been changed.\nOverwrites this smart pointer with the given value, if and …\nManually sets the change tick recording the time when this …\nOverwrites the tick indicating the last time this system …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nIdentical to <code>in_state</code> - use that instead.\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nThe state being entered.\nReturns the <code>TypeId</code> of the underlying system type.\nUpdate the system’s archetype component <code>Access</code>.\nUsed as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …\nTrait that is only implemented for <code>Aligned</code> and <code>Unaligned</code> …\nType-erased Box-like pointer to some unknown type chosen …\nType-erased borrow of some unknown type chosen when …\nType-erased mutable borrow of some unknown type chosen …\nConceptually equivalent to <code>&amp;&#39;a [T]</code> but with length …\nUsed as a type argument to <code>Ptr</code>, <code>PtrMut</code> and <code>OwningPtr</code> to …\nExtension trait for helper methods on <code>UnsafeCell</code>\nCreates a dangling pointer with specified alignment. See …\nSafety\nSafety\nReturns a copy of the contained value.\nTracks read and write access to specific elements in a …\nA filter on a component that only retains results added …\nThe <code>Entity</code> was requested mutably more than once.\nThe <code>AnyOf</code> query parameter fetches entities with any of the …\nA marker trait to indicate that the filter works at an …\nDictates how a parallel query chunks up large …\nA filter on a component that only retains results added or …\nPer archetype/table state used by this <code>WorldQuery</code> to fetch …\nAn <code>Access</code> that has been filtered to include and exclude …\nA collection of <code>FilteredAccess</code> instances.\nReturns a bool that describes if an entity has the …\nReturns true if (and only if) this Filter relies strictly …\nReturns true if (and only if) every table of every …\nThe item returned by this <code>WorldQuery</code> For <code>QueryData</code> this …\nThe given <code>Entity</code> does not have the requested component.\nThe <code>Query</code> does not have read access to the requested …\nThe <code>Query</code> does not have write access to the requested …\nMultiple entities fit the query.\nNo entity fits the query.\nThe given <code>Entity</code> does not exist.\nThe requested <code>Entity</code> does not exist.\n<code>WorldQuery</code> used to nullify queries by turning <code>Query&lt;D&gt;</code> …\nA filter that tests if any of the given filters apply.\nBuilder struct to create <code>QueryState</code> instances at runtime.\nAn iterator over <code>K</code>-sized combinations of query items …\nAn error that occurs when retrieving a specific <code>Entity</code>’s …\nTypes that can be fetched from a <code>World</code> using a <code>Query</code>.\nImplement <code>QueryData</code> to use a struct as a data parameter in …\nThe given <code>Entity</code>’s components do not match the query.\nAn error that occurs when retrieving a specific <code>Entity</code>’s …\nTypes that filter the results of a <code>Query</code>.\nImplement <code>QueryFilter</code> to use a struct as a filter …\nThe item type returned when a <code>WorldQuery</code> is iterated over\nAn <code>Iterator</code> over query results of a <code>Query</code>.\nAn <code>Iterator</code> over the query items generated from an …\nA parallel iterator over query results of a <code>Query</code>.\nAn error that occurs when evaluating a <code>Query</code> or <code>QueryState</code> …\nProvides scoped access to a <code>World</code> state according to a …\nThe read-only variant of the item type returned when a …\nThe read-only variant of this <code>QueryData</code>, which satisfies …\nA <code>QueryData</code> that is read only.\nState used to construct a <code>Self::Fetch</code>. This will be cached …\nFilter that selects entities with a component <code>T</code>.\nFilter that selects entities without a component <code>T</code>.\nTypes that can be used as parameters in a <code>Query</code>. Types …\nReturns a reference to the the <code>FilteredAccess</code> that will be …\nReturns a reference to the underlying unfiltered access.\nReturns a mutable reference to the underlying unfiltered …\nAdds the filtered access to the set.\nAdds an archetypal (indirect) access to the element given …\nAdds access to the element given by <code>index</code>.\nAdds access to the element given by <code>index</code>.\nAdds exclusive access to the element given by <code>index</code>.\nAdds exclusive access to the element given by <code>index</code>.\nTakes a function over mutable access to a <code>QueryBuilder</code>, …\nAdds a <code>With</code> filter: corresponds to a conjunction (AND) …\nAdds a <code>Without</code> filter: corresponds to a conjunction (AND) …\nAppends an array of filters: corresponds to a disjunction …\nReturns the indices of the elements that this has an …\nReturns the archetype components accessed by this query.\nConverts this <code>QueryState</code> reference to a <code>QueryState</code> that …\nConverts this <code>QueryState</code> reference to a <code>QueryState</code> that …\nThe upper and lower limits for how large a batch of …\nConfigures the number of batches to assign to each thread …\nThe number of batches per thread in the <code>ComputeTaskPool</code>. …\nChanges the batching strategy used when iterating.\nCreate a <code>QueryState</code> with the accesses of the builder.\nRemoves all accesses.\nRemoves all accesses stored in this set.\nRemoves all writes.\nReturns a reference to the unfiltered access of the entire …\nReturns the components accessed by this query.\nAdds accesses required for <code>T</code> to self.\nAdds all access from <code>other</code>.\nAdds all access and filters from <code>other</code>.\nAdds all of the accesses from the passed set to <code>self</code>.\nAdds access to self’s underlying <code>FilteredAccess</code> …\nAdds all of the accesses from <code>other</code> to <code>self</code>.\nFetch <code>Self::Item</code> for either the given <code>entity</code> in the …\nGet next result from the query\nGet next combination of queried components\nAdds filter from <code>T</code> to self.\nSafety\nDeclares a batching strategy with a fixed batch size.\nRuns <code>func</code> on each query result in parallel.\nRuns <code>func</code> on each query result for the given <code>World</code>. This …\nRuns <code>func</code> on each query result for the given <code>World</code>. This …\nRuns <code>func</code> on each query result for the given <code>World</code>. This …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>QueryState</code> from a given <code>QueryBuilder</code> and …\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nReturns a mutable reference to the component <code>T</code> of the …\nReturns a vector of elements that the access and <code>other</code> …\nReturns a vector of elements that this and <code>other</code> cannot …\nReturns a vector of elements that this set and <code>other</code> …\nReturns a vector of elements that this set and <code>other</code> …\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nReturns the read-only query results for the given array of …\nReturns the query results for the given array of <code>Entity</code>.\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nReturns a single immutable query result when there is …\nReturns a single mutable query result when there is …\nReturns a query result when there is exactly one entity …\nReturns a query result when there is exactly one entity …\nAttempts to initializes a <code>State</code> for this <code>WorldQuery</code> type.\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nIncreases the set capacity to the specified amount.\nReturns <code>true</code> if this can access anything.\nReturns <code>true</code> if this accesses anything mutably.\nReturns true if this has an archetypal (indirect) access …\nReturns <code>true</code> if this can access the element given by <code>index</code>.\nReturns <code>true</code> if this has access to all indexed elements …\nReturns <code>true</code> if this can exclusively access the element …\nReturns <code>true</code> if this has write access to all indexed …\nCreates a new instance of this fetch.\nCreates and initializes a <code>State</code> for this <code>WorldQuery</code> type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the access and <code>other</code> can be active at the …\nReturns <code>true</code> if this and <code>other</code> can be active at the same …\nReturns <code>true</code> if this and <code>other</code> can be active at the same …\nChecks if the query is empty for the given <code>World</code>, where …\nReturns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …\nReturns <code>true</code> if the set is a subset of another, i.e. <code>other</code> …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an iterator over the query items generated from an …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns the archetypes matched by this query.\nReturns the tables matched by this query.\nReturns <code>true</code> if this query matches a set of components. …\nReturns <code>true</code> if this query matches a set of components. …\nConfigures the maximum allowed batch size of this instance.\nConfigures the minimum allowed batch size of this instance.\nAdds <code>&amp;mut T</code> to the <code>FilteredAccess</code> of self.\nCreates a new builder with the accesses required for <code>Q</code> and …\nCreates a new <code>QueryState</code> from a given <code>World</code> and inherits …\nCreates an empty <code>Access</code> collection.\nCreates a new unconstrained default batching strategy.\nUpdate the current <code>QueryState</code> with information from the …\nTakes a function over mutable access to a <code>QueryBuilder</code>, …\nTakes a function over mutable access to a <code>QueryBuilder</code>, …\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the query results for the …\nSets this as having access to all indexed elements (i.e. …\nSets the underlying unfiltered access as having access to …\nReturns the indices of the elements this has non-exclusive …\nReturns the indices of the elements this has access to.\nAdds <code>&amp;T</code> to the <code>FilteredAccess</code> of self.\nSets available accesses for implementors with dynamic …\nAdjusts internal state to account for the next <code>Archetype</code>. …\nAdjusts internal state to account for the next <code>Table</code>. This …\nThis function manually implements subtyping for the query …\nReturns a single immutable query result when there is …\nReturns a single mutable query result when there is …\nTransmute the existing builder adding required accesses. …\nUse this to transform a <code>QueryState</code> into a more generic …\nTransmute the existing builder adding required accesses. …\nCreates a new <code>QueryState</code> with the same underlying …\nFor the given <code>archetype</code>, adds any component accessed used …\nUpdates the state’s internal view of the <code>World</code>’s …\nUpdates the state’s internal view of the <code>world</code>’s …\nAdds any component accesses used by this <code>WorldQuery</code> to …\nPanics\nAdds <code>With&lt;T&gt;</code> to the <code>FilteredAccess</code> of self.\nReturns the indices of the elements that this access …\nAdds <code>With&lt;T&gt;</code> to the <code>FilteredAccess</code> of self from a runtime …\nAdds <code>Without&lt;T&gt;</code> to the <code>FilteredAccess</code> of self.\nReturns the indices of the elements that this access …\nAdds <code>Without&lt;T&gt;</code> to the <code>FilteredAccess</code> of self from a …\nReturns a reference to the world passed to <code>Self::new</code>.\nReturns a mutable reference to the world passed to …\nSets this as having mutable access to all indexed elements …\nSets the underlying unfiltered access as having mutable …\nReturns the indices of the elements this has exclusive …\nA <code>Resource</code> storing <code>TypeRegistry</code> for type registrations …\nA struct used to operate on reflected <code>Bundle</code> trait of a …\nThe raw function pointers needed to make up a <code>ReflectBundle</code>…\nAn extension trait for <code>EntityCommands</code> for reflection …\nA struct used to operate on reflected <code>Component</code> trait of a …\nThe raw function pointers needed to make up a …\nA struct used to operate on the reflected <code>FromWorld</code> trait …\nThe raw function pointers needed to make up a …\nFor a specific type of component, this maps any fields …\nA struct used to operate on reflected <code>Resource</code> of a type.\nThe raw function pointers needed to make up a …\nUses reflection to set the value of this <code>Bundle</code> type in …\nUses reflection to set the value of this <code>Component</code> type in …\nUses reflection to set the value of this <code>Resource</code> type in …\nFunction pointer implementing <code>ReflectBundle::apply()</code>.\nFunction pointer implementing <code>ReflectComponent::apply()</code>.\nFunction pointer implementing <code>ReflectResource::apply()</code>.\nUses reflection to set the value of this <code>Bundle</code> type in …\nUses reflection to set the value of this <code>Component</code> type in …\nUses reflection to set the value of this <code>Resource</code> type in …\nFunction pointer implementing …\nFunction pointer implementing …\nFunction pointer implementing …\nReturns whether entity contains this <code>Component</code>\nFunction pointer implementing <code>ReflectComponent::contains()</code>.\nGets the value of this <code>Component</code> type from entity from …\nGets the value of this <code>Resource</code> type from <code>source_world</code> and …\nFunction pointer implementing <code>ReflectComponent::copy()</code>.\nFunction pointer implementing <code>ReflectResource::copy()</code>.\nThe underlying function pointers implementing methods on …\nThe underlying function pointers implementing methods on …\nThe underlying function pointers implementing methods on …\nThe underlying function pointers implementing methods on …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs default reflected <code>FromWorld</code> from world using …\nFunction pointer implementing …\nInsert a reflected <code>Bundle</code> into the entity like <code>insert()</code>.\nInsert a reflected <code>Component</code> into the entity like <code>insert()</code>.\nInsert a reflected <code>Resource</code> into the world like <code>insert()</code>.\nFunction pointer implementing <code>ReflectBundle::insert()</code>.\nFunction pointer implementing <code>ReflectComponent::insert()</code>.\nFunction pointer implementing <code>ReflectResource::insert()</code>.\nAdds the given boxed reflect component to the entity using …\nSame as <code>insert_reflect</code>, but using the <code>T</code> resource as type …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA general method for applying <code>MapEntities</code> behavior to all …\nA general method for applying <code>MapEntities</code> behavior to …\nCreate a custom implementation of <code>ReflectBundle</code>.\nGet the default set of <code>ReflectBundleFns</code> for a specific …\nCreate a custom implementation of <code>ReflectComponent</code>.\nGet the default set of <code>ReflectComponentFns</code> for a specific …\nCreate a custom implementation of <code>ReflectFromWorld</code>.\nGet the default set of <code>ReflectFromWorldFns</code> for a specific …\nCreate a custom implementation of <code>ReflectResource</code>.\nGet the default set of <code>ReflectResourceFns</code> for a specific …\nGets the value of this <code>Component</code> type from the entity as a …\nGets the value of this <code>Resource</code> type from the world as a …\nFunction pointer implementing <code>ReflectComponent::reflect()</code>.\nFunction pointer implementing <code>ReflectResource::reflect()</code>.\nGets the value of this <code>Component</code> type from the entity as a …\nGets the value of this <code>Resource</code> type from the world as a …\nFunction pointer implementing …\nSafety\nSafety\nFunction pointer implementing …\nFunction pointer implementing …\nRemoves this <code>Bundle</code> type from the entity. Does nothing if …\nRemoves this <code>Component</code> type from the entity. Does nothing …\nRemoves this <code>Resource</code> type from the world. Does nothing if …\nFunction pointer implementing <code>ReflectBundle::remove()</code>.\nFunction pointer implementing <code>ReflectComponent::remove()</code>.\nFunction pointer implementing <code>ReflectResource::remove()</code>.\nRemoves from the entity the component with the given type …\nSame as <code>remove_reflect</code>, but using the <code>T</code> resource as type …\nWrapper around <code>Entity</code> for <code>RemovedComponents</code>. Internally, …\nStores the <code>RemovedComponents</code> event buffers for all types …\nWrapper around a <code>ManualEventReader&lt;RemovedComponentEntity&gt;</code> …\nA <code>SystemParam</code> that yields entities that had their <code>T</code> …\nIterator over entities that had a specific component …\nIterator over entities that had a specific component …\nConsumes all available events.\nFetch underlying <code>Events</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the event storage for a given component.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if there are no events available to read.\nDetermines the number of removal events available to be …\nCreates an empty storage buffer for component removal …\nIterates over the events this <code>RemovedComponents</code> has not …\nLike <code>read</code>, except also returning the <code>EventId</code> of the events.\nFetch underlying <code>ManualEventReader</code>.\nFetch underlying <code>ManualEventReader</code> mutably.\nDestructures to get a mutable reference to the …\nSends a removal event for the specified component.\nFor each type of component, swaps the event buffers and …\nSystems with conflicting access have indeterminate run …\nCombines the outputs of two systems using the <code>&amp;&amp;</code> operator.\nA <code>SystemSet</code> implicitly created when using …\nA type-erased run condition stored in a <code>Box</code>.\nChain systems into dependencies\nA system that determines if one or more scheduled systems …\nConfiguration for a tuple of nested <code>Configs</code> instances.\nConfiguration for a tuple of nested <code>Configs</code> instances.\nConfiguration for a tuple of nested <code>Configs</code> instances.\nTried to order a system (set) relative to a system set it …\nA directed acyclic graph structure.\nThe dependency graph contains a cycle.\nA system (set) has been told to run before itself.\nAn object safe version of <code>Eq</code>. This trait is automatically …\nOccurrences are logged and result in errors.\nSpecifies how a <code>Schedule</code> will be run.\nThe hierarchy of system sets contains a cycle.\nA system set contains itself.\nThe hierarchy of system sets contains redundant edges.\nOccurrences are completely ignored.\nA shorthand for <code>Interned&lt;dyn ScheduleLabel&gt;</code>.\nA shorthand for <code>Interned&lt;dyn SystemSet&gt;</code>.\nTypes that can convert into a <code>SystemConfigs</code>.\nTypes that can be converted into a <code>SystemSet</code>.\nTypes that can convert into a <code>SystemSetConfigs</code>.\nSpecifies how schedule construction should respond to …\nNew-typed <code>ThreadExecutor</code> <code>Resource</code> that is used to run …\nRuns the schedule using a thread pool. Non-conflicting …\nRuns the schedule using a thread pool. Non-conflicting …\nThe next state of <code>State&lt;S&gt;</code>.\nNodes are allowed to run in any order.\nStores configuration for a single generic node.\nConfiguration for a single node.\nConfiguration for a single node.\nConfiguration for a single node.\nA collections of generic <code>NodeConfig</code>s.\nUnique identifier for a system or system set stored in a …\nInvokes <code>Not</code> with the output of another system.\nThe label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> enters …\nThe label of a <code>Schedule</code> that runs whenever <code>State&lt;S&gt;</code> exits …\nThe label of a <code>Schedule</code> that <strong>only</strong> runs whenever <code>State&lt;S&gt;</code> …\nCombines the outputs of two systems using the <code>||</code> operator.\nA collection of systems, and the metadata and executor …\nCategory of errors encountered during schedule …\nSpecifies miscellaneous settings for schedule construction.\nMetadata for a <code>Schedule</code>.\nA strongly-typed class of labels used to identify an […\nDerive macro generating an impl of the trait <code>ScheduleLabel</code>.\nError to denote that <code>Schedule::initialize</code> or <code>Schedule::run</code> …\nResource that stores <code>Schedule</code>s mapped to <code>ScheduleLabel</code>s …\nIdentifier for a system set.\nThe type of <code>SystemSet</code> this instance converts into.\nTried to order system sets that share systems.\nLike <code>SingleThreaded</code> but calls <code>apply_deferred</code> immediately …\nA variant of <code>SingleThreadedExecutor</code> that calls …\nRuns the schedule using a single thread.\nRuns the schedule using a single thread.\nA finite-state machine whose transitions have associated …\nEvent sent when any state transition of <code>S</code> happens.\nTypes that can define world-wide states in a finite-state …\nResource for controlling system stepping behavior\nIdentifier for a system.\nStores configuration for a single system.\nA collection of <code>SystemConfig</code>.\nHolds systems and conditions of a <code>Schedule</code> sorted in …\nTypes that identify logical groups of systems.\nDerive macro generating an impl of the trait <code>SystemSet</code>.\nA <code>SystemSet</code> with scheduling metadata.\nA collection of <code>SystemSetConfig</code>.\nA <code>SystemSet</code> grouping instances of the same function.\nTried to order a system (set) relative to all instances of …\nTried to run a schedule before all of its systems have …\nOccurrences are logged only.\nRun nodes in order. If there are deferred parameters in …\nRun nodes in order. This will not add <code>apply_deferred</code> …\nEnable stepping for the provided schedule\nAdd a collection of systems to the schedule.\nRun after all systems in <code>set</code>. If <code>set</code> has any systems that …\nRuns before all systems in <code>set</code>. If <code>set</code> has any systems …\nthe state we’re in now\nRun after all systems in <code>set</code>.\nRun after all systems in <code>set</code>.\nIgnore system order ambiguities caused by conflicts on …\nIgnore system order ambiguities caused by conflicts on …\nEnsure this system always runs when stepping is enabled\nEnsure this system instance always runs when stepping is …\nDetermines whether the presence of ambiguities (systems …\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\nSuppress warnings and errors that would result from these …\nSuppress warnings and errors that would result from …\nReturns a new run condition that only returns <code>true</code> if both …\nInstructs the executor to call <code>System::apply_deferred</code> on …\nDirectly applies any accumulated <code>Deferred</code> system …\nIf a new state is queued in <code>NextState&lt;S&gt;</code>, this system:\nCasts the type to <code>dyn Any</code>.\nCasts this value to a form where it can be compared with …\nCasts this value to a form where it can be compared with …\nAuto insert <code>apply_deferred</code> systems into the schedule, when …\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nRuns before all systems in <code>set</code>. If <code>self</code> has any systems …\nthe state we were in before\nRun before all systems in <code>set</code>.\nRun before all systems in <code>set</code>.\nSystem to call denoting that a new render frame has begun\nBuild a <code>SystemSchedule</code> optimized for scheduler access from …\nA cached topological ordering of the graph.\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of system sets.\nTreat this collection as a sequence of systems.\nTreat this collection as a sequence of systems.\nClear a breakpoint for the system\nclear a breakpoint for system instance\nclear a breakpoint for system instance\nClear behavior set for all systems in the provided <code>Schedule</code>\nClear any behavior set for the system\nA collection of run conditions that may be useful in any …\nApplies the provided <code>ScheduleBuildSettings</code> to all …\nConfigures a collection of system sets in this schedule, …\nReturns the list of systems that conflict with each other, …\nconvert conflicts to human readable format\nDoes a schedule with the provided label already exist?\nRun all remaining systems in the stepping frame during the …\nReturn our current position within the stepping frame\nCreates a schedule with a default label. Only use in …\nReturns the <code>Dag</code> of the dependencies in the schedule.\nDisable stepping, resume normal systems execution\nAdd a run condition to each contained system.\nClones this <code>ScheduleLabel</code>.\nClones this <code>SystemSet</code>.\nThis method tests for <code>self</code> and <code>other</code> values to be equal.\nFeeds this value into the given <code>Hasher</code>.\nFeeds this value into the given <code>Hasher</code>.\nBegin stepping at the start of the next frame\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe state being exited.\nReturns a reference to the schedule associated with <code>label</code>, …\nGet the current state.\nReturns the schedule’s current <code>ScheduleBuildSettings</code>.\nReturns the schedule’s current execution strategy.\nReturns a mutable reference to the schedule associated …\nReturns the set at the given <code>NodeId</code>, if it exists.\nReturns the system at the given <code>NodeId</code>, if it exists.\nReturns the <code>ScheduleGraph</code>.\nThe directed graph of the stored systems, connected by …\nReturns a mutable reference to the <code>ScheduleGraph</code>.\nReturns the <code>Dag</code> of the hierarchy.\nDetermines whether the presence of redundant edges in the …\nSuppress warnings and errors that would result from …\nList of <code>ComponentId</code>s to ignore when reporting system order …\nAdd these systems to the provided <code>set</code>.\nAdd these system sets to the provided <code>set</code>.\nAdds a new boxed system set to the systems.\nInitializes any newly-added systems and conditions, …\nInitializes any newly-added systems and conditions by …\nInserts a labeled schedule into the map.\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert into a <code>SystemConfigs</code>.\nConverts this instance to its associated <code>SystemSet</code> type.\nReturns <code>true</code> if this system set is an <code>AnonymousSet</code>.\nCheck if stepping is enabled\nReturns <code>true</code> if the identified node is a system set.\nReturns <code>true</code> if the identified node is a system.\nReturns an iterator over all schedules. Iteration order is …\nIterate through the <code>ComponentId</code>’s that will be ignored.\nReturns an iterator over mutable references to all …\nGet the <code>InternedScheduleLabel</code> for this <code>Schedule</code>.\nEnsure this system never runs when stepping is enabled\nEnsure this system instance never runs when stepping is …\nCreates a new multi-threaded executor for use with a …\nConstructs an empty <code>Schedule</code>.\nCreates a new executor that can be used to run systems on …\nCreates a new simple executor for use in a <code>Schedule</code>. This …\nCreates a new single-threaded executor for use in a …\nCreates an empty <code>SystemSchedule</code>.\nConstructs an empty <code>Schedules</code> with zero initial capacity.\nCreates an empty <code>ScheduleGraph</code> with default settings.\nDefault build settings. See the field-level documentation …\nCreates a new state with a specific value.\nCreate a new instance of the <code>Stepping</code> resource.\nReturns a new run condition that returns <code>true</code> if either …\nPrints the names of the components and resources with <code>info</code>\nRemoves the schedule corresponding to the <code>label</code> from the …\nRemoves the (schedule, label) pair corresponding to the …\nDisable stepping for the provided schedule\nIf set to true, report all system sets the conflicting …\nRuns all systems in this schedule on the <code>world</code>, using its …\nRun the enter schedule (if it exists) for the current …\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems in this set(s) only if the <code>Condition</code> is …\nAdds a new boxed run condition to the systems.\nReturn the list of schedules with stepping enabled in the …\nTentatively set a planned state transition to <code>Some(state)</code>.\nSet whether the schedule applies deferred system buffers …\nReturns the set at the given <code>NodeId</code>.\nAdd a breakpoint for system\nAdd a breakpoint for system instance\nChanges miscellaneous build settings.\nSets the schedule’s execution strategy.\nget the list of systems this schedule should skip for this …\nRun the next system during the next render frame\nReturns the system at the given <code>NodeId</code>.\nReturns an iterator over all system sets in this schedule.\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nReturns an iterator over all systems in this schedule.\nReturns an iterator over all systems in this schedule.\nReturns the number of systems in this schedule.\nThe state being entered.\nIf set to true, node names will be shortened instead of …\nSee <code>Chain</code> for usage.\nRun conditions applied to everything in the tuple.\nConfiguration for each element of the tuple.\nSee <code>Chain</code> for usage.\nRun conditions applied to everything in the tuple.\nConfiguration for each element of the tuple.\nSee <code>Chain</code> for usage.\nRun conditions applied to everything in the tuple.\nConfiguration for each element of the tuple.\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if there …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nGenerates a <code>Condition</code> that inverses the result of passed …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nIdentical to <code>in_state</code> - use that instead.\nA type-erased contiguous container for data of a …\nA sparse data structure of <code>Component</code>s.\nThe type-erased backing storage and metadata for a single …\nThe backing store for all <code>Resource</code>s stored in the <code>World</code>.\nA data structure that blends dense and sparse storage\nRepresents something that can be stored in a <code>SparseSet</code> as …\nA collection of <code>ComponentSparseSet</code> storages, indexed by …\nThe raw data stores of a <code>World</code>\nA column-oriented structure-of-arrays based storage for …\nAn opaque unique ID for a <code>Table</code> within a <code>World</code>.\nA opaque newtype for rows in <code>Table</code>s. Specifies a single …\nA collection of <code>Table</code> storages, indexed by <code>TableId</code>\nGets the underlying table index from the ID.\nGets the index of the row as a <code>usize</code>.\nGets the underlying table index from the ID.\nGets the index of the row as a <code>usize</code>.\nReturns the total number of elements the <code>SparseSet</code> can …\nClears all resources.\nClears all of the elements from the sparse set.\nClears the column, removing all values.\nGets the number of components being stored in the table.\nReturns <code>true</code> if the sparse set has a component value for …\nReturns <code>true</code> if the sparse set contains a value for <code>index</code>.\nThe <code>TableId</code> of the <code>Table</code> without any components.\nFetches a read-only slice of the entities stored within …\nGets the maximum number of entities the table can …\nGets the number of entities currently being stored in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>TableId</code>.\nCreates a <code>TableRow</code>.\nCreates a new <code>TableId</code>.\nCreates a <code>TableRow</code> from a <code>usize</code> index.\nFetches a <code>Table</code> by its <code>TableId</code>.\nGets read-only access to a resource, if it exists.\nReturns a reference to the entity’s component value.\nReturns a reference to the value for <code>index</code>.\nGets a reference to the <code>ComponentSparseSet</code> of a <code>ComponentId</code>…\nFetches a reference to the data and change detection ticks …\nReturns a reference to the “added” tick of the entity…\nFetches the “added” change detection tick for the …\nFetches the “added” change detection tick for the …\nFetches the slice to the <code>Column</code>’s “added” change …\nReturns a reference to the “changed” tick of the entity…\nFetches the “changed” change detection tick for the …\nFetches the “changed” change detection tick for the …\nFetches the slice to the <code>Column</code>’s “changed” change …\nFetches a read-only reference to the <code>Column</code> for a given …\nReturns a reference to the resource, if it exists.\nFetches a read-only reference to the data at <code>row</code>.\nFetches a mutable reference to the data at <code>row</code>.\nFetches the data pointer to the first element of the <code>Column</code>…\nFetches the slice to the <code>Column</code>’s data cast to a given …\nFetches a read-only reference to the data at <code>row</code>. Unlike …\nReturns a mutable reference to the value for <code>index</code>.\nReturns a reference to the value for <code>index</code>, inserting one …\nCreates a new instance of this type with the specified …\nReturns a reference to the resource’s change ticks, if …\nReturns a reference to the “added” and “changed” …\nFetches the change detection ticks for the value at <code>row</code>.\nFetches the change detection ticks for the value at <code>row</code>. …\nReturns references to the entity’s component value and …\nChecks if the table contains a <code>Column</code> for a given <code>Component</code>…\nGets the <code>ArchetypeComponentId</code> for the resource.\nReturns an iterator visiting all keys (indices) in …\nInserts <code>value</code> at <code>index</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the <code>Table</code> is empty or not.\nReturns true if this collection contains no <code>Table</code>s\nReturns true if there are no resources stored in the <code>World</code>,\nReturns <code>true</code> if the sparse set contains no component …\nReturns <code>true</code> if the sparse set contains no elements.\nReturns true if this collection contains no …\nChecks if the column is empty. Returns <code>true</code> if there are …\nReturns true if the resource is populated.\nFetches the <code>Layout</code> for the underlying type.\nIterates over the <code>Column</code>s of the <code>Table</code>.\nIterates through all of the tables stored within in <code>TableId</code>…\nIterate over all resources that have been initialized, …\nReturns an iterator visiting all key-value pairs in …\nAn Iterator visiting all (<code>ComponentId</code>, <code>ComponentSparseSet</code>) …\nReturns an iterator visiting all key-value pairs in …\nReturns the number of <code>Table</code>s this collection contains\nThe total number of resources stored in the <code>World</code>\nReturns the number of component values in the sparse set.\nReturns the number of elements in the sparse set.\nReturns the number of <code>ComponentSparseSet</code>s this collection …\nGets the current number of elements stored in the column.\nCreates a new <code>SparseSet</code>.\nBacking storage for <code>!Send</code> resources.\nRemoves and returns the value for <code>index</code>.\nBacking storage for resources.\nGets the sparse set index corresponding to this instance.\nBacking storage for <code>SparseSet</code> components.\nBacking storage for <code>Table</code> components.\nReturns an iterator visiting all values in arbitrary order.\nReturns an iterator visiting all values mutably in …\nCreates a new <code>SparseSet</code> with a specified initial capacity.\nCustomizes the behavior of an <code>AdapterSystem</code>\nA <code>System</code> that takes the output of <code>S</code> and transforms it by …\nA convenience type alias for a boxed <code>System</code> trait object.\nA <code>System</code> defined by combining two other systems. The …\nCustomizes the behavior of a <code>CombinatorSystem</code>.\nA <code>World</code> mutation.\nDensely and efficiently stores a queue of heterogenous …\nA <code>Command</code> queue to perform structural changes to the <code>World</code>.\nA <code>SystemParam</code> that stores a buffer which gets applied to …\nA <code>Command</code> which gets executed for a given <code>Entity</code>.\nA list of commands that will be run to modify an entity.\nA function system that runs with exclusive <code>World</code> access.\nA parameter that can be used in an exclusive system (a …\nA trait implemented for all exclusive system functions …\nShorthand way of accessing the associated type …\nThe <code>System</code> counter part of an ordinary function.\nWrapper type to mark a <code>SystemParam</code> as an input.\nThe input type for an <code>AdapterSystem</code>.\nThe input type for a <code>CombinatorSystem</code>.\nThe input type to this system. See <code>System::In</code>.\nThe input type to this system. See <code>System::In</code>.\nThe system’s input. See <code>In</code> for <code>FunctionSystem</code>s.\nConversion trait to turn something into a <code>System</code>.\nThe item type returned when constructing this system param.\nThe item type returned when constructing this system param.\nA system local <code>SystemParam</code>.\nShared borrow of a non-<code>Send</code> resource.\nUnique borrow of a non-<code>Send</code> resource.\nThe output type for an <code>AdapterSystem</code>.\nThe output type for a <code>CombinatorSystem</code>.\nThe return type of this system. See <code>System::Out</code>.\nThe return type of this system. See <code>System::Out</code>.\nThe system’s output.\nAn alternative to <code>Commands</code> that can be used in parallel …\nThe <code>ExclusiveSystemParam</code>/s defined by this system’s <code>fn</code> …\nThe <code>SystemParam</code>/s used by this system to access the <code>World</code>.\nA collection of potentially conflicting <code>SystemParam</code>s …\nA <code>System</code> created by piping the output of the first system …\nSystem parameter that provides selective access to the …\nType returned from <code>Query::transmute_lens</code> containing the …\n<code>System</code> types that do not modify the <code>World</code> when run. This …\nA <code>SystemParam</code> that only reads a given <code>World</code>.\nA system tried to run itself recursively.\nAn operation with stored systems failed.\nA system that has been removed from the registry. It …\nShared borrow of a <code>Resource</code>.\nUnique mutable borrow of a <code>Resource</code>.\nA type that can be inserted into a <code>World</code> as a singleton.\nThe <code>Command</code> type for <code>World::run_system</code>.\nTrait used to run a system immediately on a <code>World</code>.\nThe <code>Command</code> type for <code>World::run_system</code> or …\nA system tried to remove itself.\nUsed to store data which persists across invocations of a …\nUsed to store data which persists across invocations of a …\nA helper for using system parameters in generic contexts\nAn ECS system that can be added to a <code>Schedule</code>\nThe type of <code>System</code> that this instance converts into.\nTypes that can be used with <code>Deferred&lt;T&gt;</code> in systems. This …\nA <code>SystemParam</code> that reads the previous and current change …\nAn identifier for a registered system.\nA system was run by id, but no system with that id was …\nThe metadata of a <code>System</code>.\n<code>SystemParam</code> that returns the name of the system which it …\nA parameter that can be used in a <code>System</code>.\nImplement <code>SystemParam</code> to use a struct as a parameter in a …\nA trait implemented for all functions that can be used as …\nShorthand way of accessing the associated type …\nHolds on to persistent state required to drive <code>SystemParam</code> …\nTurns an <code>EntityCommand</code> type into a <code>Command</code> type.\nWhen used in an <code>AdapterSystem</code>, this function customizes …\nPushes an <code>EntityCommand</code> to the queue, which will get …\nPushes a generic <code>Command</code> to the command queue.\nTake all commands from <code>other</code> and append them to <code>self</code>, …\nTake all commands from <code>other</code> and append them to <code>self</code>, …\nApplies this command, causing it to mutate the provided …\nExecutes this command for the given <code>Entity</code>.\nApplies any deferred mutations to the <code>World</code>.\nApplies all state queued up for <code>SystemParam</code> values. For …\nApplies any deferred mutations stored in this <code>SystemParam</code>…\nExecute the queued <code>Command</code>s in the world. This clears the …\nApplies any <code>Deferred</code> system parameters (or other system …\nReturns the system’s archetype component <code>Access</code>.\nAllows you access to the dereferenced value of this …\nAllows you access to the dereferenced value of this …\nGets a <code>QueryLens</code> with the same accesses as the existing …\nEnsure that a given function is a read-only system.\nEnsure that a given function is a system.\nEnsures that the provided system doesn’t with itself.\nChecks any <code>Tick</code>s stored on this system and wraps their …\nCopies a reference to a resource.\nClone the combined system. The cloned instance must be …\nWhen used in a <code>CombinatorSystem</code>, this function customizes …\nTemporarily provides access to the <code>Commands</code> for the …\nReturns the underlying <code>Commands</code>.\nReturns a shared reference to the component <code>T</code> of the given …\nReturns the system’s component <code>Access</code>.\nReturns a mutable reference to the component <code>T</code> of the …\nReturns <code>true</code> if the given <code>Entity</code> matches the query.\nReturns the system’s default system sets.\nDespawns the entity.\nDespawns the provided entity and its children.\nReturns the <code>EntityCommands</code> for the requested <code>Entity</code>.\nRuns <code>f</code> on each read-only query item.\nRuns <code>f</code> on each query item.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the <code>SystemParam</code> values. This can only be called …\nReturns the read-only query item for the given <code>Entity</code>.\nReturns a shared reference to the component <code>T</code> of the given …\nReturns a mutable reference to the component <code>T</code> of the …\nReturns a mutable reference to the component <code>T</code> of the …\nReturns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …\nReturns the query item for the given <code>Entity</code>, with the …\nGets the tick indicating the last time this system ran.\nRetrieve the <code>SystemParam</code> values. This can only be called …\nRetrieve the mutable <code>SystemParam</code> values.  This will not …\nReturns the read-only query items for the given array of …\nReturns the query items for the given array of <code>Entity</code>.\nRetrieve the mutable <code>SystemParam</code> values.\nReturns the query item for the given <code>Entity</code>.\nPushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …\nCreates a parameter to be passed into an …\nCreates a parameter to be passed into a <code>SystemParamFunction</code>…\nReturns a single read-only query item when there is …\nReturns a single query item when there is exactly one …\nReturns the query item for the given <code>Entity</code>.\nRetrieve the <code>SystemParam</code> values. This will not update …\nReturns true if system as deferred buffers\nReturns true if the system has deferred <code>SystemParam</code>’s\nReturns the <code>Entity</code> id of the entity.\nCreates a new instance of this param’s <code>State</code>.\nPushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …\nRegisters any <code>World</code> access used by this <code>SystemParam</code> and …\nInitialize the system.\nIs the system initialized? A system is initialized the …\nAdds a <code>Bundle</code> of components to the entity.\nPushes a <code>Command</code> to the queue for creating entities, if …\nPushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDue to lifetime limitations of the <code>Deref</code> trait, this …\nConsume <code>self</code> and return a mutable reference to the …\nConsume <code>self</code> and return a mutable reference to the …\nGet the value of the parameter\nTurns this value into its corresponding <code>System</code>.\nReturns <code>true</code> if the resource was added after the system …\nReturns <code>true</code> if the resource was added or mutably …\nReturns <code>true</code> if there are no query items.\nReturns true if the system must be run exclusively.\nReturns true if the system is <code>Send</code>.\nReturns true if the system is <code>Send</code>.\nReturns an <code>Iterator</code> over the read-only query items.\nReturns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …\nReturns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …\nIterates over all possible combinations of <code>K</code> query items …\nReturns an <code>Iterator</code> over the query items, with the actual …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an iterator over the query items generated from an …\nReturns an <code>Iterator</code> over the query items generated from an …\nReturns an <code>Iterator</code> over the query items.\nReturns an <code>Iterator</code> over the query items.\nReturns the <code>World</code> change tick seen by the system the …\nContains type aliases for built-in <code>SystemParam</code>s with …\nLogs the components of the entity at the info level.\nReturns the read-only query items for the given array of …\nReturns the query items for the given array of <code>Entity</code>.\nPass the output of this system into the passed function <code>f</code>, …\nMaps to an inner value by applying a function to the …\nMaps to an inner value by applying a function to the …\nReturns <code>true</code> if <code>world_id</code> matches the <code>World</code> that was used …\nGets the metadata for this instance.\nReturns the system’s name.\nReturns the system’s name\nGets the name of the system.\nCreates a new system that combines two inner systems.\nCreates a new <code>SystemState</code> with default state.\nCreates a new <code>System</code> that uses <code>func</code> to adapt <code>system</code>, via …\nReturns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …\nCreates a new <code>Command</code> struct, which can be added to …\nFor the specified <code>Archetype</code>, registers the components …\nReturns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …\nCreates a new <code>Command</code> struct, which can be added to …\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 6th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 6th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 7th parameter in this <code>ParamSet</code>…\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the query results for the …\nPass the output of this system <code>A</code> into a second system <code>B</code>, …\nPush a <code>Command</code> onto the queue.\nCreate a <code>Query</code> from the underlying <code>QueryState</code>.\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns an <code>EntityCommands</code> with a smaller lifetime. This is …\nReturns a <code>Deferred&lt;T&gt;</code> with a smaller lifetime. This is …\nReturns a <code>Commands</code> with a smaller lifetime. This is useful …\nRemoves a <code>Bundle</code> of components from the entity.\nPushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …\nRemoves all components except the given <code>Bundle</code> from the …\nExecutes this system once. See <code>System::run</code>.\nExecutes this system once. See <code>System::run</code> or …\nRuns the system with the given input in the world.\nRuns this system with the given input in the world.\nRuns the system corresponding to the given <code>SystemId</code>. …\nRuns a system and applies its deferred parameters.\nRuns a system with given input and applies its deferred …\nRuns the system corresponding to the given <code>SystemId</code>. …\nRuns the system with the given input in the world. Unlike …\nMarks the system as having deferred buffers like <code>Commands</code> …\nOverwrites the tick indicating the last time this system …\nSets the system to be not <code>Send</code>.\nReturns a single read-only query item when there is …\nReturns a single query item when there is exactly one …\nPushes a <code>Command</code> to the queue for creating a new entity …\nPushes a <code>Command</code> to the queue for creating entities with a …\nPushes a <code>Command</code> to the queue for creating a new empty …\nThe system removed from the storage.\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nReturns the current <code>World</code> change tick seen by the system.\nReturns another <code>Query</code> from this that fetches the read-only …\nReturns a <code>QueryLens</code> that can be used to get a query with a …\nEquivalent to <code>Self::transmute_lens</code> but also includes a …\nTries to add a <code>Bundle</code> of components to the entity.\nReturns the <code>TypeId</code> of the underlying system type.\nUpdate the system’s archetype component <code>Access</code>.\nUpdates the state’s internal view of the <code>World</code>’s …\nUpdates the state’s internal view of the <code>world</code>’s …\nReturns a <code>Command</code> which executes this <code>EntityCommand</code> for …\nA shorthand for writing <code>&amp;&#39;static T</code>.\n<code>Commands</code> with <code>&#39;static</code> lifetimes.\nA <code>Query</code> with <code>&#39;static</code> lifetimes.\nA <code>Res</code> with <code>&#39;static</code> lifetimes.\nA <code>ResMut</code> with <code>&#39;static</code> lifetimes.\nA shorthand for writing <code>&amp;&#39;static mut T</code>.\nThe (arbitrarily chosen) minimum number of world tick …\nProvides mutable access to a single entity and all of its …\nA read-only reference to a particular <code>Entity</code> and all of …\nA mutable reference to a particular <code>Entity</code>, and the entire …\nA view into a single entity and component in a world, …\nProvides mutable access to a single entity and some of its …\nProvides read-only access to a single entity and some of …\nCreates an instance of the type this trait is implemented …\nUnique mutable borrow of an entity’s component or of a …\nAn occupied entry.\nA view into an occupied entry in a <code>EntityWorldMut</code>. It is …\nShared borrow of an entity’s component with access to …\nAn iterator that spawns a series of entities and returns …\nA vacant entry.\nA view into a vacant entry in a <code>EntityWorldMut</code>. It is part …\nStores and exposes operations on entities, components, …\nA read-only borrow of some data stored in a <code>World</code>. This …\nA mutable borrow of some data stored in a <code>World</code>. This type …\nExposes safe mutable access to multiple resources at a …\nA unique identifier for a <code>World</code>.\nReturns a reference to the underlying <code>Access</code>.\nReturns a reference to the underlying <code>Access</code>.\nAdds the specified <code>Schedule</code> to the world. The schedule can …\nIgnore system order ambiguities caused by conflicts on …\nIgnore system order ambiguities caused by conflicts on …\nProvides in-place mutable access to an occupied entry.\nReturns the archetype that the current entity belongs to.\nReturns the archetype that the current entity belongs to.\nReturns the archetype that the current entity belongs to.\nReturns the archetype that the current entity belongs to.\nReturns the archetype that the current entity belongs to.\nRetrieves this world’s <code>Archetypes</code> collection.\nAllows you access to the dereferenced value of this …\nGets read-only access to all of the entity’s components.\nGets read-only access to all of the entity’s components.\nCreates a new <code>UnsafeWorldCell</code> view with complete …\nCreates a new <code>UnsafeWorldCell</code> view with only read access …\nRetrieves this world’s <code>Bundles</code> collection.\nRetrieves a <code>WorldCell</code>, which safely enables multiple …\nReads the current change tick of this world.\nIterates all component change ticks and clamps any older …\nRuns both <code>clear_entities</code> and <code>clear_resources</code>, invalidating …\nDespawns all entities in this <code>World</code>.\nClears all resources in this <code>World</code>.\nClears the internal component tracker state.\nReturns the <code>ComponentId</code> of the given <code>Component</code> type <code>T</code>.\nReturns an iterator over the component ids that are …\nRetrieves this world’s <code>Components</code> collection.\nReturns an iterator over the component ids that are …\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …\nReturns <code>true</code> if a resource of type <code>R</code> exists. Otherwise …\nReturns <code>true</code> if the current entity has a component with …\nReturns <code>true</code> if the current entity has a component with …\nReturns <code>true</code> if the current entity has a component with …\nReturns <code>true</code> if the current entity has a component with …\nReturns <code>true</code> if the current entity has a component with …\nDespawns the current entity.\nDespawns the given <code>entity</code>, if it exists. This will also …\nDespawns the provided entity and its children.\nRetrieves this world’s <code>Entities</code> collection.\nRetrieves this world’s <code>Entities</code> collection mutably.\nRetrieves an <code>EntityRef</code> that exposes read-only operations …\nRetrieves an <code>EntityWorldMut</code> that exposes read and write …\nGets an Entry into the world for this entity and component …\nContains error types returned by bevy’s schedule.\nReturns the argument unchanged.\nConvert this <code>ResMut</code> into a <code>Mut</code>. This allows keeping the …\nReturns the argument unchanged.\nConvert this <code>NonSendMut</code> into a <code>Mut</code>. This allows keeping …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Self</code> using data from the given <code>World</code>.\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets a reference to the component in the entry.\nGets access to the component of type <code>T</code> for the current …\nRetrieves a reference to the given <code>entity</code>’s <code>Component</code> of …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets the component of the given <code>ComponentId</code> from the …\nGets the component of the given <code>ComponentId</code> from the …\nGets the component of the given <code>ComponentId</code> from the …\nRetrieves an immutable untyped reference to the given …\nGets the component of the given <code>ComponentId</code> from the …\nGets the component of the given <code>ComponentId</code> from the …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves an <code>EntityRef</code> that exposes read-only operations …\nRetrieves an <code>EntityWorldMut</code> that exposes read and write …\nGets an <code>EntityRef</code> for multiple entities at once.\nGets mutable access to multiple entities.\nGets mutable access to the component of type <code>T</code> for the …\nGets mutable access to the component of type <code>T</code> for the …\nGets a mutable reference to the component in the entry.\nGets mutable access to the component of type <code>T</code> for the …\nRetrieves a mutable reference to the given <code>entity</code>’s …\nGets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…\nGets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…\nGets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…\nRetrieves a mutable untyped reference to the given <code>entity</code>…\nGets a <code>!Send</code> resource to the resource with the id …\nGets a <code>!Send</code> resource to the resource with the id …\nGets an immutable reference to the non-send resource of …\nGets a reference to the non-send resource of the given …\nGets a mutable reference to the non-send resource of the …\nGets a mutable reference to the non-send resource of the …\nReturns an <code>EntityWorldMut</code> for the given <code>entity</code> (if it …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets a reference to the resource of the given type\nGets a reference to the resource of the given type if it …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nRetrieves the change ticks for the given resource.\nRetrieves the change ticks for the given <code>ComponentId</code>.\nGets a mutable reference to the resource of the given type\nGets a mutable reference to the resource of the given type …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nGets a mutable reference to the resource of type <code>T</code> if it …\nGets a reference including change detection to the …\nReturns the ID of the current entity.\nReturns the ID of the current entity.\nReturns the ID of the current entity.\nRetrieves this <code>World</code>’s unique ID\nReturns the ID of the current entity.\nReturns the ID of the current entity.\nIncrements the world’s current change tick and returns …\nInitializes a new <code>Component</code> type and returns the …\nInitializes a new <code>Component</code> type and returns the …\nInitializes a new non-send resource and returns the …\nInitializes a new resource and returns the <code>ComponentId</code> …\nAdds a <code>Bundle</code> of components to the entity.\nReplaces the component of the entry.\nInserts the component into the <code>VacantEntry</code> and returns a …\nInserts a dynamic <code>Component</code> into the entity.\nInserts a dynamic <code>Bundle</code> into the entity.\nReplaces the component of the entry, and returns an …\nInserts the component into the <code>VacantEntry</code> and returns an …\nInserts a new <code>!Send</code> resource with the given <code>value</code>. Will …\nInserts a new non-send resource with the given <code>value</code>.\nFor a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, either spawns …\nInserts a new resource with the given <code>value</code>.\nInserts a new resource with the given <code>value</code>. Will replace …\nReturns the components of an <code>Entity</code> through <code>ComponentInfo</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the reference wrapped by this type. The reference …\nConsume <code>self</code> and return a mutable reference to the …\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nReturns this entity’s <code>World</code>, consuming itself.\nReturns <code>true</code> if a resource of type <code>R</code> exists and was added …\nReturns <code>true</code> if a resource with id <code>component_id</code> exists and …\nReturns <code>true</code> if a resource of type <code>R</code> exists and was …\nReturns <code>true</code> if a resource with id <code>component_id</code> exists and …\nReturns an <code>Entity</code> iterator of current entities.\nReturns a mutable iterator over all entities in the <code>World</code>.\nWhen called from within an exclusive system (a <code>System</code> that …\nSets <code>World::last_change_tick()</code> to the specified value …\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nGets an <code>EntityRef</code> for multiple entities at once.\nGets mutable access to multiple entities at once.\nMap <code>Ref</code> to a different type using <code>f</code>.\nMaps to an inner value by applying a function to the …\nCreate a new <code>Ref</code> using provided values.\nCreates a new change-detection enabled smart pointer. In …\nCreates a new empty <code>World</code>.\nCreate a new, unique <code>WorldId</code>. Returns <code>None</code> if the supply …\nGets an immutable reference to the non-send resource of …\nGets an immutable reference to the non-send resource of …\nGets a mutable reference to the non-send resource of the …\nGets a mutable reference to the non-send resource of the …\nEnsures the entry has this component by inserting the …\nEnsures the entry has this component by inserting the …\nEnsures the entry has this component by inserting the …\nReturns <code>QueryState</code> for the given <code>QueryData</code>, which is used …\nReturns <code>QueryState</code> for the given filtered <code>QueryData</code>, which …\nReads the current change tick of this world.\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns a new instance with a shorter lifetime. This is …\nReturns a new instance with a shorter lifetime. This is …\nSimilar to <code>Self::register_system</code>, but allows passing in a …\nRegisters a system and returns a <code>SystemId</code> so it can later …\nRemoves any components in the <code>Bundle</code> from the entity.\nRemoves the resource of a given type, if it exists. …\nRemoves a <code>!Send</code> resource from the world and returns it, if …\nRemoves the resource of a given type and returns it, if it …\nRemoves the resource of a given type, if it exists. …\nRemoves a registered system and returns the system, if it …\nReturns an iterator of entities that had components of …\nRetrieves this world’s <code>RemovedComponentEvents</code> collection\nReturns an iterator of entities that had components with …\nGets a reference to the resource of the given type\nGets a reference to the resource of the given type\nGets a mutable reference to the resource of the given type\nGets a mutable reference to the resource of the given type\nGets a reference to the resource of the given type\nTemporarily removes the requested resource from this <code>World</code>…\nRemoves any components except those in the <code>Bundle</code> from the …\nRuns the <code>Schedule</code> associated with the <code>label</code> a single time.\nRun stored systems by their <code>SystemId</code>. Before running a …\nRun a stored chained system by its <code>SystemId</code>, providing an …\nTemporarily removes the schedule associated with <code>label</code> …\nSends an <code>Event</code>.\nSends an <code>Event</code>. This method returns the ID of the sent …\nSends a batch of <code>Event</code>s from an iterator.\nSends a batch of <code>Event</code>s from an iterator. This method …\nSends the default value of the <code>Event</code> of type <code>E</code>.\nSends the default value of the <code>Event</code> of type <code>E</code>. This …\nSpawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …\nSpawns a batch of entities with the same component <code>Bundle</code> …\nSpawns a new <code>Entity</code> and returns a corresponding …\nRetrieves this world’s <code>Storages</code> collection.\nRemoves all components in the <code>Bundle</code> from the entity and …\nRemoves the component from the entry and returns it.\nAttempts to run the <code>Schedule</code> associated with the <code>label</code> a …\nTemporarily removes the schedule associated with <code>label</code> …\nContains types that allow disjoint mutable access to a …\nUpdates the internal entity location to match the current …\nGets read-only access to the world that the current entity …\nReturns this entity’s world.\nGives mutable access to this entity’s <code>World</code> in a …\nThe error type returned by <code>World::try_run_schedule</code> if the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA interior-mutable reference to a particular <code>Entity</code> and …\nVariant of the <code>World</code> where resource and component accesses …\nReturns the archetype that the current entity belongs to.\nRetrieves this world’s <code>Archetypes</code> collection.\nRetrieves this world’s <code>Bundles</code> collection.\nGets the current change tick of this world.\nRetrieves this world’s <code>Components</code> collection.\nReturns <code>true</code> if the current entity has a component of type …\nReturns <code>true</code> if the current entity has a component …\nReturns <code>true</code> if the current entity has a component with …\nRetrieves this world’s <code>Entities</code> collection.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSafety\nGets the component of the given <code>ComponentId</code> from the …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves an <code>UnsafeEntityCell</code> that exposes read and write …\nSafety\nRetrieves a mutable untyped reference to the given <code>entity</code>…\nGets a reference to the non-send resource of the given …\nGets a <code>!Send</code> resource to the resource with the id …\nGets a mutable reference to the non-send resource of the …\nGets a <code>!Send</code> resource to the resource with the id …\nSafety\nGets a reference to the resource of the given type if it …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nGets a mutable reference to the resource of the given type …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nGets a reference including change detection to the …\nRetrieves this world’s unique ID.\nReturns the ID of the current entity.\nIncrements the world’s current change tick and returns …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the <code>Tick</code> indicating the last time that …\nGets metadata indicating the location where the current …\nRetrieves this world’s collection of removed components.\nProvides unchecked access to the internal data stores of …\nGets a reference to the <code>&amp;World</code> this <code>UnsafeWorldCell</code> …\nGets the world that the current entity belongs to.\nGets a reference to the <code>World</code> this <code>UnsafeWorldCell</code> belong …\nGets a mutable reference to the <code>World</code> this <code>UnsafeWorldCell</code> …\nPlugin that provides gamepad handling to an <code>App</code>.\nUpdates the running gamepad rumble effects.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA trait adding <code>init_gizmo_group&lt;T&gt;()</code> to the app\nA <code>Plugin</code> that provides an immediate mode drawing api for …\nLabel for the the render systems handling the\nAdds gizmos to the <code>Transparent2d</code> render phase\nAdds gizmos to the <code>Transparent3d</code> render phase\nA module adding debug visualization of <code>Aabb</code>s.\nAdditional <code>Gizmos</code> Functions – Arcs\nAdditional <code>Gizmos</code> Functions – Arrows\nAdditional <code>Gizmos</code> Functions – Circles\nA module for the <code>GizmoConfig&lt;T&gt;</code> <code>Resource</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA module for the <code>Gizmos</code> <code>SystemParam</code>.\nRegisters <code>GizmoConfigGroup</code> <code>T</code> in the app enabling the use …\nInsert the <code>GizmoConfigGroup</code> in the app with the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>bevy_gizmos</code> prelude.\nA module for rendering each of the 2D and 3D …\nThe <code>GizmoConfigGroup</code> used for debug visualizations of <code>Aabb</code> …\nA <code>Plugin</code> that provides visualization of <code>Aabb</code>s for …\nAdd this <code>Component</code> to an entity to draw its <code>Aabb</code> component.\nThe color of the box.\nThe default color for bounding box gizmos.\nDraws all bounding boxes in the scene when set to <code>true</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA builder returned by <code>Gizmos::arc_2d</code>.\nA builder returned by <code>Gizmos::arc_2d</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the number of line-segments for this arc.\nSet the number of line-segments for this arc.\nA builder returned by <code>Gizmos::arrow</code> and <code>Gizmos::arrow_2d</code>\nDraws the arrow, by drawing lines with the stored <code>Gizmos</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nChange the length of the tips to be <code>length</code>. The default …\nA builder returned by <code>Gizmos::ellipse_2d</code>.\nA builder returned by <code>Gizmos::ellipse</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the number of line-segments for this ellipse.\nSet the number of line-segments for this ellipse.\nThe default gizmo config group.\nA struct that stores configuration for gizmos.\nA trait used to create gizmo configs groups.\nA <code>Resource</code> storing <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> structs\nReturns <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> associated with …\nReturns mutable <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> …\nHow closer to the camera than real geometry the line …\nSet to <code>false</code> to stop drawing gizmos.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> associated with …\nReturns mutable <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> …\nInserts <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> replacing old …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over all <code>GizmoConfig</code>s.\nReturns an iterator over all <code>GizmoConfig</code>s, by mutable …\nApply perspective to gizmo lines.\nLine width specified in pixels.\nDescribes which rendering layers gizmos will be rendered …\nA <code>SystemParam</code> for drawing gizmos.\nA builder returned by <code>Gizmos::sphere</code>.\nDraw an arc, which is a part of the circumference of a …\nDraw an arc, which is a part of the circumference of a …\nDraw an arrow in 3D, from <code>start</code> to <code>end</code>. Has four tips for …\nDraw an arrow in 2D (on the xy plane), from <code>start</code> to <code>end</code>.\nDraw a circle in 3D at <code>position</code> with the flat side facing …\nDraw a circle in 2D.\nSet the number of line-segments per circle for this sphere.\nThe currently used <code>GizmoConfig</code>\nThe currently used <code>GizmoConfigGroup</code>\nDraw a wireframe cube in 3D.\nDraw an ellipse in 3D at <code>position</code> with the flat side …\nDraw an ellipse in 2D.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDraw a line in 3D from <code>start</code> to <code>end</code>.\nDraw a line in 2D from <code>start</code> to <code>end</code>.\nDraw a line in 3D with a color gradient from <code>start</code> to <code>end</code>.\nDraw a line in 2D with a color gradient from <code>start</code> to <code>end</code>.\nDraw a line in 3D made of straight segments between the …\nDraw a line in 2D made of straight segments between the …\nDraw a line in 3D made of straight segments between the …\nDraw a line in 2D made of straight segments between the …\nDraws the longest arc between two points (<code>from</code> and <code>to</code>) …\nDraw a line in 3D from <code>start</code> to <code>start + vector</code>.\nDraw a line in 2D from <code>start</code> to <code>start + vector</code>.\nDraw a line in 3D with a color gradient from <code>start</code> to …\nDraw a line in 2D with a color gradient from <code>start</code> to …\nDraw a wireframe rectangle in 3D.\nDraw a wireframe rectangle in 2D.\nDraws the shortest arc between two points (<code>from</code> and <code>to</code>) …\nDraw a wireframe sphere in 3D made out of 3 circles around …\nThe <code>GizmoConfigGroup</code> used for debug visualizations of <code>Aabb</code> …\nA trait adding <code>init_gizmo_group&lt;T&gt;()</code> to the app\nThe default gizmo config group.\nA struct that stores configuration for gizmos.\nA trait used to create gizmo configs groups.\nA <code>Resource</code> storing <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> structs\nA trait for rendering 2D geometric primitives (<code>P</code>) with …\nA trait for rendering 3D geometric primitives (<code>P</code>) with …\nA <code>SystemParam</code> for drawing gizmos.\nThe output of <code>primitive_2d</code>. This is a builder to set …\nThe output of <code>primitive_3d</code>. This is a builder to set …\nAdd this <code>Component</code> to an entity to draw its <code>Aabb</code> component.\nThe color of the box.\nThe currently used <code>GizmoConfig</code>\nThe currently used <code>GizmoConfigGroup</code>\nThe default color for bounding box gizmos.\nHow closer to the camera than real geometry the line …\nDraws all bounding boxes in the scene when set to <code>true</code>.\nSet to <code>false</code> to stop drawing gizmos.\nRegisters <code>GizmoConfigGroup</code> <code>T</code> in the app enabling the use …\nInsert the <code>GizmoConfigGroup</code> in the app with the given …\nApply perspective to gizmo lines.\nLine width specified in pixels.\nRenders a 2D primitive with its associated details.\nRenders a 3D primitive with its associated details.\nDescribes which rendering layers gizmos will be rendered …\nA module for rendering each of the 2D <code>bevy_math::primitives</code>…\nA module for rendering each of the 3D <code>bevy_math::primitives</code>…\nA trait for rendering 2D geometric primitives (<code>P</code>) with …\nBuilder for configuring the drawing options of <code>Line2d</code>.\nThe output of <code>primitive_2d</code>. This is a builder to set …\nBuilder for configuring the drawing options of <code>Segment2d</code>.\nSet the drawing mode of the line (arrow vs. plain line)\nSet the drawing mode of the line (arrow vs. plain line)\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRenders a 2D primitive with its associated details.\nBuilder for configuring the drawing options of <code>Capsule3d</code>.\nBuilder for configuring the drawing options of <code>Cone</code>.\nBuilder for configuring the drawing options of …\nBuilder for configuring the drawing options of <code>Cylinder</code>.\nA trait for rendering 3D geometric primitives (<code>P</code>) with …\nThe output of <code>primitive_3d</code>. This is a builder to set …\nBuilder for configuring the drawing options of <code>Sphere</code>.\nBuilder for configuring the drawing options of <code>Sphere</code>.\nBuilder for configuring the drawing options of <code>Torus</code>.\nSet the number of axis used to hint the plane.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet the number of segments in the major (ring) direction.\nSet the number of segments in the minor (tube) direction.\nRenders a 3D primitive with its associated details.\nSet the number of segments used to hint the plane.\nSet the length of segments used to hint the plane.\nSet the number of segments used to approximate the sphere …\nSet the number of segments used to approximate the …\nSet the number of segments used to approximate the capsule …\nSet the number of segments used to approximate the cone …\nSet the number of segments used to approximate the curved …\nFailed to load asset from an asset path.\nDecoding the base64 mesh data failed.\nUnsupported buffer format.\nFailed to generate tangents.\nRepresentation of a loaded glTF file.\nInvalid glTF file.\nAn error that occurs when loading a glTF file.\nAdditional untyped data that can be present on most glTF …\nLoads glTF files with all of their data as their …\nSpecifies optional settings for processing gltfs at load …\nA glTF mesh, which may consist of multiple <code>GltfPrimitives</code> …\nA glTF node with all of its child nodes, its <code>GltfMesh</code>, …\nAdds support for glTF file loading to the app.\nPart of a <code>GltfMesh</code> that consists of a <code>Mesh</code>, an optional …\nError when loading a texture. Might be due to a disabled …\nInvalid image mime type.\nFailed to load a file.\nMissing sampler for an animation.\nBinary blob is missing.\nFailed to generate morph targets.\nFailed to read bytes from an asset path.\nUnsupported primitive mode.\nRegister a custom vertex attribute so that it is …\nAll animations loaded from the glTF file.\nDirect children of the node.\nCustom vertex attributes that will be recognized when …\nDefault scene to be displayed.\nAdditional data.\nAdditional data.\nAdditional data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf true, the loader will include the root of the gltf root …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProcesses the asset in an asynchronous closure.\nIf true, the loader will spawn cameras for gltf camera …\nIf true, the loader will spawn lights for gltf light nodes.\nIf true, the loader will load mesh nodes and the …\nMaterial to apply to the <code>mesh</code>.\nAdditional data of the <code>material</code>.\nAll materials loaded from the glTF file.\nMesh of the node.\nTopology to be rendered.\nAll meshes loaded from the glTF file.\nNamed animations loaded from the glTF file.\nNamed materials loaded from the glTF file.\nNamed meshes loaded from the glTF file.\nNamed nodes loaded from the glTF file.\nNamed scenes loaded from the glTF file.\nAll nodes loaded from the glTF file.\nPrimitives of the glTF mesh.\nAll scenes loaded from the glTF file.\nThe gltf root of the gltf asset, see …\nList of compressed image formats handled by the loader.\nLocal transform.\nContent of the extra data.\nThe primitive mode.\nAn <code>Iterator</code> of <code>Entity</code>s over the ancestors of an <code>Entity</code>.\nTrait for removing, adding and replacing children and …\nTrait that defines adding, changing and children and …\nFired whenever an <code>Entity</code> is added as a child to a parent.\nStruct for building children entities and adding them to a …\nFired whenever a child <code>Entity</code> is moved to a new parent.\nFired whenever a child <code>Entity</code> is removed from its parent.\nContains references to the child entities of this entity.\nCommand that clears all children from an entity and …\nAn <code>Iterator</code> of <code>Entity</code>s over the descendants of an <code>Entity</code>.\nDespawns the given entity’s children recursively\nDespawns the given entity and all its children recursively\nTrait that holds functions for despawning recursively down …\nAn <code>Event</code> that is fired whenever there is a change in the …\nProvides hierarchy functionality to a Bevy app.\nAn extension trait for <code>Query</code> that adds hierarchy related …\nCommand that inserts a child at a given index of a parent…\nHolds a reference to the parent entity of this entity. …\nCommand that adds a child to an entity.\nCommand that pushes children to the end of the entity’s …\nCommand that removes children from an entity, and removes …\nCommand that removes the parent of an entity, and removes …\nCommand that clear all children from an entity, replacing …\nWhen enabled, runs …\nPrint a warning for each <code>Entity</code> with a <code>T</code> component whose …\nStruct for adding children to an entity directly through …\nAdds a single child.\nAdds a single child.\nAdds a command to be executed, like <code>Commands::add</code>.\nGets the parent <code>Entity</code> as a slice of length 1.\nSystem to print a warning for each <code>Entity</code> with a <code>T</code> …\n<code>Entity</code> whose parent must be removed.\nChild entity to add.\nRemoves all children from this entity. The <code>Children</code> …\nRemoves all children from this entity. The <code>Children</code> …\nDespawns all descendants of the given entity.\nDespawns the provided entity alongside all descendants.\nFunction for despawning an entity and all its children\nWhether to run …\nTarget entity\nTarget entity\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the <code>Entity</code> ID of the parent.\nInserts children at the given index.\nInserts children at the given index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns a new <code>DescendantIter</code>.\nReturns a new <code>AncestorIter</code>.\nConstructs a new object\nRun criteria that only allows running when …\nParent entity to add the child to.\nReturns the parent entity of this <code>ChildBuilder</code>.\nReturns the parent entity of this <code>WorldChildBuilder</code>.\nPushes children to the back of the builder’s children. …\nPushes children to the back of the builder’s children. …\nRemoves the given children\nRemoves the given children\nRemoves the <code>Parent</code> of this entity.\nRemoves the <code>Parent</code> of this entity.\nRemoves all current children from this entity, replacing …\nRemoves all current children from this entity, replacing …\nSets the parent of this entity.\nSets the parent of this entity.\nSorts children stably in place using the provided …\nSorts children stably in place using the provided key …\nSorts children stably in place using the provided key …\nSorts children unstably in place using the provided …\nSorts children unstably in place using the provided key …\nSpawns an entity with the given bundle and inserts it into …\nSpawns an entity with the given bundle and inserts it into …\nSpawns an <code>Entity</code> with no components and inserts it into …\nSpawns an <code>Entity</code> with no components and inserts it into …\nSwaps the child at <code>a_index</code> with the child at <code>b_index</code>.\nTakes a closure which builds children for this entity …\nTakes a closure which builds children for this entity …\nThe child that was added\nThe child that was removed\nThe child that was moved\nThe parent the child was added to\nThe parent the child was added to\nThe parent the child was removed from\nThe parent the child was removed from\nStores the position data of the input devices of type <code>T</code>.\nA “press-able” input of type <code>T</code>.\nThe current “press” state of an element\nAdds keyboard and mouse input to an App\nLabel for systems that update the input data.\nThe largest possible axis value.\nThe smallest possible axis value.\nThe button is pressed.\nThe button is not pressed.\nReturns <code>true</code> if all items in <code>inputs</code> have been pressed.\nReturns <code>true</code> if any item in <code>inputs</code> has just been pressed.\nReturns <code>true</code> if any item in <code>inputs</code> has just been released.\nReturns <code>true</code> if any item in <code>inputs</code> has been pressed.\nClears the <code>just pressed</code> and <code>just released</code> data for every …\nClears the <code>just_pressed</code> state of the <code>input</code> and returns <code>true</code>…\nClears the <code>just_released</code> state of the <code>input</code> and returns …\nCommon run conditions\nReturns an iterator of all the input devices that have …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe gamepad input functionality.\nReturns the position data of the provided <code>input_device</code>.\nAn iterator visiting every just pressed input in arbitrary …\nAn iterator visiting every just released input in …\nAn iterator visiting every pressed input in arbitrary …\nReturns the unclamped position data of the provided …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this button pressed?\nReturns <code>true</code> if the <code>input</code> has just been pressed.\nReturns <code>true</code> if the <code>input</code> has just been released.\nThe keyboard input functionality.\nThe mouse input functionality.\nMost commonly used re-exported types.\nRegisters a press for the given <code>input</code>.\nReturns <code>true</code> if the <code>input</code> has been pressed.\nRegisters a release for the given <code>input</code>.\nRegisters a release for all currently pressed inputs.\nRemoves the position data of the <code>input_device</code>, returning …\nClears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …\nClears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …\nSets the position data of the <code>input_device</code> to <code>position_data</code>…\nThe touch input functionality.\nThe touchpad input functionality.\nRun condition that is active if <code>ButtonInput::just_pressed</code> …\nRun condition that is active if <code>ButtonInput::just_released</code> …\nRun condition that is active if <code>ButtonInput::pressed</code> is …\nStateful run condition that can be toggled via a input …\nAdd a rumble to the given gamepad.\nAn axis of the gamepad has been triggered.\nSettings for a <code>GamepadAxis</code>.\nErrors that occur when setting axis settings for gamepad …\nA button of the gamepad has been triggered.\nSettings for a <code>GamepadButton</code>.\nManages settings for gamepad buttons.\nErrors that occur when setting button settings for gamepad …\nThe C button.\nThe gamepad is connected.\nA gamepad has been connected or disconnected.\nThe down button of the D-Pad.\nThe left button of the D-Pad.\nThe right button of the D-Pad.\nThe up button of the D-Pad.\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nParameter <code>deadzone_upperbound</code> was not less than or equal …\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nThe gamepad is disconnected.\nThe right action button of the action pad (i.e. PS: …\nA gamepad with an associated <code>ID</code>.\nAn axis of a <code>Gamepad</code>.\nGamepad event for when the “value” on the axis changes …\nA type of a <code>GamepadAxis</code>.\nA button of a <code>Gamepad</code>.\nGamepad event for when the “value” (amount of …\nA gamepad button input event.\nA type of a <code>GamepadButton</code>.\nThe connection status of a gamepad.\nA Gamepad connection event. Created when a connection to a …\nA gamepad event.\nMetadata associated with a <code>Gamepad</code>.\nThe intensity at which a gamepad’s force-feedback motors …\nAn event that controls force-feedback rumbling of a <code>Gamepad</code>…\nSettings for all <code>Gamepad</code>s.\nA collection of connected <code>Gamepad</code>s.\nThe horizontal value of the left stick.\nThe vertical value of the left stick.\nThe left thumb stick button.\nThe first left trigger.\nThe second left trigger.\nThe value of the left <code>Z</code> button.\nParameter <code>livezone_lowerbound</code> was not less than or equal …\nThe given parameter <code>livezone_lowerbound</code> was not in range …\nThe given parameter <code>deadzone_lowerbound</code> was not in range …\nRumble both gamepad motors at maximum intensity.\nThe mode button.\nThe upper action button of the action pad (i.e. PS: …\nMiscellaneous buttons, considered non-standard (i.e. Extra …\nNon-standard support for other axis types (i.e. HOTAS …\nThe given parameter was not in range 0.0..=1.0.\nParameter <code>release_threshold</code> was not less than or equal to …\nThe given parameter was not in range 0.0..=1.0.\nThe horizontal value of the right stick.\nThe vertical value of the right stick.\nThe right thumb stick button.\nThe first right trigger.\nThe second right trigger.\nThe value of the right <code>Z</code> button.\nRumble the strong motor at maximum intensity.\nThe select button.\nThe bottom action button of the action pad (i.e. PS: …\nThe start button.\nStop all running rumbles on the given <code>Gamepad</code>.\nThe given parameter was not in range 0.0..=2.0.\nRumble the weak motor at maximum intensity.\nThe left action button of the action pad (i.e. PS: Square, …\nThe Z button.\nThe user defined axis settings.\nThe type of the axis.\nThe type of the triggered axis.\nThe gamepad button assigned to the event.\nThe user defined button axis settings.\nThe user defined button settings.\nThe type of the button.\nThe type of the triggered button.\nClamps the <code>raw_value</code> according to the <code>AxisSettings</code>.\nIs the gamepad connected?\nThe change in the gamepads connection.\nReturns <code>true</code> if the <code>gamepad</code> is connected.\nGet the value above which inputs will be rounded up to 0.0.\nGet the value below which positive inputs will be rounded …\nThe default axis settings.\nThe default button axis settings.\nThe default button settings.\nIs the gamepad disconnected?\nFilters the <code>new_value</code> based on the <code>old_value</code>, according to …\nFilters the <code>new_value</code> based on the <code>old_value</code>, according to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the <code>Gamepad</code> associated with this request.\nThe gamepad on which the button is located on.\nThe gamepad on which the axis is located on.\nThe gamepad whose connection status changed.\nThe gamepad on which the axis is triggered.\nThe gamepad on which the button is triggered.\nUses <code>GamepadAxisChangedEvent</code>s to update the relevant …\nUses <code>GamepadButtonChangedEvent</code>s to update the relevant …\nHandles <code>GamepadConnectionEvent</code>s and updates gamepad …\nSplits the <code>GamepadEvent</code> event stream into it’s component …\nReturns the <code>AxisSettings</code> of the <code>axis</code>.\nReturns the <code>ButtonAxisSettings</code> of the <code>button</code>.\nReturns the <code>ButtonSettings</code> of the <code>button</code>.\nThe high value at which to apply rounding.\nThe <code>ID</code> of the gamepad.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the button is pressed.\nReturns <code>true</code> if the button is released.\nReturns an iterator over registered <code>Gamepad</code>s in an …\nGet the value below which negative inputs will be rounded …\nGet the value above which inputs will be rounded up to 1.0.\nThe low value at which to apply rounding.\nThe name of the gamepad if this one is connected.\nThe name of the gamepad.\nCreates a new <code>Gamepad</code>.\nCreates a new <code>GamepadButton</code>.\nCreates a new <code>GamepadAxis</code>.\nCreates a new <code>ButtonSettings</code> instance.\nCreates a new <code>AxisSettings</code> instance.\nCreates a <code>GamepadConnectionEvent</code>.\nCreates a <code>GamepadAxisChangedEvent</code>.\nCreates a <code>GamepadButtonChangedEvent</code>.\nGet the button input threshold above which the button is …\nGet the button input threshold below which the button is …\nTry to set the value above which inputs will be rounded up …\nTry to set the value below which positive inputs will be …\nTry to set the value below which negative inputs will be …\nTry to set the value above which inputs will be rounded up …\nTry to set the button input threshold above which the …\nTry to set the button input threshold below which the …\nTry to set the minimum value by which input must change …\nThe pressed state of the button.\nCreates a new rumble intensity with strong motor intensity …\nThe rumble intensity of the strong gamepad motor.\nGet the minimum value by which input must change before …\nThe threshold to apply rounding.\nTry to set the value above which inputs will be rounded up …\nTry to set the value below which positive inputs will be …\nTry to set the value below which negative inputs will be …\nTry to set the value above which inputs will be rounded up …\nTry to set the button input threshold above which the …\nTry to set the button input threshold below which the …\nTry to set the minimum value by which input must change …\nThe value of the axis.\nThe value of the button.\nCreates a new rumble intensity with weak motor intensity …\nThe rumble intensity of the weak gamepad motor.\nThe value of the <code>deadzone_lowerbound</code> parameter.\nThe value of the <code>deadzone_upperbound</code> parameter.\nThe value of the <code>livezone_lowerbound</code> parameter.\nThe value of the <code>livezone_upperbound</code> parameter.\nThe value of the <code>press_threshold</code> parameter.\nThe value of the <code>release_threshold</code> parameter.\nHow long the gamepad should rumble.\nThe gamepad to rumble.\nThe gamepad to stop rumble.\nHow intense the rumble should be.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nAbort\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitate the multi-candidate mode.\nThe Alphanumeric key (on linux/web)\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\nAn Android “scancode”.\nAn Android “keycode”, which is similar to a “…\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nAudioVolumeDown\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nAudioVolumeMute\nToggle between muted state and prior volume level. (…\nAudioVolumeUp\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nBrowserFavorites\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nBrowserRefresh\nRefresh the current page or content. (…\nBrowserSearch\nCall up the user’s preferred search page. (…\nBrowserStop\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nThe Cancel key. (on linux and web)\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe <code>Control</code> or <code>Ctrl</code> key.\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Recorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nThe Execute key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nHanjaMode\nThe (Half-Width) Characters key.\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nLegacy modifier key.\nLegacy modifier key.\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJunjaMode\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nThe logical key code of a <code>KeyboardInput</code>.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nThe key code of a <code>KeyboardInput</code>.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nA keyboard input event.\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nLastNumberRedial\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\nLaunchMail\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nLaunchMusicPlayer\nLaunchPhone\nLaunchScreenSaver\nLaunchSpreadsheet\nLaunchWebBrowser\nLaunchWebCam\nLaunchWordProcessor\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nLogOff\nA macOS “scancode”.\nA macOS “scancode”. There does not appear to be any …\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\nMediaPlayPause\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nMediaSelect\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nMediaStop\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\nMediaTrackNext\nSeek to next media or program track. (…\nMediaTrackPrevious\nSeek to previous media or program track. (…\nLegacy modifier key. Also called “Super” in certain …\nLegacy modifier key. Also called “Super” in certain …\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nContains the platform-native logical key identifier, known …\nContains the platform-native physical key identifier\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nNextCandidate, web only.\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\nThe Enter key on the numpad.\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)")