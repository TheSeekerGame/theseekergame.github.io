searchState.loadedDescShard("theseeker_engine", 2, "Add a file containing dynamic assets to the loading state. …\nSpecify a custom component <code>SceneFilter</code> to be used with …\nFlip the image along its x-axis\nFlip the image along its y-axis\nConverts a Color to variant <code>Color::Rgba</code> and return this …\nConsumes the mesh and returns a mesh with tangents …\nConverts a Color to variant <code>Color::Hsla</code> and return this …\nAdds <code>With&lt;T&gt;</code> to the <code>FilteredAccess</code> of self from a runtime …\nConsumes the mesh and returns a mesh with data set for a …\nConsumes the mesh and returns a mesh with the given vertex …\nReturns this <code>Text</code> with a new <code>JustifyText</code>.\nConverts a Color to variant <code>Color::Hsla</code> and return this …\nConsumes the mesh and returns a mesh with morph target …\nConsumes the mesh and returns a mesh with the given morph …\nReturns this <code>Text</code> with soft wrapping disabled. Hard …\nReturns this <code>TextBundle</code> with soft wrapping disabled. Hard …\nCreate a configuration that forces using the given number …\nConverts a Color to variant <code>Color::Rgba</code> and return this …\nConsumes the mesh and returns a mesh without the data for …\nConsumes the mesh and returns a mesh without the vertex …\nSpecify a custom resource <code>SceneFilter</code> to be used with this …\nReturns this <code>Transform</code> with a new rotation.\nConverts a Color to variant <code>Color::Hsla</code> and return this …\nReturns this <code>Transform</code> with a new scale.\nHelper to enable or disable spatial audio.\nHelper to use a custom spatial scale.\nHelper to set the speed from start of playback.\nReturns this <code>TextBundle</code> with a new <code>Style</code>.\nReturns this <code>TextBundle</code> with a new <code>JustifyText</code> on <code>Text</code>.\nReturns this <code>Transform</code> with a new translation.\nHelper to set the volume from start of playback.\nAdds <code>Without&lt;T&gt;</code> to the <code>FilteredAccess</code> of self.\nAdds <code>Without&lt;T&gt;</code> to the <code>FilteredAccess</code> of self from a …\nReturns a reference to the world passed to <code>Self::new</code>.\nGets read-only access to the world that the current entity …\nThe main ECS <code>World</code> of the <code>App</code>. This stores and provides …\nThe world of the scene, containing its entities and …\nThe index of the world the level belongs to, if the …\nReturns a mutable reference to the world passed to …\nReturns this entity’s world.\nGives mutable access to this entity’s <code>World</code> in a …\nGiven a position in world space, use the camera’s …\nGiven a position in world space, use the camera to compute …\nX world coordinate in pixels. Only available in GridVania …\nY world coordinate in pixels Only available in GridVania …\nSlice to this project’s collection of <code>World</code>s.\nReturns the modulus used to calculate <code>elapsed_wrapped</code>.\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrite the resources, the dynamic entities, and their …\nWrite the resources, the dynamic entities, and their …\nWrite the entities and their corresponding components to …\nWhether to show or clip overflowing items on the x axis\nReturns the vector part of the quaternion.\nWhether to show or clip overflowing items on the y axis\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nIndicates the depth at which the node should appear in the …\nAlpha channel. [0.0, 1.0]\nAlpha channel. [0.0, 1.0]\nAlpha channel. [0.0, 1.0]\nAlpha channel. [0.0, 1.0]\nBlue channel. [0.0, 1.0]\nBlue channel. [0.0, 1.0]\nChroma channel. [0.0, 1.5]\nGreen channel. [0.0, 1.0]\nGreen channel. [0.0, 1.0]\nHue channel. [0.0, 360.0]\nHue channel. [0.0, 360.0]\nLightness channel. [0.0, 1.0]\nLightness channel. [0.0, 1.5]\nRed channel. [0.0, 1.0]\nRed channel. [0.0, 1.0]\nSaturation channel. [0.0, 1.0]\nPath to the file that was dropped in.\nPath to the file that might be dropped in.\nWindow the file was dropped into.\nWindow a file is possibly going to be dropped into.\nWindow that had a canceled file drop.\nMultiplier applied to the world distance (within the …\nMultiplier applied to the world distance (within the …\nDistance from the camera where fog is completely opaque, …\nControls how much light is removed due to atmospheric …\nControls how much light is added due to light scattering …\nDistance from the camera where fog is completely …\nThe texture will repeat when the ratio between the <em>drawing </em>…\nShould the image repeat horizontally\nShould the image repeat vertically\nCursor begin and end position.\nCurrent value.\nInput string\nWindow that received the event.\nWindow that received the event.\nWindow that received the event.\nWindow that received the event.\nWhen used with the <code>LevelSelection</code> resource, levels in the …\nHow many additional steps to use at most to find the depth …\nThe slice will repeat when the ratio between the <em>drawing </em>…\nColumns on the sprite sheet\nNumber of pixels offset of the first tile\nNumber of pixels offset of the first tile\nPadding between columns in pixels\nPadding between rows in pixels\nAsset file path\nAsset file folder path\nImage file path\nAsset file paths\nRows on the sprite sheet\nSampler\nThe image width in pixels\nThe image height in pixels\nPossible values: <code>Any</code>, <code>OnlySame</code>, <code>OnlyTags</code>, …\nThis complex section isn’t meant to be used by game devs …\nChecker mode Possible values: <code>None</code>, <code>Horizontal</code>, <code>Vertical</code>\nIf you’re writing your own LDtk importer, you should …\nPossible values: <code>Hidden</code>, <code>ValueOnly</code>, <code>NameAndValue</code>, …\nPossible values: <code>Above</code>, <code>Center</code>, <code>Beneath</code>\nPossible values: <code>ZigZag</code>, <code>StraightArrow</code>, <code>CurvedArrow</code>, …\nComponent added to any LDtk Entity by default.\nIn a tileset definition, enum based tag infos\nThis section is mostly only intended for the LDtk editor …\nThe actual value of a field instance on a Level or …\nThis object is not actually used by LDtk. It ONLY exists …\nThis object is just a grid-based coordinate used in Field …\nNaming convention for Identifiers (first-letter uppercase, …\n“Image export” option when saving project. Possible …\nIntGrid value definition\nIntGrid value group definition\nIntGrid value instance\nThis file is a JSON schema of files created by LDtk level …\nThis section contains all the level data. It can be found …\nLevel background image position info\nPossible values: <code>DiscardOldOnes</code>, <code>PreventAdding</code>, <code>MoveLastOne</code>\nIf TRUE, the maxCount is a “per world” limit, if …\nNearby level info\nThis object describes the “location” of an Entity …\nPossible values: <code>Rectangle</code>, <code>Ellipse</code>, <code>Tile</code>, <code>Cross</code>\nRepresents either a String or a Multilines\nRepresents either Strings or Multilines\nIn a tileset definition, user defined meta-data of a tile.\nThis structure represents a single tile from a given …\nDefines how tileIds array is used Possible values: <code>Single</code>, …\nAn enum describing how the the Entity tile is rendered …\nThe <code>Tileset</code> definition is the most important part among …\nThis object represents a custom sub rectangle in a Tileset …\nType of the layer as Haxe Enum Possible values: <code>IntGrid</code>, …\nPossible values: <code>Manual</code>, <code>AfterLoad</code>, <code>BeforeSave</code>, <code>AfterSave</code>\n<strong>IMPORTANT</strong>: this type is available as a preview. You can …\nAlpha/opacity of the tile (0-1, defaults to 1)\nOptional list of accepted file extensions for FilePath …\nIf FALSE, the rule effect isn’t applied, and no tiles …\nContains <code>AllSomeIter</code>, for coercing a slice of options to …\nIf enabled, this entity is allowed to stay outside of the …\nPossible values: <code>Any</code>, <code>OnlySame</code>, <code>OnlyTags</code>, …\nLDtk application build identifier.  This is only used to …\nArray max length\nArray min length\nAn array containing all tiles generated by Auto-layer …\nContains all the auto-layer rule definitions.\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\nNumber of backup files to keep, if the <code>backupOnSave</code> is TRUE\nIf TRUE, an extra copy of the project will be created in a …\nTarget relative path to store backup files\nProject background color\nBackground color of the level (same as <code>bgColor</code>, except the …\nBackground image X pivot (0-1)\nBackground image Y pivot (0-1)\nPosition informations of the background image, if there is …\nThe <em>optional</em> relative path to the level background image.\nWhen TRUE, the rule will prevent other rules to be applied …\nGrid-based height\nGrid-based height\nGrid-based width\nGrid-based width\nThe following data is used internally for various …\nTRUE if the value can be null. For arrays, TRUE means it …\nAllow editor selections when the layer is not currently …\nChances for this rule to be applied (0 to 1)\nChecker mode Possible values: <code>None</code>, <code>Horizontal</code>, <code>Vertical</code>\n<em>This field was removed in 1.0.0 and should no longer be </em>…\nBase entity color\nOptional color\nUser defined color\nCoordinate ID in the layer grid\nCreates image that will be used for rendering IntGrid …\nAn array of 4 float values describing the cropped …\nAn array of command lines that can be ran manually by the …\nAn array of custom tile metadata\nX grid-based coordinate\nY grid-based coordinate\nInternal data used by the editor.  For auto-layer tiles: …\nReference of the <strong>Field definition</strong> UID\nReference of the <strong>Entity definition</strong> UID\nDefault height for new entities\nDefault width for new entities\nDefault grid size for new layers\nDefault background color of levels\n<strong>WARNING</strong>: this field will move to the <code>worlds</code> array after …\nDefault new level height\n<strong>WARNING</strong>: this field will move to the <code>worlds</code> array after …\nDefault new level width\nDefault value if selected value is null or invalid.\nDefault X pivot (0 to 1) for new entities\nDefault Y pivot (0 to 1) for new entities\nA structure containing all the definitions of this project\nA lowercase string tipping on the level location (<code>n</code>orth, <code>s</code>…\nOpacity of the layer (0 to 1.0)\nUser defined documentation for this element to provide …\nUser defined documentation for this field to provide …\nUser defined documentation for this element to provide …\nIf the project isn’t in MultiWorlds mode, this is the …\nPossible values: <code>Hidden</code>, <code>ValueOnly</code>, <code>NameAndValue</code>, …\nPossible values: <code>Above</code>, <code>Center</code>, <code>Beneath</code>\nPossible values: <code>ZigZag</code>, <code>StraightArrow</code>, <code>CurvedArrow</code>, …\nIf this value is set, then it means that this atlas uses …\nAll entities definitions, including their custom fields\nIID of the refered EntityInstance\nTileset tags using Enum values specified by …\nAll internal enums\nAn array of tags to forbid some Entities in this layer\nIf TRUE, the exported PNGs will include the level …\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\nIf TRUE, a Tiled compatible file will also be generated …\nIf enabled, all instances of this entity will be listed in …\nIf TRUE, the field value will be exported to the <code>toc</code> …\nNote: external enums are exactly the same as <code>enums</code>, except …\nIf TRUE, one file will be saved for the project (incl. all …\nRelative path to the external file providing this Enum\nThis value is not null if the project option “<em>Save </em>…\n“Flip bits”, a 2-bits integer to represent the mirror …\nHuman readable value type. Possible values: …\nArray of field definitions\nType of the field, such as <code>Int</code>, <code>Float</code>, <code>String</code>, …\nAn array of all custom fields and their values.\nAn array containing this level custom field values.\nAn object containing the values of all entity fields with …\nAn array containing various advanced flags (ie. options or …\nIf TRUE, allow rule to be matched by flipping its pattern …\nIf TRUE, allow rule to be matched by flipping its pattern …\nThis object is not actually used by LDtk. It ONLY exists …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGrid-based coordinates (<code>[x,y]</code> format)\nWidth and height of the grid in pixels\nGrid size\nParent group identifier (0 if none)\nHeight of the optional “guide” grid in pixels\nWidth of the optional “guide” grid in pixels\nHeight in pixels\nPixel height\nEntity height in pixels. For non-resizable entities, it …\nHide the layer from the list on the side of the editor …\nTileset UID if provided\nEnum value\nField definition identifier\nUser defined unique identifier\nUser defined unique identifier\nUser defined unique identifier\nUser defined unique identifier\nUser defined unique identifier\nUser defined string identifier\nUser defined unique identifier\nEntity definition identifier\nLayer definition identifier\nUser defined unique identifier\nUser defined unique identifier\nNaming convention for Identifiers (first-letter uppercase, …\nUnique project identifier\nUnique instance identifier\nUnique layer instance identifier\nUnique instance identifier\nUnique instance identifer\nIID information of this instance\n“Image export” option when saving project. Possible …\nAlpha of this layer when it is not the active one.\n<strong>WARNING</strong>: this deprecated value will be <em>removed</em> completely …\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\nA list of all values in the IntGrid layer, stored in CSV …\nAn array that defines extra optional info for each IntGrid …\nGroup informations for IntGrid values\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf TRUE, then the rule should be re-evaluated by the …\nTRUE if the value is an array of multiple values\nFile format version\nOnly applies to entities resizable on both X/Y. If TRUE, …\nReference the Layer definition UID\nType of the layer (<em>IntGrid, Entities, Tiles or AutoLayer</em>)\nIID of the LayerInstance containing the refered …\nLayer type (possible values: IntGrid, Entities, Tiles or …\nAn array containing all Layer instances. <strong>IMPORTANT</strong>: if the …\nAll layer definitions\nContains <code>LdtkFields</code> trait, providing convenience methods …\nBackground color of the level. If <code>null</code>, the project …\nAn enum defining the way the background image (if any) is …\nAll custom fields available to all levels.\nReference to the UID of the level containing this layer …\nIID of the Level containing the refered EntityInstance\nNeighbour Instance Identifier\nThe default naming convention for level identifiers.\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\nAll levels. The order of this array is only relevant in …\nAll levels from this world. The order of this array is …\nPossible values: <code>DiscardOldOnes</code>, <code>PreventAdding</code>, <code>MoveLastOne</code>\nIf TRUE, the maxCount is a “per world” limit, if …\nContains <code>LoadedLevel</code> and related types/implementaions.\nMax limit for value, if applicable\nMax instances count\nMax pixel height (only applies if the entity is resizable …\nMax pixel width (only applies if the entity is resizable …\nMin limit for value, if applicable\nMin pixel height (only applies if the entity is resizable …\nMin pixel width (only applies if the entity is resizable …\nIf TRUE, the Json is partially minified (no indentation, …\nAn array listing all other levels touching this one on the …\nNext Unique integer ID available\nAn array of 4 dimensions for the up/right/down/left …\nLayer opacity as Float [0-1]\nAn Array containing the UIDs of optional rules that were …\nDefault IntGrid value when checking cells outside of level …\nThis layer can use another tileset by overriding the …\nDistance in pixels from image borders\nParallax horizontal factor (from -1 to 1, defaults to 0) …\nParallax vertical factor (from -1 to 1, defaults to 0) …\nIf true (default), a layer with a parallax factor will …\nRule pattern (size x size)\nIf TRUE, enable Perlin filtering to only apply rule on …\nPivot coordinates  (<code>[x,y]</code> format, values are from 0 to 1) …\nPivot X coordinate (from 0 to 1.0)\nX pivot of a tile stamp (0-1)\nPivot Y coordinate (from 0 to 1.0)\nY pivot of a tile stamp (0-1)\nFile naming pattern for exported PNGs\nInternal enum representing the possible field types. …\nType of the layer as Haxe Enum Possible values: <code>IntGrid</code>, …\nPixel coordinates (<code>[x,y]</code> format) in current level …\nPixel coordinates of the tile in the <strong>layer</strong> (<code>[x,y]</code> format). …\nImage height in pixels\nHeight of the level in pixels\nX offset of the layer, in pixels (IMPORTANT: this should …\nX offset in pixels to render this layer, usually 0 …\nY offset of the layer, in pixels (IMPORTANT: this should …\nY offset in pixels to render this layer, usually 0 …\nTotal layer X pixel offset, including both instance and …\nTotal layer Y pixel offset, including both instance and …\nImage width in pixels\nWidth of the level in pixels\nContains <code>RawLevelAccessor</code>: convenience methods for …\nEditor internal raw values\nOptional regular expression that needs to be matched to …\nPath to the source file, relative to the current project …\nIf TRUE, the content of this layer will be used when …\nPossible values: <code>Rectangle</code>, <code>Ellipse</code>, <code>Tile</code>, <code>Cross</code>\nAn array of tags to filter Entities that can be added to …\nIf TRUE, the entity instances will be resizable …\nIf TRUE, the entity instances will be resizable vertically\nArray of group of tiles selections, only meant to be used …\nAn array containing the <code>[scaleX,scaleY]</code> values of the …\nIf enabled, this field will be searchable through LDtk …\nRandom seed used for Auto-Layers rendering\nDisplay entity name in editor\nIf TRUE, a very simplified will be generated on saving, …\nPattern width &amp; height. Should only be 1,3,5 or 7.\nThe entity “smart” color, guessed from either Entity …\nThe “guessed” color for this level in the editor, …\nSpace in pixels between all tiles\nPixel coordinates of the tile in the <strong>tileset</strong> (<code>[x,y]</code> format)\nThe <em>Tile ID</em> in the corresponding tileset.\nAn array of strings that classifies this entity\nAn array of user-defined tags to organize the Enums\nAn array of user-defined tags to organize the Tilesets\nArray of tags defined in this Entity definition\nOptional Enum definition UID used for this tileset …\nPossible values: &lt;<code>null</code>&gt;, <code>LangPython</code>, <code>LangRuby</code>, <code>LangJS</code>, …\nOptional TilesetRect used to display this field (this can …\nOptional TilesetRect used to display this entity (it could …\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\nDefines how tileIds array is used Possible values: <code>Single</code>, …\nIf the tiles are smaller or larger than the layer grid, …\nIf the tiles are smaller or larger than the layer grid, …\nMax random offset for X tile pos\nMin random offset for X tile pos\nMax random offset for Y tile pos\nMin random offset for Y tile pos\nAn object representing a rectangle from an existing Tileset\nOptional tileset rectangle to represents this value\nArray containing all the possible tile IDs rectangles …\nAn enum describing how the the Entity tile is rendered …\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\nTile X offset\nTile Y offset\nReference to the default Tileset UID being used by this …\nThe definition UID of corresponding Tileset, if any.\nTileset ID used for optional tile display\nThe relative path to corresponding Tileset, if any.\nUID of the tileset used for a Tile\nUID of the tileset\nAll tilesets\nAll instances of entities that have their <code>exportToToc</code> flag …\nAn array containing the <code>[x,y]</code> pixel coordinates of the …\nThis optional description is used by LDtk Samples to show …\nUser defined color for the UI\nDisplay tags\nThis tile overrides the one defined in <code>tileRect</code> in the UI\nUnique Int identifier\nUnique Int identifier\nUnique Int identifier\nUnique Int identifier\nUnique Int identifier\nGroup unique ID\nUnique Intidentifier\nUnique Int identifier\nAsynchronous rendering option for large/complex layers\nIf TRUE, the level identifier will always automatically …\nIf TRUE, the color associated with this field will …\nIntGrid value\nActual value of the field instance. The value type varies, …\nThe IntGrid value itself\nAll possible enum values, with their optional Tile infos.\nLayer instance visibility\nWidth in pixels\nPossible values: <code>Manual</code>, <code>AfterLoad</code>, <code>BeforeSave</code>, <code>AfterSave</code>\nPixel width\nEntity width in pixels. For non-resizable entities, it …\nIndex that represents the “depth” of the level in the …\n<strong>WARNING</strong>: this field will move to the <code>worlds</code> array after …\nHeight of the world grid in pixels.\n<strong>WARNING</strong>: this field will move to the <code>worlds</code> array after …\nWidth of the world grid in pixels.\nIID of the World containing the refered EntityInstance\n<strong>WARNING</strong>: this field will move to the <code>worlds</code> array after …\nAn enum that describes how levels are organized in this …\nX world coordinate in pixels. Only available in GridVania …\nWorld X coordinate in pixels.  Only relevant for world …\nY world coordinate in pixels Only available in GridVania …\nWorld Y coordinate in pixels.  Only relevant for world …\nThis array will be empty, unless you enable the …\nX pixels coordinate of the top-left corner in the Tileset …\nX cell coord modulo\nX cell start offset\nY pixels coordinate of the top-left corner in the Tileset …\nY cell coord modulo\nY cell start offset\n<code>Iterator</code> for coercing a slice of options to non-options.\nError that can occur when attempting to construct …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCould not find a field instance with the given identifier.\nConvenience methods for accessing field instances.\nErrors related to the <code>LdtkFields</code> trait.\nThe field instance exists and is the correct variant, but …\nThe field instance exists, but is the wrong <code>FieldValue</code> …\nImmutable accessor for this item’s field instances, by …\nReturns the argument unchanged.\nGet this item’s Bool field value for the given …\nGet this item’s Bools field value for the given …\nGet this item’s Color field value for the given …\nGet this item’s Colors field value for the given …\nGet this item’s non-null EntityRef field value for the …\nGet this item’s non-null Enum field value for the given …\nGet this item’s field value for the given identifier.\nGet this item’s field instance (with metadata) for the …\nGet this item’s non-null FilePath field value for the …\nGet this item’s non-null Float field value for the given …\nGet this item’s non-null Int field value for the given …\nGet this item’s nullable EntityRef field value for the …\nGet this item’s nullable EntityRefs field value for the …\nGet this item’s nullable Enum field value for the given …\nGet this item’s nullable Enums field value for the given …\nGet this item’s nullable FilePath field value for the …\nGet this item’s nullable FilePaths field value for the …\nGet this item’s nullable Float field value for the given …\nGet this item’s nullable Floats field value for the …\nGet this item’s nullable Int field value for the given …\nGet this item’s nullable Ints field value for the given …\nGet this item’s nullable Point field value for the given …\nGet this item’s nullable Points field value for the …\nGet this item’s nullable String field value for the …\nGet this item’s nullable Strings field value for the …\nGet this item’s nullable Tile field value for the given …\nGet this item’s nullable Tiles field value for the given …\nGet this item’s non-null Point field value for the given …\nGet this item’s non-null String field value for the …\nGet this item’s non-null Tile field value for the given …\nCalls <code>U::from(self)</code>.\nIterate over this item’s non-null EntityRefs field value …\nIterate over this item’s non-null Enums field value for …\nIterate over this item’s non-null FilePaths field value …\nIterate over this item’s non-null Floats field value for …\nIterate over this item’s non-null Ints field value for …\nIterate over this item’s non-null Points field value for …\nIterate over this item’s non-null Strings field value …\nIterate over this item’s non-null Tiles field value for …\nError that can occur when trying to coerce a <code>Level</code> into a …\nWrapper around a borrowed <code>Level</code> that guarantees the level …\nBackground color of the level (same as <code>bgColor</code>, except the …\nBackground image X pivot (0-1)\nBackground image Y pivot (0-1)\nPosition informations of the background image, if there is …\nThe <em>optional</em> relative path to the level background image.\nThis value is not null if the project option “<em>Save </em>…\nAn array containing this level custom field values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUser defined unique identifier\nUnique instance identifier\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn array containing all Layer instances.\nBackground color of the level. If <code>null</code>, the project …\nAn enum defining the way the background image (if any) is …\nAn array listing all other levels touching this one on the …\nHeight of the level in pixels\nWidth of the level in pixels\nThe raw level data borrowed by this instance.\nThe “guessed” color for this level in the editor, …\nUnique Int identifier\nIf TRUE, the level identifier will always automatically …\nIndex that represents the “depth” of the level in the …\nWorld X coordinate in pixels.  Only relevant for world …\nWorld Y coordinate in pixels.  Only relevant for world …\nIterator returned by <code>RawLevelAccessor::iter_raw_levels</code>.\nIterator returned by …\nIterator returned by <code>RawLevelAccessor::iter_root_levels</code>.\nIterator returned by …\nIterator returned by <code>RawLevelAccessor::iter_world_levels</code>.\nIterator returned by …\nConvenience methods for accessing raw level data by …\nImmutable access to a level at the given <code>LevelIndices</code>.\nIterate through this project’s levels.\nIterate through this project’s levels enumerated with …\nIterate through this project’s root levels.\nIterate through this project’s root levels enumerated …\nIterate through this project’s world levels.\nIterate through this project’s world levels enumerated …\nSlice to this project’s collection of root levels.\nSlice to this project’s collection of <code>World</code>s.\nApproximations for converting the wattage of lamps to …\nPredefined for lux values in several locations.\nThe amount of light (lux) from ambient daylight (not …\nThe amount of light (lux) during the dark limit of civil …\nThe amount of light (lux) during sunrise or sunset on a …\nThe amount of light (lux) in very dark overcast day\nThe amount of light (lux) in direct sunlight.\nThe amount of light (lux) in full daylight (not direct …\nThe amount of light (lux) during a full moon on a clear …\nThe amount of light (lux) in an office building’s …\nThe amount of light (lux) in family living room lights.\nThe amount of light (lux) in a moonless, overcast night …\nThe amount of light (lux) in an office.\nThe amount of light (lux) on a overcast day; typical TV …\nAn axis-aligned box defined by its minimum and maximum …\nA cylinder with hemispheres at the top and bottom\nA circle in the <code>XY</code> plane\nA cylinder which stands on the XZ plane\nA sphere made from a subdivided Icosahedron.\nA square on the <code>XZ</code> plane centered at the origin.\nA rectangle on the <code>XY</code> plane centered at the origin.\nA regular polygon in the <code>XY</code> plane\nA torus (donut) shape.\nA sphere made of sectors and stacks.\nHeight of the middle cylinder on the <code>Y</code> axis, excluding the …\nHorizontally-flip the texture coordinates of the resulting …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new box given the coordinates of two opposing …\nCreates a new plane centered at the origin with the …\nHeight of the cylinder in the Y axis.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of latitudes, distributed by inclination. Must be …\nNumber of longitudes, or meridians, distributed by azimuth.\nCreates a new box centered at the origin with the supplied …\nCreates a regular polygon in the <code>XY</code> plane\nCreates a circle in the <code>XY</code> plane\nRadius on the <code>XZ</code> plane.\nRadius in the XZ plane.\nThe radius of the sphere.\nCircumscribed radius in the <code>XY</code> plane.\nInscribed radius in the <code>XY</code> plane.\nThe radius of the sphere.\nThe number of vertices around each horizontal slice of the …\nNumber of sections in cylinder between hemispheres.\nLongitudinal sectors\nThe number of segments between the two ends. Setting this …\nNumber of sides.\nFull width and height of the rectangle.\nThe total side length of the square.\nLatitudinal stacks\nThe number of subdivisions in the mesh.\nThe number of subdivisions applied.\nManner in which UV coordinates are distributed vertically.\nThe number of vertices used.\nThe script is done, no actions remain that can be run ever …\nThis is when scripts get initialized (the <code>ScriptRuntime</code> …\nResource to track when the current game level was …\nThere may be more actions to run; do another update\nNothing unusual\nThis is when scripts get run/updated\nUse this for system ordering relative to scripts (within …\nReturned by <code>ScriptTracker::update</code> to indicate the status …\nThe script wants to be forcefully finished, regardless of …\nGet the asset key of the script that is currently playing, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe GameTime Tick\nThe time since app startup, when the level was spawned\nToggles the value of a slot and returns the new value\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThis is when old “game tick events” are cleared (in …\nRun after <code>GameTickUpdate</code> used for running systems which …\nApply this to anything that relies on <code>GameTime</code>\nOur alternative to <code>FixedUpdate</code>\nRuns after the <code>GameTickUpdate</code> schedule\nRuns after <code>GameTime</code> is updated, but before the …\nRun condition to run something “every N ticks”\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe time base rate\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the “elapsed” time when we last updated\nCreate with a non-default tick rate\nGet the number of new ticks to be simulated this Bevy …\nGet the leftover partial tick to be carried over to the …\nReset tick counters to zero, set the last update to now, …\nOur alternative to Bevy’s fixed timestep, based on …\nGet the current tick number to be simulated\nGet the total target number of ticks as of this Bevy frame …\nEvery Bevy frame, this gets called to advance the tick …\nUpdate <code>GameTime</code> every frame")