searchState.loadedDescShard("theseeker_engine", 1, "Creates a 3D rotation matrix from the given euler rotation …\nCreates a affine transformation matrix containing a …\nCreates a quaternion from the given Euler rotation …\nGenerate a <code>TextureAtlasLayout</code> as a grid where each …\nCreates a new <code>Duration</code> from the specified number of hours.\nReturn new fixed time clock with given timestep frequency …\nConstruct a new <code>LevelSet</code> from a collection of iids.\nTakes each element in the <code>Iterator</code> and collects it into an …\nCreates an <code>InvalidDirectionError</code> from the length of an …\nCreates an affine transformation matrix from the given 2x2 …\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 rotation matrix.\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 SIMD aligned rotation …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a quaternion from a 3x3 rotation matrix inside a …\nExtracts the translation, rotation, and scale from <code>matrix</code>. …\nCreate new virtual clock with given maximum delta step …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreate a new <code>Segment2d</code> from its endpoints and compute its …\nCreate a new <code>Plane3d</code> based on three points and compute the …\nCreate a new <code>Segment3d</code> from its endpoints and compute its …\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transformation matrix from the given …\nConstructs an <code>Arc&lt;T&gt;</code> from a raw pointer.\nCreates a new entity ID with the specified <code>index</code> and a …\nConstructs an <code>Arc&lt;T, A&gt;</code> from a raw pointer.\nConstructs a concrete instance of <code>Self</code> from a reflected …\nPerform a <code>FromReflect::from_reflect</code> conversion on the …\nCreate a new PRNG seeded from another <code>Rng</code>.\nCreates a new <code>Transform</code>, with <code>rotation</code>. Translation will …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to either …\nCreates an affine transformation matrix from the given 3D …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates a new <code>Transform</code>, with <code>scale</code>. Translation will be 0 …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix containing the …\nCreates a 2x2 matrix containing the combining non-uniform …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 3D …\nCreate a quaternion that rotates <code>v.length()</code> radians around …\nCreate a new dynamic scene from a given scene.\nReturn new fixed time clock with given timestep seconds as …\nCreates a new timer with a given duration in seconds.\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nConstructs a <code>Text</code> with a single section.\nCreate a <code>TextBundle</code> from a single section.\nConstructs a <code>Text</code> from a list of sections.\nCreate a <code>TextBundle</code> from a list of sections.\nCreate a new PRNG using the given seed.\nCreate a new <code>Ellipse</code> from a given full size.\nCreate a new <code>Rectangle</code> from a given full size\nCreate a new <code>Cuboid</code> from a given full size\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a rotation quaternion from a slice.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreate an empty <code>TextSection</code> from a style. Useful when the …\nCreates a new <code>TransformBundle</code> from a <code>Transform</code>.\nCreates a new <code>SpatialBundle</code> from a <code>Transform</code>.\nCreates a new <code>Transform</code>, with <code>translation</code>. Rotation will …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 3D …\nCreates a new rotation quaternion from a 4D vector.\nCreates a <code>FogFalloff::Exponential</code> value from the given …\nCreates a <code>FogFalloff::Atmospheric</code> value from the given …\nCreates a <code>FogFalloff::Atmospheric</code> value from the given …\nCreates a <code>FogFalloff::Exponential</code> value from the given …\nCreates a <code>FogFalloff::Atmospheric</code> value from the given …\nCreates a <code>FogFalloff::Atmospheric</code> value from the given …\nCreates a <code>FogFalloff::ExponentialSquared</code> value from the …\nCreates a <code>FogFalloff::ExponentialSquared</code> value from the …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCreates <code>Self</code> using data from the given <code>World</code>.\nPrepare a builder that will extract entities and their …\nCreate a new dynamic scene from a given world.\nConstructs default reflected <code>FromWorld</code> from world using …\nCreate a direction from its <code>x</code> and <code>y</code> components.\nCreates a new <code>Transform</code> at the position <code>(x, y, z)</code>. In 2d, …\nCreate a direction from its <code>x</code>, <code>y</code>, and <code>z</code> components.\nCreates a new rotation quaternion.\nConverts a Color to variant <code>Color::Rgba</code> and return green …\nThe gamepad on which the button is located on.\nThe gamepad on which the axis is located on.\n‘Greater than or equal to’ comparison for two <code>Arc</code>s.\nReturn a random value supporting the <code>Standard</code> distribution.\nReturn a bool with a probability <code>p</code> of being true.\nGenerate a random value in the given range.\nReturn a bool with a probability of <code>numerator/denominator</code> …\nGenerate tangents for the mesh using the <code>mikktspace</code> …\nReturns the generation of this Entity’s index. The …\nReturns the position data of the provided <code>input_device</code>.\nGets the <code>Entity</code> ID of the parent.\nImmutable access to the IID as a <code>String</code>.\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nRetrieves a reference to the <code>Asset</code> with the given <code>id</code>, if …\nReturns the read-only query item for the given <code>Entity</code>.\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nRetrieves a reference to the given <code>entity</code>’s <code>Component</code> of …\nReturns a reference to the schedule associated with <code>label</code>, …\nGet the current state.\nReturns <code>true</code> if the entity is visible in the hierarchy. …\nReturns <code>true</code> if the entity is visible in any view. …\nGets access to the component of type <code>T</code> for the current …\nReturns a vector of references to any plugins of type <code>T</code> …\nGet the asset corresponding to the given key.\nRetrieves the default <code>AssetLoader</code> for the given <code>Asset</code> …\nRetrieves the default <code>AssetLoader</code> for the given <code>Asset</code> …\nReturns the registered <code>AssetLoader</code> associated with the …\nReturns the registered <code>AssetLoader</code> associated with the …\nGet this item’s Bool field value for the given …\nGet this item’s Bools field value for the given …\nReturns the schedule’s current <code>ScheduleBuildSettings</code>.\nGets the component of the given <code>ComponentId</code> from the …\nGets the component of the given <code>ComponentId</code> from the …\nRetrieves an immutable untyped reference to the given …\nGets the component of the given <code>ComponentId</code> from the …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given component. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nRetrieves the change ticks for the given <code>ComponentId</code>. This …\nGet this item’s Color field value for the given …\nGet this item’s Colors field value for the given …\nReturns a shared reference to the component <code>T</code> of the given …\nReturns a mutable reference to the component <code>T</code> of the …\nReturns a mutable reference to the component <code>T</code> of the …\nReturns a mutable reference to the component <code>T</code> of the …\nReturns <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> associated with …\nReturns mutable <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> …\nGets the curves for a bone.\nGets the curves by it’s <code>EntityPath</code>.\nReturns the grid line at which the item should end, or <code>None</code>…\nRetrieves an <code>EntityRef</code> that exposes read-only operations …\nReturns the <code>EntityCommands</code> for the requested <code>Entity</code>, if it …\nRetrieves an <code>EntityWorldMut</code> that exposes read and write …\nGet this item’s non-null EntityRef field value for the …\nGet this item’s non-null Enum field value for the given …\nGet a specific event by id if it still exists in the …\nReturns the schedule’s current execution strategy.\nReturns a reference to the value of the field named <code>name</code>, …\nReturns a reference to the value of the field with index …\nGet this item’s field value for the given identifier.\nGet this item’s field instance (with metadata) for the …\nReturns a mutable reference to the value of the field …\nReturns a mutable reference to the value of the field with …\nGet this item’s non-null FilePath field value for the …\nGet all currently registered files to be loaded for the …\nGet this item’s non-null Float field value for the given …\nReturns an active handle for the given path, if the asset …\nRetrieves an <code>AssetHandleProvider</code> capable of reserving new …\nReturns an active untyped handle for the given path, if …\nReturns all active untyped handles for the given path, if …\nComputes and returns the index data of the mesh as bytes. …\nReturns the query item for the given <code>Entity</code>, with the …\nGet this item’s non-null Int field value for the given …\nAn iterator visiting every just pressed input in arbitrary …\nAn iterator visiting every just released input in …\nGets the tick indicating the last time this system ran.\nReturns a reference to the level metadata corresponding to …\nRetrieves the main <code>LoadState</code> of a given asset <code>id</code>.\nRetrieves all loads states for the given asset id.\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nReturns the read-only query results for the given array of …\nReturns the read-only query items for the given array of …\nGets an <code>EntityRef</code> for multiple entities at once.\nGets mutable access to multiple entities.\nReturns the query results for the given array of <code>Entity</code>.\nReturns the query items for the given array of <code>Entity</code>.\nGet this item’s nullable EntityRef field value for the …\nGet this item’s nullable EntityRefs field value for the …\nGet this item’s nullable Enum field value for the given …\nGet this item’s nullable Enums field value for the given …\nGet this item’s nullable FilePath field value for the …\nGet this item’s nullable FilePaths field value for the …\nGet this item’s nullable Float field value for the given …\nGet this item’s nullable Floats field value for the …\nGet this item’s nullable Int field value for the given …\nGet this item’s nullable Ints field value for the given …\nGet this item’s nullable Point field value for the given …\nGet this item’s nullable Points field value for the …\nGet this item’s nullable String field value for the …\nGet this item’s nullable Strings field value for the …\nGet this item’s nullable Tile field value for the given …\nGet this item’s nullable Tiles field value for the given …\nGet this <code>Mesh</code>’s <code>MeshVertexBufferLayout</code>, used in …\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nRetrieves a mutable reference to the <code>Asset</code> with the given …\nReturns the query item for the given <code>Entity</code>.\nGets mutable access to the component of type <code>T</code> for the …\nGets mutable access to the component of type <code>T</code> for the …\nRetrieves a mutable reference to the given <code>entity</code>’s …\nReturns a mutable reference into the given <code>Arc</code>, if there …\nReturns a mutable reference to the schedule associated …\nGets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…\nGets a <code>MutUntyped</code> of the component of the given <code>ComponentId</code>…\nRetrieves a mutable untyped reference to the given <code>entity</code>…\nReturns a mutable reference into the given <code>Arc</code>, without …\nGets a <code>!Send</code> resource to the resource with the id …\nGets a <code>!Send</code> resource to the resource with the id …\nGets a reference to the non-send resource of the given …\nGets a mutable reference to the non-send resource of the …\nRetrieves an <code>Asset</code> stored for the given <code>id</code> if it exists. …\nReturns an <code>EntityWorldMut</code> for the given <code>entity</code> (if it …\nPushes a <code>Command</code> to the queue for creating a new <code>Entity</code> if …\nReturns the path for the given <code>id</code>, if it has one.\nReturns an active untyped handle for the given path and …\nRetrieves the default <code>AssetLoader</code> for the given path, if …\nReturns an active untyped asset id for the given path, if …\nReturns all active untyped asset IDs for the given path, …\nGet a point at a given distance along the ray\nGet a point at a given distance along the ray\nGet this item’s non-null Point field value for the given …\nAn iterator visiting every pressed input in arbitrary …\nReturns the <code>Touch</code> input corresponding to the <code>id</code> if it is …\nImmutable access to a level at the given <code>LevelIndices</code>.\nImmutable access to a level at the given level iid.\nGets a new <code>ManualEventReader</code>. This will include all events …\nGets a new <code>ManualEventReader</code>. This will ignore all events …\nRetrieves the <code>RecursiveDependencyLoadState</code> of a given …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nGets access to the component of type <code>T</code> for the current …\nReturns the <code>Touch</code> input corresponding to the <code>id</code> if it has …\nReturns the <code>TypeInfo</code> of the type <em>represented</em> by this value.\nGets a reference to the resource of the given type if it …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nRetrieves the change ticks for the given resource.\nRetrieves the change ticks for the given <code>ComponentId</code>.\nGets a mutable reference to the resource of the given type …\nGets a pointer to the resource with the id <code>ComponentId</code> if …\nGets a mutable reference to the resource of type <code>T</code> if it …\nGets a reference including change detection to the …\nGets read-only access to the <code>Schedule</code> with the provided …\nGets read-write access to a <code>Schedule</code> with the provided …\nTurn the value into a serializable representation\nReturns a single immutable query result when there is …\nReturns a single read-only query item when there is …\nReturns a single mutable query result when there is …\nReturns a single query item when there is exactly one …\nReturns a query result when there is exactly one entity …\nReturns a query result when there is exactly one entity …\nRetrieves the <code>AssetSource</code> for the given <code>source</code>.\nReturns span for this grid item, or <code>None</code> if not set.\nReturns the grid line at which the item should start, or …\nGet this item’s non-null String field value for the …\nRetrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …\nRetrieves a <code>SubApp</code> inside this <code>App</code> with the given label, …\nRetrieves the texture <em>section</em> index of the given <code>texture</code> …\nGet this item’s non-null Tile field value for the given …\nGets the query result for the given <code>World</code> and <code>Entity</code>.\nReturns the query item for the given <code>Entity</code>.\nReturns the unclamped position data of the provided …\nComputes and returns the vertex data of the mesh as bytes. …\nThe global transform of the entity.\nGlobal transform of the scene root entity.\nGlobal transform of the scene root entity.\nThe absolute transform of the sprite. This should …\nThe absolute transform of the sprite. This should …\nThe global transform of the text.\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the node\nThe global transform of the entity.\nReturns the <code>ScheduleGraph</code>.\nReturns a mutable reference to the <code>ScheduleGraph</code>.\nGrid-based coordinates (<code>[x,y]</code> format)\nDefines the size of implicitly created columns. Columns …\nControls whether automatically placed grid items are …\nDefines the size of implicitly created rows. Rows are …\nThe column in which a grid item starts and how many …\nThe row in which a grid item starts and how many rows it …\nGrid size\nGrid size\nDefines the number of columns a grid has and the sizes of …\nDefines the number of rows a grid has and the sizes of …\nGreater-than comparison for two <code>Arc</code>s.\nConverts a Color to variant <code>Color::Hsla</code> and return hue\nThe half height of the cylinder\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemicircles\nHalf the length of the line segment. The segment extends …\nHalf the height of the capsule, excluding the hemispheres\nRectangle half-size.\nRectangle half-size.\nRectangle half-size.\nHalf of the width and height of the ellipse.\nHalf of the width and height of the rectangle\nHalf of the width, height and depth of the cuboid\nReturns true if system as deferred buffers\nWhether this mesh has morph targets.\nIf this is set to <code>true</code>, the camera will use an …\nRectangle height (max.y - min.y).\nRectangle height (max.y - min.y).\nRectangle height (max.y - min.y).\nThe window’s client area height in logical pixels.\nReturns the height of a 2D image.\nThe height of the cone\nThe height of the frustum\nThe ideal height of the node. <code>height</code> is used when it is …\nEntity height in pixels. For non-resizable entities, it …\nNew <code>Color</code> from sRGB colorspace.\nCreates a new <code>UiRect</code> where <code>left</code> and <code>right</code> take the given …\nNew <code>Color</code> with HSL representation in sRGB colorspace.\nNew <code>Color</code> from <code>[f32; 3]</code> (or a type that can be converted …\nConvert <code>Color</code> to HSLA and return as <code>Vec3</code>.\nNew <code>Color</code> with HSL representation in sRGB colorspace.\nNew <code>Color</code> from <code>[f32; 4]</code> (or a type that can be converted …\nConvert <code>Color</code> to HSLA and return as <code>Vec4</code>.\nReturns the <code>AssetId</code> of this <code>Asset</code>.\nReturns the <code>UntypedAssetId</code> for the referenced asset.\nReturns the ID of the current entity.\nReturns the ID of the current entity.\nRetrieves this <code>World</code>’s unique ID\nReturns the ID of the current entity.\nThe <code>ID</code> of the gamepad.\nThe unique identifier of the finger.\nLayer definition identifier\nUser defined unique identifier\nEntity definition identifier\nLayer definition identifier\nReturns an iterator over the <code>AssetId</code> of every <code>Asset</code> stored …\nSuppress warnings and errors that would result from …\nSuppress warnings and errors that would result from …\nList of <code>ComponentId</code>s to ignore when reporting system order …\nConstruct a <code>LevelSelection::Iid</code> using the given iid.\nUnique layer instance identifier\nUnique instance identifier\nUnique layer instance identifier\nIlluminance in lux (lumens per square meter), representing …\nThe image of the node\nThe image of the node\nThe image of the node\nThe size of the image in pixels\nThe size of the image in pixels\nShould the window use Input Method Editor?\nSets location of IME candidate box in client area …\nConstruct a new <code>LevelIndices</code> pointing to a level in the …\nAdd these systems to the provided <code>set</code>.\nAdd these system sets to the provided <code>set</code>.\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nConstruct a new <code>LevelIndices</code> pointing to a level in a …\nIncrements the world’s current change tick and returns …\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nIncrements the strong reference count on the <code>Arc&lt;T&gt;</code> …\nReturn a transiently unique identifier.\nConstruct a <code>LevelSelection::Indices</code> using the given level …\nTexture atlas section index\nRetrieves the vertex <code>indices</code> of the mesh.\nConstruct a <code>LevelSelection::Indices</code> using the given world …\nRetrieves the vertex <code>indices</code> of the mesh mutably.\nConstructs an event at the info level.\nCall <code>info!</code> once per call site.\nConstructs a span at the info level.\nInherited visibility of an entity.\nInherited visibility of the scene root entity.\nInherited visibility of the scene root entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nInherited visibility of an entity.\nThe inherited visibility of the entity.\nInitializes the given <code>Asset</code> in the <code>App</code> by:\nInitializes the given loader in the <code>App</code>’s <code>AssetServer</code>.\nInitialise an <code>AssetCollection</code>\nInitialise an <code>AssetCollection</code>\nInitializes a new <code>Component</code> type and returns the …\nInitializes a new <code>Component</code> type and returns the …\nRegisters <code>GizmoConfigGroup</code> <code>T</code> in the app enabling the use …\nInitialize a non-send <code>Resource</code> with standard starting …\nInitializes a new non-send resource and returns the …\nConvenience system for initting a resource of the given …\nThe resource will be initialized at the end of the loading …\nInitialize a <code>Resource</code> with standard starting values by …\nInitializes a new resource and returns the <code>ComponentId</code> …\nPushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …\nAdd any <code>FromWorld</code> resource to be initialized after all …\nInitializes a new empty <code>schedule</code> to the <code>App</code> under the …\nInitializes a <code>State</code> with standard starting values.\nSets the initial size of the atlas in pixels.\nInitialize the system.\nInitializes any newly-added systems and conditions, …\nAngle defining the distance from the spot light direction …\nGet the inner radius of the torus. For a ring torus, this …\nGet the inradius or apothem of the regular polygon. This …\nInserts <code>GizmoConfig</code> and <code>GizmoConfigGroup</code> replacing old …\nInserts the given <code>asset</code>, identified by the given <code>id</code>. If an …\nAdds a <code>Bundle</code> of components to the entity.\nInsert a reflected <code>Component</code> into the entity like <code>insert()</code>.\nInsert a reflected <code>Resource</code> into the world like <code>insert()</code>.\nInserts a labeled schedule into the map.\nSets the data for a vertex attribute (position, normal, …\nInserts a dynamic <code>Component</code> into the entity.\nInserts a dynamic <code>Bundle</code> into the entity.\nInserts children at the given index.\nInserts children at the given index.\nInsert the <code>GizmoConfigGroup</code> in the app with the given …\nSets the vertex indices of the mesh. They describe how …\nInserts a new <code>!Send</code> resource with the given <code>value</code>. Will …\nInserts a non-send resource to the app.\nInserts a new non-send resource with the given <code>value</code>.\nFor a given batch of (<code>Entity</code>, <code>Bundle</code>) pairs, either spawns …\nPushes a <code>Command</code> to the queue for creating entities, if …\nInserts a <code>Resource</code> to the current <code>App</code> and overwrites any …\nInserts a new resource with the given <code>value</code>.\nPushes a <code>Command</code> to the queue for inserting a <code>Resource</code> in …\nInserts a new resource with the given <code>value</code>. Will replace …\nInserts a specific <code>State</code> to the current <code>App</code> and overrides …\nInserts an existing sub app into the app\nCreate a new rectangle with a constant inset.\nCreate a new rectangle with a constant inset.\nCreate a new rectangle with a constant inset.\nReturns the components of an <code>Entity</code> through <code>ComponentInfo</code>.\nCheck that an scene instance spawned previously is ready …\n<strong>WARNING</strong>: this deprecated value is no longer exported since …\nA list of all values in the IntGrid layer, stored in CSV …\nImage used for rendering int grid colors.\nLuminous power in lumens, representing the amount of light …\nLuminous power in lumens, representing the amount of light …\nScale factor applied to the diffuse and specular light …\nDescribes whether and how the button has been interacted …\nReturns an <code>Interned</code> value corresponding to <code>self</code>.\nStores internal state that isn’t directly accessible.\nGet the internal angle of the regular polygon in degrees.\nGet the internal angle of the regular polygon in radians.\nInterpolates between <code>a</code> and <code>b</code> with  a interpolation factor …\nPerforms an nlerp, because it’s cheaper and easier to …\nInterpolation method to use between keyframes.\nBuild a new rectangle formed of the intersection of this …\nBuild a new rectangle formed of the intersection of this …\nBuild a new rectangle formed of the intersection of this …\nGet the distance to a plane if the ray intersects it\nGet the distance to a plane if the ray intersects it\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value as a <code>Box&lt;dyn Any&gt;</code>.\nConvert into a <code>SystemConfigs</code>.\nDue to lifetime limitations of the <code>Deref</code> trait, this …\nConsume <code>self</code> and return a mutable reference to the …\nConsume <code>self</code> and return a mutable reference to the …\nReturns the reference wrapped by this type. The reference …\nConsume <code>self</code> and return a mutable reference to the …\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nConsumes the <code>Arc</code>, returning the wrapped pointer.\nConsumes the <code>Arc</code>, returning the wrapped pointer and …\nCasts this type to a boxed reflected value.\nTurns this value into its corresponding <code>System</code>.\nConverts this instance to its associated <code>SystemSet</code> type.\nReturns this entity’s <code>World</code>, consuming itself.\nReturns an <code>AssetId</code> with <code>Self::INVALID_UUID</code>, which <em>should</em> …\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of a normalized quaternion.\nReturns <code>v</code> normalized to the range <code>[a, b]</code>.\nUsed to determine number of IO threads to allocate\nThe index of refraction of the material.\nReturns true if the trait object wraps an object of type …\nReturns true if <code>E</code> is the type held by this error object.\nReturns <code>true</code> if the underlying value is of type <code>T</code>, or <code>false</code>\nIf this is set to <code>true</code>, this camera will be rendered to …\nReturns <code>true</code> if this value was added after the system last …\nReturns <code>true</code> if this event is <code>AssetEvent::Added</code> and …\nReturns <code>true</code> if the resource was added after the system …\nReturns true if the given type, <code>T</code>, is allowed by the …\nReturns true if the given type is allowed by the filter.\nReturns <code>true</code> if this system set is an <code>AnonymousSet</code>.\nReturns <code>true</code> if this value was added or mutably …\nReturns <code>true</code> if the resource was added or mutably …\nWhether the texture format is compressed or uncompressed\nReturns true if the given type, <code>T</code>, is denied by the filter.\nReturns true if the given type is denied by the filter.\nIndicates whether or not this type is a <em>dynamic</em> type.\nReturns true if the number of keyframes is zero.\nReturns true if there are zero items in the filter.\nChecks if the query is empty for the given <code>World</code>, where …\nCheck if the rectangle is empty.\nCheck if the rectangle is empty.\nCheck if the rectangle is empty.\nReturns <code>true</code> if there are no assets in this collection.\nReturns <code>true</code> if there are no query items.\nReturns true if there are no events currently stored in …\nReturns <code>true</code> if there are no events available to read.\nReturns <code>true</code> if there are no events available to read.\nReturns true if the system must be run exclusively.\nCheck if the playing animation has finished, according to …\nReturns <code>true</code> if, and only if, translation, rotation and …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nDetermine if the color is fully transparent, i.e. if the …\nReturns <code>true</code> if this event is …\nReturns true if the asset and all of its dependencies …\nReturns <code>true</code> if the given <code>id</code> corresponds to an asset that …\nReturns true if the given level matches this <code>LevelSelection</code>…\nReturns <code>true</code> if this event is <code>AssetEvent::Modified</code> and …\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> of length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nIs this sink paused?\nReturns <code>true</code> if the clock is currently paused.\nIs the animation paused\nCheck if the animation is playing in reverse.\nCheck if the given animation clip is being played.\nChecks if a <code>Plugin</code> has already been added.\nHave all assets finished loading?\nReturns <code>true</code> if this event is <code>AssetEvent::Removed</code> and …\nReturns <code>true</code> if a resource of type <code>R</code> exists and was added …\nReturns <code>true</code> if a resource with id <code>component_id</code> exists and …\nReturns <code>true</code> if a resource of type <code>R</code> exists and was …\nReturns <code>true</code> if a resource with id <code>component_id</code> exists and …\nReturns true if the system is <code>Send</code>.\nReturns <code>true</code> if this is a strong handle.\nIf the plugin can be meaningfully instantiated several …\nReturns <code>true</code> if this event is <code>AssetEvent::Unused</code> and …\nOverflow is visible on both axes\nOverflow is visible on this axis\nReturns <code>true</code> if this is a weak handle.\nReturns true if this <code>Duration</code> spans no time.\nReturns an iterator over the items in the filter.\nReturns an iterator over registered <code>Gamepad</code>s in an …\nReturns an iterator over all <code>GizmoConfig</code>s.\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an iterator over the <code>AssetId</code> and <code>Asset</code> ref of …\nReturns an <code>Iterator</code> over the read-only query items.\nAn iterator visiting every pressed <code>Touch</code> input in …\nReturns an iterator over all schedules. Iteration order is …\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nIterate over all the known key→asset mappings\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nReturns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nReturns a <code>QueryCombinationIter</code> over all combinations of <code>K</code> …\nReturns an <code>Iterator</code> over all possible combinations of <code>K</code> …\nIterates over all possible combinations of <code>K</code> query items …\nIterates over events that happened since the last “update…\nReturns an <code>Iterator</code> of <code>Entity</code>s over all of <code>entity</code>s …\nReturns an <code>Entity</code> iterator of current entities.\nReturns a mutable iterator over all entities in the <code>World</code>.\nIterate over this item’s non-null EntityRefs field value …\nIterate over this item’s non-null Enums field value for …\nReturns an iterator over the values of the reflectable …\nReturns an iterator over the values of the tuple struct’…\nIterate over this item’s non-null FilePaths field value …\nIterate over this item’s non-null Floats field value for …\nIterate through the <code>ComponentId</code>’s that will be ignored.\nReturns an <code>Iterator</code> over the query items, with the actual …\nGet an iterator over the entities in an instance, once it…\nIterate over this item’s non-null Ints field value for …\nAn iterator visiting every just canceled <code>Touch</code> input in …\nAn iterator visiting every just pressed <code>Touch</code> input in …\nAn iterator visiting every just released <code>Touch</code> input in …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an <code>Iterator</code> over the read-only query items …\nReturns an iterator over the query items generated from an …\nReturns an iterator over the query items generated from an …\nReturns an <code>Iterator</code> over the query items generated from an …\nReturns an iterator over all <code>GizmoConfig</code>s, by mutable …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an iterator over the <code>AssetId</code> and mutable <code>Asset</code> ref …\nReturns an <code>Iterator</code> over the query items.\nReturns an iterator over mutable references to all …\nIterate over this item’s non-null Points field value for …\nIterate through this project’s levels.\nIterate through this project’s levels enumerated with …\nIterate through this project’s root levels.\nIterate through this project’s root levels enumerated …\nIterate over this item’s non-null Strings field value …\nIterate over this item’s non-null Tiles field value for …\nReturns an <code>Iterator</code> over the query results for the given …\nReturns an <code>Iterator</code> over the query items.\nIterate through this project’s world levels.\nIterate through this project’s world levels enumerated …\nRaw ldtk json data.\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nReturns <code>true</code> only on the tick the timer reached its …\nReturns <code>true</code> if the <code>input</code> has just been pressed.\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nReturns <code>true</code> if the <code>input</code> has just been released.\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nThe text’s internal alignment. Should not affect its …\nUsed to control how items are distributed.\nUsed to control how each individual item is aligned by …\nUsed to control how the specified item is aligned within …\nThe key of the asset\nTimestamp for each of the keyframes.\nList of the keyframes.\nGet the <code>TorusKind</code> determined by the minor and major radii.\nCalculates the extinction coefficient β, from V and Cₜ, …\nConverts a Color to variant <code>Color::Hsla</code> and return …\nGet the <code>InternedScheduleLabel</code> for this <code>Schedule</code>.\nWhen called from within an exclusive system (a <code>System</code> that …\nSets <code>World::last_change_tick()</code> to the specified value …\nReturns the change tick recording the time this data was …\nReturns the <code>Instant</code> when <code>Self::update</code> was last called, if …\nGet the surface area of the side of the cylinder, also …\nGet the surface area of the side of the cone, also known …\nReference the Layer definition UID\nReference the Layer definition UID\nList of layer <code>Identifier</code> names (not UIDs) to skip spawning …\nLayer type (possible values: IntGrid, Entities, Tiles or …\nLayer type (possible values: IntGrid, Entities, Tiles or …\nTexture atlas layout handle\nNew <code>Color</code> with LCH representation in sRGB colorspace.\nNew <code>Color</code> from <code>[f32; 3]</code> (or a type that can be converted …\nConvert <code>Color</code> to LCHA and return as <code>Vec3</code>.\nNew <code>Color</code> with LCH representation in sRGB colorspace.\nNew <code>Color</code> from <code>[f32; 4]</code> (or a type that can be converted …\nConvert <code>Color</code> to LCHA and return as <code>Vec4</code>.\nContains all the types for serializing/deserializing an …\n‘Less than or equal to’ comparison for two <code>Arc</code>s.\nReturn the local left vector (-X).\nEquivalent to <code>-local_x()</code>\nCreates a new <code>UiRect</code> where <code>left</code> takes the given value, and …\nThe value corresponding to the left side of the UI rect.\nPixel padding to the left\nThe horizontal position of the left edge of the node.\nLeft ear position relative to the <code>GlobalTransform</code>.\nReturns the number of keyframes.\nReturns the number of items in the filter.\nThe number of textures in the <code>TextureAtlasLayout</code>\nReturns the number of assets currently stored in the …\nReturns the number of events currently stored in the event …\nDetermines the number of events available to be read from …\nDetermines the number of removal events available to be …\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nThe index of the level, either within a world or in the …\nReference to the UID of the level containing this layer …\nReference to the UID of the level containing this layer …\nConstants for operating with the light units: lumens, and …\nMarks this environment map as a light probe.\nThe exposure (brightness) level of the lightmap, if …\nDraw a line in 3D from <code>start</code> to <code>end</code>.\nDraw a line in 2D from <code>start</code> to <code>end</code>.\nDraw a line in 3D with a color gradient from <code>start</code> to <code>end</code>.\nDraw a line in 2D with a color gradient from <code>start</code> to <code>end</code>.\nApply perspective to gizmo lines.\nLine width specified in pixels.\nHow the text should linebreak when running out of the …\nDraw a line in 3D made of straight segments between the …\nDraw a line in 2D made of straight segments between the …\nDraw a line in 3D made of straight segments between the …\nDraw a line in 2D made of straight segments between the …\nStart loading all the assets in the collection\nReturn handles to all required asset paths\nBegins loading an <code>Asset</code> of type <code>A</code> stored at <code>path</code>. This …\nAdd the given collection to the loading state.\nLoads all assets from the specified folder recursively. …\nRetrieves the main <code>LoadState</code> of a given asset <code>id</code>.\nLoad an asset without knowing its type. The method returns …\nAsynchronously load an asset that you do not know the type …\nBegins loading an <code>Asset</code> of type <code>A</code> stored at <code>path</code>. The …\nThe transform of the entity.\nGet the unit vector in the local <code>X</code> direction.\nGet the unit vector in the local <code>Y</code> direction.\nGet the unit vector in the local <code>Z</code> direction.\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nGets metadata indicating the location where the current …\nReturns the logical pixel coordinates of the UI node, …\nThe full logical size of this camera’s <code>RenderTarget</code>, …\nThe rendered logical bounds <code>Rect</code> of the camera. If the …\nThe logical size of this camera’s viewport. If the …\nDraws the longest arc between two points (<code>from</code> and <code>to</code>) …\nRotates this <code>Transform</code> so that <code>Transform::forward</code> points …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view matrix using a camera …\nRotates this <code>Transform</code> so that <code>Transform::forward</code> points …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view matrix using a camera …\nReturns this <code>Transform</code> with a new rotation so that …\nReturns this <code>Transform</code> with a new rotation so that …\nLess-than comparison for two <code>Arc</code>s.\nThe schedule that systems are added to by default.\nThe distance from the center of the torus to the center of …\nMakes a mutable reference into the given <code>Arc</code>.\nAdd some amount of progress to the running total for the …\nAdd some amount of “hidden” progress to the running …\nReturns the read-only query items for the given array of …\nGets an <code>EntityRef</code> for multiple entities at once.\nGets mutable access to multiple entities at once.\nReturns the query items for the given array of <code>Entity</code>.\nCreate a distribution of values of ‘S’ by mapping the …\nMap <code>Ref</code> to a different type using <code>f</code>.\nPass the output of this system into the passed function <code>f</code>, …\nMap an entity to another entity\nMaps to an inner value by applying a function to the …\nMaps to an inner value by applying a function to the …\nMaps to an inner value by applying a function to the …\nThe amount of space around a node outside its border.\nReturns the archetypes matched by this query.\nReturns the tables matched by this query.\nReturns <code>true</code> if this query matches a set of components. …\nThe <code>UiMaterial</code> used to render the node.\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nCreate a grid track which is automatically sized to fit …\nCreate a repeating set of grid tracks with max-content size\nDefines the maximum scale of the 4 corner slices (default …\nReturns the maximum amount of time that can be added to …\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nThe maximum height of the node. <code>max_height</code> is used if it …\nThe maximum height the window can have.\nIn how many layers to split the depth maps for parallax …\nSets the max size of the atlas in pixels.\nIf the number of physical cores is greater than …\nThe maximum width of the node. <code>max_width</code> is used if it is …\nThe maximum width the window can have.\nMerges the <code>Mesh</code> data of <code>other</code> with <code>self</code>. The attributes …\nCreates a <code>Mesh</code> for a shape.\nThe “meta transform” for the strong handle. This will …\nHow “metallic” the material appears, within <code>[0.0, 1.0]</code>.\nMetallic and roughness maps, stored as a single texture.\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nCreate a grid track which is automatically sized to fit …\nCreate a repeating set of grid tracks with min-content size\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nThe minimum height of the node. <code>min_height</code> is used if it …\nThe minimum height the window can have.\nIf the number of physical cores is less than …\nThe minimum width of the node. <code>min_width</code> is used if it is …\nThe minimum width the window can have.\nCreate a <code>minmax()</code> grid track.\nCreate a repeating set of <code>minmax()</code> grid track\nThe radius of the tube of the torus\nReturns the mode of the timer.\nReturns the <code>AssetServerMode</code> this server is currently in.\nThe desired playback behavior.\nThe <code>AssetMode</code> to use for this server.\nWhich fullscreen or windowing mode should be used.\nReturns the path to the module the type is in, or <code>None</code> if …\nGets a list of all morph target names, if they exist.\nIf this is enabled, a previous camera exists that shares …\nCreate a new error object from a printable error message.\nMultiplies a quaternion and a 3D vector, returning the …\nMultiplies a quaternion by a scalar value.\nMultiplies two quaternions. If they each represent a …\nRotates the <code>Direction3d</code> using a <code>Quat</code>.\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nMultiplies two quaternions. If they each represent a …\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nMultiplies two 2x2 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 4x4 matrices.\nMultiplies two quaternions. If they each represent a …\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 2x2 matrix by a scalar.\nMultiplies a 4x4 matrix by a scalar.\nMultiplies <code>self</code> with <code>transform</code> component by component, …\nMultiplies <code>self</code> with <code>transform</code> component by component, …\nTransforms a 2D vector.\nTransforms a 3D vector.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a <code>Vec3A</code>.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a 4D vector.\nAdds <code>&amp;mut T</code> to the <code>FilteredAccess</code> of self.\nUpdates the name of the entity in place.\nReturns the system’s name.\nConfigures a name for the <code>Plugin</code> which is primarily used …\nConfigures a name for the <code>PluginGroup</code> which is primarily …\nThe name of the gamepad if this one is connected.\nA <code>Name</code> that the entity might have that is displayed if …\nStores the application ID (on <strong><code>Wayland</code></strong>), <code>WM_CLASS</code> (on <strong><code>X11</code></strong>) …\nReturns the name of the field with index <code>index</code>.\nGiven a position in Normalized Device Coordinates, use the …\nInequality for two <code>Arc</code>s.\nThe distance from the camera in world units of the viewing …\nThe distance of the near clipping plane in world units.\nCreates a new <code>App</code> with some default structure to enable …\nCreate a <code>ProgressPlugin</code> running during the given State\nCreate a new configuration for the given loading state\nCreates a new <code>Name</code> from any string-like type.\nCreate a new <code>LoadingState</code>\nReturns a new <code>DescendantIter</code>.\nReturns a new <code>AncestorIter</code>.\nCreate a new <code>Ref</code> using provided values.\nCreate a new cubic Bezier curve from sets of control …\nCreate a new Hermite curve from sets of control points.\nCreates a new change-detection enabled smart pointer. In …\nBuild a new Cardinal spline.\nBuild a new Cardinal spline.\nCreates a new <code>SpatialListener</code> component.\nCreate a new error object from any error type.\nConstructs a new <code>Time&lt;Real&gt;</code> instance with a specific …\nCreate a new <code>GlobalVolume</code> with the given volume.\nCreates a new scene with the given world.\nCreates a new <code>Gamepad</code>.\nCreates a new timer with a given duration.\nCreate a new <code>TextSection</code>.\nCreates a new note\nCreates a new <code>GamepadButton</code>.\nCreate a direction from a finite, nonzero <code>Vec2</code>.\nCreate a new <code>Circle</code> from a <code>radius</code>\nCreates a new builder with the accesses required for <code>Q</code> and …\nCreate a new <code>Ellipse</code> from half of its width and height.\nCreate a new <code>Plane2d</code> from a normal\nCreate a new <code>Segment2d</code> from a direction and full length of …\nCreate a new <code>Polyline2d</code> from its vertices\nCreates a new <code>GamepadAxis</code>.\nCreate a new <code>BoxedPolyline2d</code> from its vertices\nCreates a new <code>EntityIid</code> from any string-like type.\nCreate a new <code>Triangle2d</code> from points <code>a</code>, <code>b</code>, and <code>c</code>\nCreates a new <code>LevelIid</code> from any string-like type.\nCreate a new <code>Rectangle</code> from a full width and height\nCreate a new <code>Polygon</code> from its vertices\nCreate a new <code>BoxedPolygon</code> from its vertices\nCreate a new <code>RegularPolygon</code> from the radius of the …\nCreate a new <code>Capsule2d</code> from a radius and length\nCreate a direction from a finite, nonzero <code>Vec3</code>.\nCreate a new <code>Sphere</code> from a <code>radius</code>\nCreate a new <code>Plane3d</code> from a normal\nCreates a new <code>QueryState</code> from a given <code>World</code> and inherits …\nCreate a new <code>Segment3d</code> from a direction and full length of …\nCreate a new <code>Polyline3d</code> from its vertices\nCreate a new <code>BoxedPolyline3d</code> from its vertices\nCreate a new <code>Cuboid</code> from a full x, y, and z length\nCreate a new <code>Cylinder</code> from a radius and full height\nCreate a new <code>Capsule3d</code> from a radius and length\nCreates a new <code>UiRect</code> from the values specified.\nCreate a new <code>Torus</code> from an inner and outer radius.\nCreate a new <code>Ray2d</code> from a given origin and direction\nCreate a new <code>Ray3d</code> from a given origin and direction\nCreate a new rectangle from two corner points.\nCreate a new rectangle from two corner points.\nCreate a new rectangle from two corner points.\nConstructs an empty <code>Schedule</code>.\nCreates a new <code>WindowPosition</code> at a position.\nCreates a new light probe component.\nCreate a new instance of <code>AssetServer</code>. If <code>watch_for_changes</code> …\nCreate a new outline\nCreates a new empty <code>World</code>.\nConstructs a new <code>Arc&lt;T&gt;</code>.\nConstruct a new mesh. You need to provide a …\nCreate a custom implementation of <code>ReflectComponent</code>.\nCreate a custom implementation of <code>ReflectFromWorld</code>.\nCreate a custom implementation of <code>ReflectResource</code>.\nConstructs an empty <code>Schedules</code> with zero initial capacity.\nCreates a new state with a specific value.\nReturns a new <code>Commands</code> instance from a <code>CommandQueue</code> and a …\nCreates a new image from raw binary data and the …\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new <code>Duration</code> from the specified number of whole …\nCreate a direction from a finite, nonzero <code>Vec2</code>, also …\nCreate a direction from a finite, nonzero <code>Vec3</code>, also …\nUpdate the current <code>QueryState</code> with information from the …\nConstruct a cubic Bezier curve for animation easing, with …\nBuild a new Catmull-Rom spline, the special case of a …\nConstructs a new <code>Arc&lt;T&gt;</code> while giving you a <code>Weak&lt;T&gt;</code> to the …\nCreate a new empty layout with custom <code>dimensions</code>\nCreates a new image from raw binary data and the …\nReturns a new <code>Commands</code> instance from a <code>CommandQueue</code> and an …\nConstructs a new <code>Arc&lt;T&gt;</code> in the provided allocator.\nCreate a <code>Direction2d</code> from a <code>Vec2</code> that is already …\nCreate a <code>Direction3d</code> from a <code>Vec3</code> that is already …\nConstructs a new <code>Arc</code> with uninitialized contents.\nConstructs a new <code>Arc</code> with uninitialized contents in the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new atomically reference-counted slice with …\nCreate a new clock from context with <code>Self::delta</code> and …\nCreate an orthographic projection camera with a custom <code>Z</code> …\nCreate a new instance of <code>AssetServer</code>. If <code>watch_for_changes</code> …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new atomically reference-counted slice with …\nConstructs a new atomically reference-counted slice with …\nThe next state to transition to, when all progress …\nReturn the next random <code>u32</code>.\nReturn the next random <code>u64</code>.\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nDescribes the logical size of the node\nGets an immutable reference to the non-send resource of …\nGets a mutable reference to the non-send resource of the …\nThe normal of the plane. The plane will be placed …\nThe normal of the plane. The plane will be placed …\nUsed to fake the lighting of bumps and dents on a material.\nBuild a new rectangle from this one with its coordinates …\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nNormalize joint weights so they sum to 1.\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nGenerates a <code>Condition</code> that inverses the result of passed …\nReturns an instant corresponding to “now”.\nSpecifies the level of exposure to ambient light.\noffset of the slice\nThe amount of space between a node’s outline the edge of …\nReturns the index of the oldest event stored in the event …\nOldest id still in the events buffer.\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nThe <code>LoadingState</code> will set this Bevy <code>State</code> if an asset …\nCall some expression only once per call site.\nLayer opacity as Float [0-1]\nLayer opacity as Float [0-1]\nReturns if this material should be rendered by the …\nRender method used for opaque materials. (Where <code>alpha_mode</code> …\nTakes a function over mutable access to a <code>QueryBuilder</code>, …\nAn Array containing the UIDs of optional rules that were …\nAn Array containing the UIDs of optional rules that were …\nTakes a function over mutable access to a <code>QueryBuilder</code>, …\nReturns a new run condition that returns <code>true</code> if either …\nCameras with a higher order are rendered later, and thus …\nThe origin of the ray.\nThe origin of the ray.\nCreates a left-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nAngle defining the distance from the spot light direction …\nGet the outer radius of the torus. This corresponds to the …\nReturns the thickness of the UI node’s outline. If this …\nThe <code>CameraOutputMode</code> for this camera.\nWhether overflowing content should be displayed or clipped.\nThis layer can use another tileset by overriding the …\nThis layer can use another tileset by overriding the …\nReturns the amount of overstep time accumulated toward new …\nReturns the amount of overstep time accumulated toward new …\nReturns the amount of overstep time accumulated toward new …\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 0th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 1st parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 2nd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 3rd parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 4th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 5th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 6th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 6th parameter in this <code>ParamSet</code>…\nGets exclusive access to the 7th parameter in this <code>ParamSet</code>…\nSets the amount of padding in pixels to add between the …\nThe amount of space between the edges of a node and its …\nDistance in pixels from image borders\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the query results for the …\nReturns a parallel iterator over the query results for the …\nHow deep the offset introduced by the depth map should be.\nWhich parallax mapping method to use.\nParent entity to add the child to.\nReturns the parent entity of this <code>ChildBuilder</code>.\nReturns the parent entity of this <code>WorldChildBuilder</code>.\nPartial comparison for two <code>Arc</code>s.\nShuffle a slice in place, but exit early.\nParts of the path\nReturns a statically typed reference to the value …\nReturns the path if this is (1) a strong handle and (2) …\nReturns the path if this is (1) a strong handle and (2) …\nReturns a statically typed mutable reference to the value …\nPauses playback of this sink.\nStops the clock, preventing it from advancing until …\nPauses the Timer. Disables the ticking of the timer.\nPause the animation\nHelper to start in a paused state.\nReturns <code>true</code> if the timer is paused.\nCreate the sink in paused state. Useful for “deferred …\nCreates a new <code>UiRect</code> from the values specified in …\nCreate a grid track with a percentage size\nCreate a repeating set of grid tracks with a percentage …\nLinear perceptual roughness, clamped to <code>[0.089, 1.0]</code> in …\nGet the perimeter or circumference of the circle\nGet the perimeter of the triangle\nGet the perimeter of the rectangle\nGet the perimeter of the regular polygon. This is the sum …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nPersist progress for the rest of the current state\nPersist hidden progress for the rest of the current state\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite right-handed perspective projection …\nCreates a left-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with […\nThe phase of the touch input.\nThe cursor position in this window in physical pixels.\nThe window’s client area height in physical pixels.\nReturns the physical pixel coordinates of the UI node, …\nReturns the size of the node in physical pixels based on …\nThe full physical size of this camera’s <code>RenderTarget</code> (in …\nThe rendered physical bounds <code>URect</code> of the camera. If the …\nThe physical size of this camera’s viewport (in physical …\nThe window’s client area width in physical pixels.\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>. If <code>T</code> does not implement <code>Unpin</code>…\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator. …\nPass the output of this system <code>A</code> into a second system <code>B</code>, …\nPivot coordinates  (<code>[x,y]</code> format, values are from 0 to 1) …\nResumes playback of a paused sink.\nStart playing an animation, resetting state of the player, …\nStart playing an animation, resetting state of the player, …\nCheck the state of all plugins already added to this app. …\nGet the position of the first point on the line segment\nGet the position of the first point on the line segment\nGet the position of the second point on the line segment\nGet the position of the second point on the line segment\nInstantaneous position of a point at parametric value <code>t</code>.\nThe cursor position in logical pixels.\nWhere the window moved to in physical pixels.\nWhere the window should be placed.\nThe position of the finger on the touchscreen.\nWhether a node should be laid out in-flow with, or …\nPost-processes the value using resources in the <code>World</code>. …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nConverts the extracted mesh a into <code>GpuMesh</code>.\nConverts the extracted image into a <code>GpuImage</code>.\nControls if the prepass is enabled for the Material. For …\nReturns this material’s prepass fragment shader. If …\nReturns this material’s prepass vertex shader. If …\nPreregisters a loader for the given extensions, that will …\nPre-register a loader that will later be added.\nWhat presentation mode to give the window.\nRegisters a press for the given <code>input</code>.\nReturns <code>true</code> if the <code>input</code> has been pressed.\nWhether or not to stop events from propagating out of the …\nSettings for the primary window.\nRenders a 2D primitive with its associated details.\nRenders a 3D primitive with its associated details.\nReturns the topology of the mesh.\nPrints the names of the components and resources with <code>info</code>\nThe default file path to use (relative to the project …\nGet the latest overall progress information\nGet the latest overall progress information\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nTransforms the given 3D vector as a point, applying …\nThe projection matrix computed using this camera’s …\nReturns <code>true</code> if the two <code>Arc</code>s point to the same allocation …\nPushes children to the back of the builder’s children. …\nPushes children to the back of the builder’s children. …\nCreates a new <code>UiRect</code> from the values specified in logical …\nCreate a grid track with a fixed pixel size\nCreate a repeating set of grid tracks with a fixed pixel …\nPixel coordinates (<code>[x,y]</code> format) in current level …\nImage height in pixels\nX offset in pixels to render this layer, usually 0 …\nX offset in pixels to render this layer, usually 0 …\nY offset in pixels to render this layer, usually 0 …\nY offset in pixels to render this layer, usually 0 …\nTotal layer X pixel offset, including both instance and …\nTotal layer X pixel offset, including both instance and …\nTotal layer Y pixel offset, including both instance and …\nTotal layer Y pixel offset, including both instance and …\nImage width in pixels\nReturns <code>QueryState</code> for the given <code>QueryData</code>, which is used …\nReturns <code>QueryState</code> for the given filtered <code>QueryData</code>, which …\nConverts a Color to variant <code>Color::Rgba</code> and return red in …\nThe radius of the circle\nThe radius of the capsule\nThe radius of the sphere\nThe radius of the cylinder\nThe radius of the capsule\nThe radius of the base\nThe radius of the base of the frustum\nThe radius of the top of the frustum\nGet an upper bound of the radius from the given <code>extents</code>.\nGenerates a random value using the thread-local random …\nDraw a line in 3D from <code>start</code> to <code>start + vector</code>.\nDraw a line in 2D from <code>start</code> to <code>start + vector</code>.\nDraw a line in 3D with a color gradient from <code>start</code> to …\nDraw a line in 2D with a color gradient from <code>start</code> to …\nIterates over the events this <code>EventReader</code> has not seen …\nIterates over the events this <code>RemovedComponents</code> has not …\nReads the current change tick of this world.\nLike <code>read</code>, except also returning the <code>EventId</code> of the events.\nLike <code>read</code>, except also returning the <code>EventId</code> of the events.\nFetch underlying <code>ManualEventReader</code>.\nFetch underlying <code>ManualEventReader</code> mutably.\nDestructures to get a mutable reference to the …\nReturns whether the material would like to read from …\nHas the plugin finished its setup? This can be useful for …\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns a <code>Mut&lt;&gt;</code> with a smaller lifetime. This is useful if …\nReturns a <code>Deferred&lt;T&gt;</code> with a smaller lifetime. This is …\nReturns a new instance with a shorter lifetime. This is …\nReturns a <code>Commands</code> with a smaller lifetime. This is useful …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nDraw a wireframe rectangle in 3D.\nAn optional rectangle representing the region of the sprite…\nDraw a wireframe rectangle in 2D.\nCreates a new border as a rectangle, with:\nRetrieves the  <code>RecursiveDependencyLoadState</code> of a given …\nAdds <code>&amp;T</code> to the <code>FilteredAccess</code> of self.\nGets the value of this <code>Component</code> type from the entity as a …\nGets the value of this <code>Resource</code> type from the world as a …\nGets a reference to the specified element on the given …\nGets a mutable reference to the specified element on the …\nReturns a hash of the value (which includes the type).\nReturns a zero-sized enumeration of “kinds” of type.\nReturns a mutable enumeration of “kinds” of type.\nGets the value of this <code>Component</code> type from the entity as a …\nGets the value of this <code>Resource</code> type from the world as a …\nReturns an owned enumeration of “kinds” of type.\nReturns a “partial equality” comparison result.\nReturns a reference to the value specified by <code>path</code>.\nReturns a mutable reference to the value specified by <code>path</code>.\nReturns an immutable enumeration of “kinds” of type.\nA macro that automatically generates type data for traits, …\nSafety\nSafety\nSpecular intensity for non-metals on a linear scale of …\nRegister all dynamic assets inside the collection in the …\nSet the corresponding dynamic asset for the given key.\nRegisters a new <code>Asset</code> type. <code>Asset</code> types must be registered …\nRegisters the given <code>loader</code> in the <code>App</code>’s <code>AssetServer</code>.\nRegisters the given <code>processor</code> in the <code>App</code>’s <code>AssetProcessor</code>…\nRegisters the asset type <code>T</code> using <code>[App::register]</code>, and adds …\nRegisters the given <code>AssetSourceBuilder</code> with the given <code>id</code>.\nSimilar to <code>Self::register_system</code>, but allows passing in a …\nCreate a new “console command” with the given string …\nCreate a new “console command” with the given string …\nSimilar to LdtkEntityAppExt::register_ldtk_entity_for_layer…\nSimilar to LdtkEntityAppExt::register_ldtk_entity_for_layer…\nSimilar to …\nSimilar to …\nRegister a new <code>Diagnostic</code> with an <code>App</code>.\nRegister a custom dynamic asset collection type\nRegister a new <code>DynamicAssetCollection</code> to be handled in the …\nRegister a file containing dynamic asset definitions to be …\nSimilar to LdtkEntityAppExt::register_ldtk_entity_for_layer…\nRegisters LdtkEntity types to be spawned for a given …\nUsed internally by all the other LDtk entity registration …\nSimilar to …\nRegisters LdtkIntCell types to be inserted for a given …\nUsed internally by all the other LDtk int cell …\nRegisters a new <code>AssetLoader</code>. <code>AssetLoader</code>s must be …\nRegisters a system and returns a <code>SystemId</code> so it can later …\nRegisters the type <code>T</code> in the <code>TypeRegistry</code> resource, adding …\nAdds the type data <code>D</code> to type <code>T</code> in the <code>TypeRegistry</code> …\nChanges the <code>size</code>, asserting that the total number of data …\nTakes a 2D image containing vertically stacked images of …\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nPath to the source file, relative to the current project …\nReturns the speed the clock advances relative to your …\nReturns the speed the clock advances relative to your …\nRegisters a release for the given <code>input</code>.\nRegister a release for a given touch input.\nRegisters a release for all currently pressed inputs.\nRegisters a release for all currently pressed touch inputs.\nKicks off a reload of the asset stored at the given path. …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the remaining time using Duration\nReturns the remaining time in seconds\nRemap <code>self</code> from the input range to the output range.\nRemoves the position data of the <code>input_device</code>, returning …\nRemoves (and returns) the <code>Asset</code> with the given <code>id</code>, if its …\nRemoves any components in the <code>Bundle</code> from the entity.\nRemoves this <code>Component</code> type from the entity. Does nothing …\nRemoves this <code>Resource</code> type from the world. Does nothing if …\nRemoves the schedule corresponding to the <code>label</code> from the …\nRemoves the data for a vertex attribute\nRemoves the given children\nRemoves the given children\nDespawns all entities with no components.\nRemoves the (schedule, label) pair corresponding to the …\nConvenience system for removing a component from all …\nRemoves the vertex <code>indices</code> from the mesh and returns them.\nRemoves the resource of a given type, if it exists. …\nRemoves a <code>!Send</code> resource from the world and returns it, if …\nRemoves the <code>Parent</code> of this entity.\nRemoves the <code>Parent</code> of this entity.\nMake this entity parentless while preserving this entity’…\nConvenience system for removing a resource of the given …\nRemoves the resource of a given type and returns it, if it …\nPushes a <code>Command</code> to the queue for removing a <code>Resource</code> from …\nRemoves the resource of a given type, if it exists. …\nRemoves a sub app from the app. Returns <code>None</code> if the label …\nRemoves a registered system and returns the system, if it …\nRemoves (and returns) the <code>Asset</code> with the given <code>id</code>, if its …\nReturns an iterator of entities that had components of …\nRetrieves this world’s <code>RemovedComponentEvents</code> collection\nReturns an iterator of entities that had components with …\nDescribes which rendering layers gizmos will be rendered …\nReturns the <code>Transform</code> <code>self</code> would have if it was a child of …\nSets repeat to <code>RepeatAnimation::Forever</code>.\nCreate a repetition of a set of tracks\nRepetition behavior of the animation.\nRemoves all current children from this entity, replacing …\nRemoves all current children from this entity, replacing …\nOverwrites this smart pointer with the given value, if and …\nReset the animation to its initial state, as if no time …\nReturns <code>true</code> if the underlying value represents a value of …\nReserves a new <code>Handle</code> for an asset that will be stored in …\nClears the <code>pressed</code>, <code>just_pressed</code> and <code>just_released</code> data of …\nResets the timer. The reset doesn’t affect the <code>paused</code> …\nClears the <code>pressed</code>, <code>just_pressed</code>, and <code>just_released</code> data …\nClears <code>pressed</code>, <code>just_pressed</code>, <code>just_released</code>, and …\nShould the window be resizable?\nResizes the image to the new size, by removing information …\nThe limits of the window’s logical size (found in its …\nWhat resolution the window should have.\nResolves a <code>Val</code> to its value in logical pixels and returns …\nGets a reference to the resource of the given type\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nGets a mutable reference to the resource of the given type\nGets a reference to the resource of the given type\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nTemporarily removes the requested resource from this <code>World</code>…\nResources stored in the dynamic scene.\nUnpause the animation\nRemoves any components except those in the <code>Bundle</code> from the …\nReverse the <code>WindingOrder</code> of the triangle by swapping the …\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from <code>[f32; 3]</code> (or a type that can be converted …\nNew <code>Color</code> from linear RGB colorspace.\nNew <code>Color</code> from <code>[f32; 3]</code> (or a type that can be converted …\nConvert <code>Color</code> to linear RGBA and return as <code>Vec3</code>.\nConvert <code>Color</code> to RGBA and return as <code>Vec3</code>.\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from sRGB colorspace.\nNew <code>Color</code> from <code>[f32; 4]</code> (or a type that can be converted …\nNew <code>Color</code> from linear RGB colorspace.\nNew <code>Color</code> from <code>[f32; 4]</code> (or a type that can be converted …\nConvert <code>Color</code> to linear RGBA and return as <code>Vec4</code>.\nConvert <code>Color</code> to RGBA and return as <code>Vec4</code>.\nNew <code>Color</code> from sRGB colorspace.\nReturn the local right vector (X).\nEquivalent to <code>local_x()</code>\nCreates a new <code>UiRect</code> where <code>right</code> takes the given value, …\nThe value corresponding to the right side of the UI rect.\nPixel padding to the right\nThe horizontal position of the right edge of the node.\nRight ear position relative to the <code>GlobalTransform</code>.\nThe lowest level cause of this error — this error’s …\nSlice to this project’s collection of root levels.\nRotates this <code>Transform</code> by the given rotation.\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nRotates this <code>Transform</code> around a <code>point</code> in space.\nRotates this <code>Transform</code> around the given <code>axis</code> by <code>angle</code> (in …\nRotates the vertex positions, normals, and tangents of the …\nRotates this <code>Transform</code> by the given <code>rotation</code>.\nRotates this <code>Transform</code> around its local <code>axis</code> by <code>angle</code> (in …\nRotates this <code>Transform</code> around its local <code>X</code> axis by <code>angle</code> …\nRotates this <code>Transform</code> around its local <code>Y</code> axis by <code>angle</code> …\nRotates this <code>Transform</code> around its local <code>Z</code> axis by <code>angle</code> …\nRotates this <code>Transform</code> around the <code>X</code> axis by <code>angle</code> (in …\nRotates this <code>Transform</code> around the <code>Y</code> axis by <code>angle</code> (in …\nRotates this <code>Transform</code> around the <code>Z</code> axis by <code>angle</code> (in …\nRotates the vertex positions, normals, and tangents of the …\nRotation of the entity.\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nThe size of the gutters between items in a vertical …\nExecutes this system once. See <code>System::run</code> or …\nStarts the application by calling the app’s runner …\nRuns all systems in this schedule on the <code>world</code>, using its …\nRuns the system with the given input in the world.\nRun the systems only if the <code>Condition</code> is <code>true</code>.\nRun the systems in this set(s) only if the <code>Condition</code> is …\nA system that runs the “main schedule”\nGenerates a <code>Condition</code>-satisfying closure that returns <code>true</code> …\nRuns this system with the given input in the world.\nRuns the <code>Schedule</code> associated with the <code>label</code> a single time.\nRun stored systems by their <code>SystemId</code>. Before running a …\nRuns the system corresponding to the given <code>SystemId</code>. …\nRun a stored chained system by its <code>SystemId</code>, providing an …\nRuns the system corresponding to the given <code>SystemId</code>. …\nRuns the system with the given input in the world. Unlike …\nThe runner function is primarily responsible for managing …\nConverts a Color to variant <code>Color::Hsla</code> and return …\nGenerate a random value of <code>T</code>, using <code>rng</code> as the source of …\nSample a new value, using the given distribution.\nCreate an iterator that generates random values of <code>T</code>, …\nCreate an iterator that generates values using the given …\nThe <code>ImageSampler</code> to use during rendering.\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns the amount of time elapsed from another instant to …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nArray of group of tiles selections, only meant to be used …\nScale of the entity.\nScales the projection.\nScales the vertex positions, normals, and tangents of the …\nThe window’s scale factor.\nScales the vertex positions, normals, and tangents of the …\nHow the projection will scale to the viewport.\nHandle to the scene to spawn.\nHandle to the scene to spawn.\nTemporarily removes the schedule associated with <code>label</code> …\nThe quality of the screen space specular transmission blur …\nHow many individual steps should be performed in the …\nRandom seed used for Auto-Layers rendering\nRandom seed used for Auto-Layers rendering\nCreate a new PRNG using a <code>u64</code> seed.\nSeek time inside of the animation. Always within the range …\nSeek to a specific time in the animation.\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nReturns the length of the semi-major axis. This …\nReturns the length of the semi-minor axis. This …\n“Sends” an <code>event</code> by writing it to the current event …\nSends an <code>event</code>, which can later be read by <code>EventReader</code>s. …\nSends a list of <code>events</code> all at once, which can later be …\nSends a list of <code>events</code> all at once, which can later be …\nSends the default value of the event. Useful when the …\nSends the default value of the event. Useful when the …\nSends an <code>Event</code>. This method returns the ID of the sent …\nSends a batch of <code>Event</code>s from an iterator. This method …\nSends the default value of the <code>Event</code> of type <code>E</code>. This …\nConvenience macro to use the <code>serde_as</code> system.\nReturns a serializable version of the value.\nSerialize this value into the given Serde serializer.\nSerialize this dynamic scene into rust object notation …\nPerforms a type-checked assignment of a reflected value to …\nSets the entity’s name.\nSets the value of the given <code>Plugin</code>, if it exists\nSets the position data of the <code>input_device</code> to <code>position_data</code>…\nSet the position to a specific point.\nTentatively set a planned state transition to <code>Some(state)</code>.\nSets the visibility to <code>true</code>. This should not be considered …\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSet alpha.\nSet whether the schedule applies deferred system buffers …\nSAFETY: we call <code>set_archetype</code> for each member that …\nConverts a Color to variant <code>Color::Rgba</code> and set blue\nChanges miscellaneous build settings.\nFlags this value as having been changed.\nSet the cursor position in this window in logical pixels.\nSets the default asset processor for the given <code>extension</code>.\nSets the duration of the timer.\nSet the two ears position.\nSets the elapsed time of the timer without any other …\nSet the emitter position.\nMutate the item, setting the <code>end</code> grid line\nSets the schedule’s execution strategy.\nConverts a Color to variant <code>Color::Rgba</code> and set green\nConverts a Color to variant <code>Color::Hsla</code> and set hue\nOverwrites this smart pointer with the given value, if and …\nConverts a Color to variant <code>Color::Hsla</code> and set lightness\nManually sets the change tick recording the time when this …\nOverwrites the tick indicating the last time this system …\nSet the listener position, with an ear on each side …\nSets the maximum amount of time that can be added to this …\nSetting to true will attempt to maximize the window.\nSetting to true will attempt to minimize the window.\nSets the mode of the timer.\nSets the names of each morph target. This should …\nSet morph targets image for this mesh. This requires a “…\nSets the parent of this entity.\nSets the parent of this entity.\nChange this entity’s parent while preserving this entity…\nSet the cursor position in this window in physical pixels.\nConverts a Color to variant <code>Color::Rgba</code> and set red\nSets the speed the clock advances relative to your system …\nSets the speed the clock advances relative to your system …\nSet the repetition behaviour of the animation.\nSets the function that will be called when the app is run.\nConverts a Color to variant <code>Color::Hsla</code> and set saturation\nMutate the item, setting the number of tracks the item …\nChanges the speed of the sound.\nSet the speed of the animation playback\nSet all file endings that should be loaded as …\nMutate the item, setting the <code>start</code> grid line\nSAFETY: we call <code>set_table</code> for each member that implements …\nSets the amount of virtual time that must pass before the …\nSets the amount of virtual time that must pass before the …\nSets the amount of virtual time that must pass before the …\nChanges the volume of the sound.\nSets the modulus used to calculate <code>elapsed_wrapped</code>.\nInitial settings that the audio starts playing with. If …\nInitial settings that the audio starts playing with. If …\nInitial settings that the audio starts playing with. If …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nA bias applied along the direction of the fragment’s …\nGeneration for some primitive shape meshes.\nDraws the shortest arc between two points (<code>from</code> and <code>to</code>) …\nReturns a short, pretty-print enabled path to the type.\nShuffle a mutable slice in place.\nGet the length of one side of the regular polygon\nThe number of sides\nDefines how the 4 side parts of the 9 slices will scale\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a single immutable query result when there is …\nReturns a single read-only query item when there is …\nReturns a single mutable query result when there is …\nReturns a single query item when there is exactly one …\nGet the size of the rectangle\nGet the size of the cuboid\nRectangle size.\nRectangle size.\nRectangle size.\nThe calculated node size as width and height in logical …\nReturns the size of a 2D image.\nReturns the size of a 2D image as f32.\nGet the slant height of the cone, the length of the line …\nPerforms a spherical linear interpolation between <code>self</code> and …\nThe entity “smart” color, guessed from either Entity …\nSorts children stably in place using the provided …\nSorts children stably in place using the provided key …\nSorts children stably in place using the provided key …\nSorts children unstably in place using the provided …\nSorts children unstably in place using the provided key …\nAsset containing the audio data to play.\nAsset containing the audio data to play.\nAsset containing the audio data to play.\nSpace in pixels between all tiles\nPlace the grid item automatically, specifying how many …\nEnables spatial audio for this source.\nContains a transform that specifies the position of this …\nOptional scale factor applied to the positions of this …\nSpawns an entity with the given bundle and inserts it into …\nSpawns an entity with the given bundle and inserts it into …\nSchedule the spawn of a new instance of the provided scene.\nSpawns a new <code>Entity</code> with a given <code>Bundle</code> of components and …\nPushes a <code>Command</code> to the queue for creating a new entity …\nSchedule the spawn of a new instance of the provided scene …\nSpawns a batch of entities with the same component <code>Bundle</code> …\nPushes a <code>Command</code> to the queue for creating entities with a …\nSchedule the spawn of a new instance of the provided …\nSchedule the spawn of a new instance of the provided …\nImmediately spawns a new instance of the provided dynamic …\nSpawns an <code>Entity</code> with no components and inserts it into …\nSpawns an <code>Entity</code> with no components and inserts it into …\nSpawns a new <code>Entity</code> and returns a corresponding …\nPushes a <code>Command</code> to the queue for creating a new empty …\nImmediately spawns all scenes scheduled for spawn.\nImmediately spawns a new instance of the provided scene.\nCustomizes the default <code>RenderPipelineDescriptor</code> for a …\nThe typically-sharper, mipmapped image that represents …\nThe amount of light transmitted <em>specularly</em> through the …\nGets the speed of the sound.\nSpeed of the animation playback\nSpeed to play at.\nDraw a wireframe sphere in 3D made out of 3 circles around …\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nSpecifies the rendering properties of the sprite, such as …\nSpecifies the rendering properties of the sprite, such as …\nCreates a new border as a square, with identical pixel …\nThe order of the node in the UI layout. Nodes with a …\nStart playing an animation, resetting state of the player. …\nPlace the grid item specifying the <code>start</code> grid line …\nPlace the grid item specifying <code>start</code> and <code>end</code> grid lines (…\nPlace the grid item specifying the <code>start</code> grid line and how …\nStart playing an animation, resetting state of the player. …\nReturns the <code>Instant</code> the clock was created.\nThe loading state during which progress will be tracked\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nA <code>Condition</code>-satisfying system that returns <code>true</code> if the …\nIdentical to <code>in_state</code> - use that instead.\nStops the sink.\nRetrieves this world’s <code>Storages</code> collection.\nGets the number of strong (<code>Arc</code>) pointers to this …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nStyles which control the layout (size and position) of the …\nReturns the amount of time elapsed from another instant to …\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nRetrieves a <code>SubApp</code> stored inside this <code>App</code>.\nRetrieves a <code>SubApp</code> stored inside this <code>App</code>.\nSubtracts two 2x2 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 4x4 matrices.\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nSwaps the child at <code>a_index</code> with the child at <code>b_index</code>.\nRun a system when the UI node is clicked\nReturns <code>Some</code> if this system set is a <code>SystemTypeSet</code>.\nGet the <code>TypeId</code> of the <code>System</code> produced after calling …\nReturns an iterator over all systems in this schedule.\nReturns the number of systems in this schedule.\nAn array of user-defined tags to organize the Tilesets\nArray of tags defined in this Entity definition\nOptional Enum definition UID used for this tileset …\nDowncasts the value to type <code>T</code>, unboxing and consuming the …\nRemoves all components in the <code>Bundle</code> from the entity and …\nAttempts to downcast the given value to <code>Self</code> using, …\nThe “target” that this camera will render to.\nOptions for the <code>TaskPool</code> created at application start.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nContains the text.\nContains the text of the node\nThe maximum width and height of the text.\nHow the text is positioned relative to its transform.\nText system flags\nContains the size of the text and its glyph’s position …\nText layout information\nA reference-counted handle to the image asset to be drawn.\nThe sprite sheet base texture\nHandle to the texture\nA handle to the texture atlas to use for this Ui Node\nRetrieves the current texture <code>Rect</code> of the sprite sheet …\ntexture area to draw\nThe specific areas of the atlas where each texture can be …\nThickness of the volume beneath the material surface.\nRetrieve the lazily-initialized thread-local random number …\nAdvance the timer by <code>delta</code> seconds. Non repeating timer …\nOptional TilesetRect used to display this entity (it could …\nTransforms the given slice in an collection of tiled …\nThe definition UID of corresponding Tileset, if any.\nThe definition UID of corresponding Tileset, if any.\nMap from tileset uids to image handles for the loaded …\nThe relative path to corresponding Tileset, if any.\nThe relative path to corresponding Tileset, if any.\nReturns the number of times a repeating timer finished …\nReturns the amount of virtual time that must pass before …\nStores the title of the window.\nThe state being entered.\nReturns the angle (in radians) of this vector in the range …\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\nReturns the rotation axis (normalized) and angle (in …\nConvert to a form convenient for passing outside of rust.\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 4]</code> array storing data in column major …\nCreates a <code>[f32; 16]</code> array storing data in column major …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …\nBuild a <code>CubicCurve</code> by computing the interpolation …\nGet the part connecting the hemispherical ends of the …\nReturns the rotation angles for the given euler rotation …\nConverts a physical size in this <code>Camera</code> to a logical size.\nReturns another <code>Query</code> from this that fetches the read-only …\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nToggles the playback of this sink.\nCreates a new <code>UiRect</code> where <code>top</code> takes the given value, and …\nThe value corresponding to the top side of the UI rect.\nPixel padding to the top\nThe vertical position of the top edge of the node.\nTotal units of work expected\nConstructs an event at the trace level.\nCall <code>trace!</code> once per call site.\nConstructs a span at the trace level.\nEnable the optional assets tracking feature\nA system that synchronizes the state of assets in this …\nWhether to enable the optional assets tracking feature\nShould we check the status of asset dependencies? Defaults …\nCall this to add your system returning <code>Progress</code> to your <code>App</code>\nTransform of the scene root entity.\nTransform of the scene root entity.\nThe local transform of the sprite, relative to its parent.\nThe local transform of the sprite, relative to its parent.\nThe transform of the text.\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the node\nThe transform of the entity.\nTransforms the vertex positions, normals, and tangents of …\nTransform a point.\nTransforms the given <code>point</code>, applying shear, scale, …\nTransforms the given <code>point</code>, applying scale, rotation and …\nTransforms the given 2D vector as a point.\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code> as 3D point.\nRotates the given 2D vector.\nTransforms the give 3D vector as a direction.\nTransforms the give <code>Vec3A</code> as 3D vector.\nTransforms the vertex positions, normals, and tangents of …\nTranslates this <code>Transform</code> around a <code>point</code> in space.\nTranslates the vertex positions of the mesh in place by …\nTranslates the vertex positions of the mesh by the given …\nGet the translation as a <code>Vec3</code>.\nPosition of the entity. In 2d, the last value of the <code>Vec3</code> …\nGet the translation as a <code>Vec3A</code>.\nTransmute the existing builder adding required accesses. …\nUse this to transform a <code>QueryState</code> into a more generic …\nTransmute the existing builder adding required accesses. …\nCreates a new <code>QueryState</code> with the same underlying …\nReturns a <code>QueryLens</code> that can be used to get a query with a …\nEquivalent to <code>Self::transmute_lens</code> but also includes a …\nShould the window be transparent?\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nFill any type implementing <code>Fill</code> with random data\nFill <code>dest</code> entirely with random data.\nReconstruct an <code>Entity</code> previously destructured with …\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\nConvert a <code>Image</code> to a <code>DynamicImage</code>. Useful for editing image\nConstructs a new <code>Arc&lt;T&gt;</code>, returning an error if allocation …\nConstructs a new <code>Arc&lt;T, A&gt;</code> in the provided allocator, …\nConstructs a new <code>Arc</code> with uninitialized contents, …\nConstructs a new <code>Arc</code> with uninitialized contents, in the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nConstructs a new <code>Arc</code> with uninitialized contents, with the …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nConstructs a new <code>Pin&lt;Arc&lt;T&gt;&gt;</code>, return an error if …\nConstructs a new <code>Pin&lt;Arc&lt;T, A&gt;&gt;</code> in the provided allocator, …\nAttempts to run the <code>Schedule</code> associated with the <code>label</code> a …\nTemporarily removes the schedule associated with <code>label</code> …\nConverts to a typed Handle. This will panic if the …\nReturns the inner value, if the <code>Arc</code> has exactly one strong …\nReturns the <code>TypeId</code> of the referenced <code>Asset</code>.\nReturns the <code>TypeId</code> of the underlying system type.\nReturns the name of the type, or <code>None</code> if it is anonymous.\nReturns the fully qualified path of the underlying type.\nConverts to a typed Handle. This will panic if the …\nConverts to a typed Handle. This will check the type when …\nConverts to a typed Handle. This <em>will not check if the </em>…\nUnique Intidentifier\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nWhether to apply only the base color to this material.\nResumes the clock if paused.\nUnpauses the Timer. Resumes the ticking of the timer.\nThe calculated node size as width and height in logical …\nConverts this <code>Handle</code> to an “untyped” / “generic-less…\nConverts this to an “untyped” / “generic-less” …\nIf we have the only reference to <code>T</code> then unwrap it. …\nReturn the local up vector (Y).\nEquivalent to <code>local_y()</code>\nAdvances the execution of the <code>Schedule</code> by one cycle.\nUpdates the internal time measurements.\nSwaps the event buffers and clears the oldest event …\nUpdate the system’s archetype component <code>Access</code>.\nFor the given <code>archetype</code>, adds any component accessed used …\nUpdates the state’s internal view of the <code>World</code>’s …\nUpdates the state’s internal view of the <code>world</code>’s …\nSwaps the event buffers and drains the oldest event …\nUpdates the internal entity location to match the current …\nIterate through all instances of the provided scenes and …\nUpdates time with a specified <code>Duration</code>.\nUpdates time with a specified <code>Instant</code>.\nPanics\nThe input value to be blended.\nInstantaneous velocity of a point at parametric value <code>t</code>.\nReturns this materials vertex shader. If <code>ShaderRef::Default</code>…\nReturns this material’s vertex shader. If …\nCreates a new <code>UiRect</code> where <code>top</code> and <code>bottom</code> take the given …\nReturns an iterator over the vertices of the regular …\nThe vertices of the polyline\nThe vertices of the polyline\nThe vertices of the triangle\nThe vertices of the <code>Polygon</code>\nThe vertices of the <code>BoxedPolygon</code>\nThe vertices of the polyline\nThe vertices of the polyline\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed visibility of the scene root …\nAlgorithmically-computed visibility of the scene root …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nAlgorithmically-computed indication of whether an entity …\nThe view visibility of the entity.\nIf set, this camera will render to the given <code>Viewport</code> …\nSpecifies the origin of the viewport as a normalized …\nReturns a ray originating from the camera, that passes …\nReturns a 2D world position computed from a position on …\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nUser-driven visibility of the scene root entity.\nUser-driven visibility of the scene root entity.\nUser indication of whether an entity is visible\nUser indication of whether an entity is visible\nThe visibility properties of the text.\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nDescribes the visibility properties of the node\nUser indication of whether an entity is visible\nEnables or disables the light\nEnables or disables the light\nEnables or disables the light\nThe visibility of the entity.\nThe visibility of the entity.\nShow overflowing items on both axes\nLayer instance visibility\nSets the window’s visibility.\nLayer instance visibility\nGets the volume of the sound.\nGet the volume of the sphere\nGet the volume of the cuboid\nGet the volume of the cylinder\nGet the volume of the capsule\nGet the volume of the cone\nGet the volume of the torus. Note that this only produces …\nVolume to play at.\nThe global volume of all audio.\nConstructs an event at the warn level.\nCall <code>warn!</code> once per call site.\nConstructs a span at the warn level.\nReturns <code>true</code> if the clock was paused at the start of this …\nIf set, will override the default “watch for changes” …\nReturns true if the <code>AssetServer</code> watches for changes.\nGets the number of <code>Weak</code> pointers to this allocation.\nCreate a new <code>Handle::Weak</code> with the given <code>u128</code> encoding of …\nThe individual item’s weight. This may not be bound to …\nRectangle width (max.x - min.x).\nRectangle width (max.x - min.x).\nRectangle width (max.x - min.x).\nThe window’s client area width in logical pixels.\nReturns the width of a 2D image.\nThe ideal width of the node. <code>width</code> is used when it is …\nThe width of the outline.\nEntity width in pixels. For non-resizable entities, it …\nGet the <code>WindingOrder</code> of the triangle\nWindow that the cursor moved inside.\nWindow that the cursor entered.\nWindow that the cursor left.\nWindow that received the character.\nWindow that moved.\nThe window entity registering the touch.\nWhere should the window appear relative to other …\nSets a specific theme for the window.\nAdds <code>With&lt;T&gt;</code> to the <code>FilteredAccess</code> of self.\nReturns this color with a new alpha value.\nConverts a Color to variant <code>Color::Rgba</code> and return this …")