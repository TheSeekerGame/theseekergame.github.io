searchState.loadedDescShard("seek_ecs_tilemap", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA module which contains tilemap components.\nA module which contains tile components.\nAll textures for tiles are inside a single image asset …\nA tilemap with rectangular tiles.\nThe tiles are provided as array layers inside a KTX2 or …\nSize of the tiles on the grid in pixels. This can be used …\nA component which stores a reference to the tilemap entity.\nSize of the tilemap in tiles.\nSpacing between tiles in pixels inside of the texture …\nSize of the atlas texture in pixels.\nSize of the tiles in pixels\nEach tile’s texture has its own image asset (each asset …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets images with the <code>COPY_SRC</code> flag.\nBundle for tile entities.\nA custom color for the tile.\nFlips the tiles texture along the X, Y or diagonal axes\nA tile position in the tilemap grid.\nUsed to store tile entities for fast look up. Tile …\nA texture index into the atlas or texture array for a …\nHides or shows a tile based on the boolean. Default: True\nGets a tile entity for the given tile position, if:\nRemove any stored entity at the given tile position, if …\nSets a tile entity for the given tile position, if the …\nCreates a new tile storage that is empty.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets a tile entity for the given tile position, if an …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator with all of the positions in the grid.\nReturns mutable iterator with all of the positions in the …\nRemove entity at the given tile position, if there was one.\nSets a tile entity for the given tile position.\nConverts a tile position (2D) into an index in a flattened …\nChecks to see if <code>self</code> lies within a tilemap of the …\nFlip tile along the x axis.\nFlip tile along the Y axis.")