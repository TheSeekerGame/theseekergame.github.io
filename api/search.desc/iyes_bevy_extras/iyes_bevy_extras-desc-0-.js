searchState.loadedDescShard("iyes_bevy_extras", 0, "Iyes’s crate of misc random bevy helpers and stuff\nConvenience system for despawning all entities that match …\nConvenience system for initting a resource of the given …\nConvenience system for removing a component from all …\nConvenience system for removing a resource of the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAnything that runs before and may affect operation\nThe “Producers”, the meat of the logic\nThe “Consumers”, anything that depends on / wants …\nSame as Want, but with RCs to run only if anything notable …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSimilar to Bevy’s PipedSystem, but the second system is …\nSimilar to Bevy’s PipedSystem, but with diverging paths …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")