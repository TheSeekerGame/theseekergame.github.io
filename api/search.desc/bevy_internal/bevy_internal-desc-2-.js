searchState.loadedDescShard("bevy_internal", 2, "The mouse button assigned to the event.\nThe change in the position of the pointing device since …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUpdates the <code>ButtonInput&lt;MouseButton&gt;</code> resource with the …\nThe pressed state of the button.\nThe mouse scroll unit.\nWindow that received the input.\nWindow that received the input.\nThe horizontal scroll value.\nThe vertical scroll value.\nAbort\nFound on Sun’s USB keyboard.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labeled AltGr on many …\n↓\n←\n→\n↑\nAudioVolumeDown\nAudioVolumeMute\nAudioVolumeUp\nStores the position data of the input devices of type <code>T</code>.\nThe back mouse button.\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\n[ on a US keyboard.\n] on a US keyboard.\nSome laptops place this key to the left of the ↑ key.\nBrowserFavorites\nSome laptops place this key to the right of the ↑ key.\nThe “home” button on Android.\nBrowserRefresh\nBrowserSearch\nBrowserStop\nA “press-able” input of type <code>T</code>.\nThe C button.\nCapsLock or ⇪\n, on a US keyboard.\nThe application context menu key, which is typically found …\nControl or ⌃\nControl or ⌃\nJapanese: 変 (henkan)\nFound on Sun’s USB keyboard.\nFound on Sun’s USB keyboard.\nThe down button of the D-Pad.\nThe left button of the D-Pad.\nThe right button of the D-Pad.\nThe up button of the D-Pad.\n⌦. The forward delete key. Note that on Apple keyboards, …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nThe right action button of the action pad (i.e. PS: …\nEject or ⏏. This key is placed in the function section …\nPage Down, End, or ↘\nEnter or ↵. Labeled Return on Apple keyboards.\n= on a US keyboard.\nEsc or ⎋\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nFound on Sun’s USB keyboard.\nFn This is typically a hardware key that does not generate …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe forward mouse button.\nA gamepad with an associated <code>ID</code>.\nAn axis of a <code>Gamepad</code>.\nA type of a <code>GamepadAxis</code>.\nA button of a <code>Gamepad</code>.\nA type of a <code>GamepadButton</code>.\nA collection of connected <code>Gamepad</code>s.\nHelp. Not present on standard PC keyboards.\nUse for dedicated ひらがな key found on some Japanese …\nHome or ↖\nLegacy modifier key.\nInsert or Ins. Not present on Apple keyboards.\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nJapanese: カタカナ/ひらがな/ローマ字 …\nUse for dedicated カタカナ key found on some Japanese …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nThe key code of a <code>KeyboardInput</code>.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nLaunchMail\nThe left mouse button.\nThe horizontal value of the left stick.\nThe vertical value of the left stick.\nThe left thumb stick button.\nThe first left trigger.\nThe second left trigger.\nThe value of the left <code>Z</code> button.\nMediaPlayPause\nMediaSelect\nMediaStop\nMediaTrackNext\nMediaTrackPrevious\nLegacy modifier key. Also called “Super” in certain …\nThe middle mouse button.\n- on a US keyboard.\nThe mode button.\nA button on a mouse device.\nJapanese: 無変換 (muhenkan)\nThe upper action button of the action pad (i.e. PS: …\nOn the Mac, this is used for the numpad Clear key.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\nThe Enter key on the numpad.\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nFound on Sun’s USB keyboard.\nMiscellaneous buttons, considered non-standard (i.e. Extra …\nNon-standard support for other axis types (i.e. HOTAS …\nAnother mouse button with the associated number.\nPage Down, PgDn, or ⇟\nPage Up, PgUp, or ⇞\nFound on Sun’s USB keyboard.\nPause Break\n. on a US keyboard.\nThis key is placed in the function section on some Apple …\nPrtScr SysRq or Print Screen\nFound on Sun’s USB keyboard.\n’ on a US keyboard.\nResume\nThe right mouse button.\nThe horizontal value of the right stick.\nThe vertical value of the right stick.\nThe right thumb stick button.\nThe first right trigger.\nThe second right trigger.\nThe value of the right <code>Z</code> button.\nScroll Lock\nThe select button.\nFound on Sun’s USB keyboard.\n; on a US keyboard.\nShift or ⇧\nShift or ⇧\n/ on a US keyboard.\nSleep\nThe bottom action button of the action pad (i.e. PS: …\n  (space)\nThe start button.\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nSuspend\nTab or ⇥\nA touch input event.\nA collection of <code>Touch</code>es.\nTurbo\nFound on Sun’s USB keyboard.\nThis variant is used when the key cannot be translated to …\nWakeUp\nThe left action button of the action pad (i.e. PS: Square, …\nThe Z button.\nChecks if any touch input was just canceled.\nChecks if any touch input was just pressed.\nChecks if any touch input was just released.\nThe type of the axis.\nThe type of the button.\nClears <code>just_pressed</code>, <code>just_released</code>, and <code>just_canceled</code> data …\nClears the <code>just_canceled</code> state of the touch input and …\nClears the <code>just_pressed</code> state of the touch input and …\nClears the <code>just_released</code> state of the touch input and …\nReturns <code>true</code> if the <code>gamepad</code> is connected.\nRetrieves the position of the first currently pressed …\nDescribes how hard the screen was pressed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe gamepad on which the button is located on.\nThe gamepad on which the axis is located on.\nReturns the <code>Touch</code> input corresponding to the <code>id</code> if it is …\nReturns the <code>Touch</code> input corresponding to the <code>id</code> if it has …\nThe <code>ID</code> of the gamepad.\nThe unique identifier of the finger.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over registered <code>Gamepad</code>s in an …\nAn iterator visiting every pressed <code>Touch</code> input in …\nAn iterator visiting every just canceled <code>Touch</code> input in …\nAn iterator visiting every just pressed <code>Touch</code> input in …\nAn iterator visiting every just released <code>Touch</code> input in …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nReturns <code>true</code> if the input corresponding to the <code>id</code> has just …\nThe name of the gamepad if this one is connected.\nCreates a new <code>Gamepad</code>.\nCreates a new <code>GamepadButton</code>.\nCreates a new <code>GamepadAxis</code>.\nThe phase of the touch input.\nThe position of the finger on the touchscreen.\nRegister a release for a given touch input.\nRegisters a release for all currently pressed touch inputs.\nClears <code>pressed</code>, <code>just_pressed</code>, <code>just_released</code>, and …\nThe window entity registering the touch.\nOn iOS, the force is calibrated so that the same number …\nThe system canceled the tracking of the finger.\nA finger stopped touching the touchscreen.\nA force description of a <code>Touch</code> input.\nA finger moved over the touchscreen.\nIf the platform reports the force as normalized, we have …\nA finger started to touch the touchscreen.\nA touch input.\nA touch input event.\nA phase of a <code>TouchInput</code>.\nA collection of <code>Touch</code>es.\nThe delta of the current <code>position</code> and the <code>previous_position</code>…\nThe distance of the <code>start_position</code> and the current <code>position</code>…\nReturns the current <code>force</code> of the touch.\nDescribes how hard the screen was pressed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <code>id</code> of the touch.\nThe unique identifier of the finger.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe phase of the touch input.\nReturns the current <code>position</code> of the touch.\nThe position of the finger on the touchscreen.\nReturns the <code>previous_force</code> of the touch.\nReturns the <code>previous_position</code> of the touch.\nReturns the <code>start_force</code> of the touch.\nReturns the <code>start_position</code> of the touch.\nUpdates the <code>Touches</code> resource with the latest <code>TouchInput</code> …\nThe window entity registering the touch.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.\nTouchpad magnification event with two-finger pinch gesture.\nTouchpad rotation event with two-finger rotation gesture.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAlias for a boxed <code>Subscriber</code>.\nDescribes the level of verbosity of a span or event.\nAdds logging to Apps. This plugin is part of the …\nConstructs an event at the debug level.\nCall <code>debug!</code> once per call site.\nConstructs a span at the debug level.\nConstructs an event at the error level.\nCall <code>error!</code> once per call site.\nConstructs a span at the error level.\nFilters logs using the <code>EnvFilter</code> format\nReturns the argument unchanged.\nConstructs an event at the info level.\nCall <code>info!</code> once per call site.\nConstructs a span at the info level.\nCalls <code>U::from(self)</code>.\nFilters out logs that are “less than” the given level. …\nCall some expression only once per call site.\nThe Bevy Log Prelude.\nConstructs an event at the trace level.\nCall <code>trace!</code> once per call site.\nConstructs a span at the trace level.\nOptionally apply extra transformations to the tracing …\nConstructs an event at the warn level.\nCall <code>warn!</code> once per call site.\nConstructs a span at the warn level.\nConstructs an event at the debug level.\nCall <code>debug!</code> once per call site.\nConstructs a span at the debug level.\nConstructs an event at the error level.\nCall <code>error!</code> once per call site.\nConstructs a span at the error level.\nConstructs an event at the info level.\nCall <code>info!</code> once per call site.\nConstructs a span at the info level.\nCall some expression only once per call site.\nConstructs an event at the trace level.\nCall <code>trace!</code> once per call site.\nConstructs a span at the trace level.\nConstructs an event at the warn level.\nCall <code>warn!</code> once per call site.\nConstructs a span at the warn level.\n<code>RUST_LOG</code> is the default environment variable used by …\nThe maximum verbosity level that is enabled by a <code>Subscriber</code>…\nA <code>Layer</code> which filters spans and events based on a set of …\nA <code>Subscriber</code> that logs formatted representations of <code>tracing</code>…\nA composable handler for <code>tracing</code> events.\nA shared, reusable store for spans.\nAdd a filtering directive to this <code>EnvFilter</code>.\nComposes this layer around the given <code>Layer</code>, returning a …\nErases the type of this <code>Layer</code>, returning a <code>Box</code>ed <code>dyn Layer</code> …\nReturns a builder that can be used to configure a new …\nReturns a new <code>SubscriberBuilder</code> for configuring a format …\nReturns <code>true</code> if this layer is interested in a span or …\nReturns <code>true</code> if this <code>EnvFilter</code> would enable the provided …\nThis is intentionally not implemented, as recording events …\nCalled before <code>on_event</code>, to determine if <code>on_event</code> should be …\nUtilities for working with fields and field visitors.\n<code>Layer</code>s that control which spans and events are enabled by …\nA <code>Subscriber</code> for formatting and logging <code>tracing</code> data.\nReturns a new <code>SubscriberBuilder</code> for configuring a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new <code>EnvFilter</code> from the value of the <code>RUST_LOG</code> …\nReturns a new <code>EnvFilter</code> from the value of the given …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Layer</code> trait, a composable abstraction for building …\nReturns an optional hint of the highest verbosity level …\nReturns a new <code>EnvFilter</code> from the directives in the given …\nReturns a new format subscriber with the default …\nNotifies this layer that the span with the given ID has …\nInforms the filter that the span with the provided <code>id</code> was …\nNotifies this layer that a span with the given ID was …\nInforms the filter that the span with the provided <code>id</code> was …\nNotifies this layer that an event has occurred.\nNotifies this layer that the span with the given ID was …\nInforms the filter that the span with the provided <code>id</code> was …\nNotifies this layer that a span with the ID <code>span</code> recorded …\nNotifies this layer that a span ID has been cloned, and …\nPerforms late initialization when attaching a <code>Layer</code> to a …\nNotifies this layer that a new span was constructed with …\nInforms the filter that a new span was created.\nNotifies this layer that a span with the given <code>Id</code> recorded …\nInforms the filter that the span with the provided <code>id</code> …\nPerforms late initialization when installing this layer as …\nThe <code>tracing-subscriber</code> prelude.\nThis is intentionally not implemented, as recording fields …\nRegisters a new callsite with this layer, returning …\nStorage for span data shared by multiple <code>Layer</code>s.\nWrapper for a <code>Layer</code> to allow it to be dynamically reloaded.\nDecrements the reference count of the span with the given …\nReturns a new <code>EnvFilter</code> from the value of the <code>RUST_LOG</code> …\nReturns a new <code>EnvFilter</code> from the value of the given …\nReturns a new <code>EnvFilter</code> from the directives in the given …\nExtension traits and other utilities to make working with …\nCombines <code>self</code> with a <code>Filter</code>, returning a <code>Filtered</code> layer.\nComposes this <code>Layer</code> with the given <code>Subscriber</code>, returning a …\nExtension trait providing <code>MakeVisitor</code> combinators.\nExtension trait implemented for all <code>MakeVisitor</code> …\nCreates new visitors.\nExtension trait implemented by types which can be recorded …\nVisits typed values.\nExtension trait implemented by visitors to indicate that …\nA visitor that produces output once it has visited a set …\nExtension trait implemented by visitors to indicate that …\nThe visitor type produced by this <code>MakeVisitor</code>.\n<code>MakeVisitor</code> wrappers for working with <code>fmt::Debug</code> fields.\nWraps <code>self</code> so that any <code>fmt::Debug</code> fields are recorded …\nA <code>MakeVisitor</code> wrapper that separates formatted fields with …\nWraps <code>self</code> so that when fields are formatted to a writer, …\n<code>MakeVisitor</code> wrappers for working with <code>fmt::Display</code> fields.\nWraps <code>self</code> so that any string fields named “message” …\nCompletes the visitor, returning any output.\nMake a new visitor for the provided <code>target</code>.\nRecord all the fields in <code>self</code> with the provided <code>visitor</code>.\nVisit a boolean value.\nVisit a value implementing <code>fmt::Debug</code>.\nRecords a type implementing <code>Error</code>.\nVisit a double-precision floating point value.\nVisit a signed 128-bit integer value.\nVisit a signed 64-bit integer value.\nVisit a string value.\nVisit an unsigned 128-bit integer value.\nVisit an unsigned 64-bit integer value.\nVisit a set of fields, and return the output of finishing …\nVisits all fields in <code>fields</code> with a new visitor constructed …\nReturns the formatter that this visitor writes to.\nReturns the writer that this visitor writes to.\nA visitor wrapper that ensures any <code>fmt::Debug</code> fields are …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWraps the provided visitor so that any <code>fmt::Debug</code> fields …\nVisit a string value.\nA <code>MakeVisitor</code> wrapper that wraps a visitor that writes …\nA visitor wrapper that inserts a delimiter after the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new <code>MakeVisitor</code> implementation that wraps <code>inner</code> …\nReturns a new <code>Visit</code> implementation that wraps <code>inner</code> so that\nA visitor wrapper that ensures any strings named “message…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a new <code>MakeVisitor</code> implementation that will wrap …\nVisit a string value.\nIndicates that a field name specified in a filter …\nA builder for constructing new <code>EnvFilter</code>s.\nA single filtering directive.\nA filter implemented by a closure or function pointer that …\nA <code>Layer</code> which filters spans and events based on a set of …\nExtension trait adding combinators for combining <code>Filter</code>.\nA filter implemented by a closure or function pointer that …\nUniquely identifies an individual <code>Filter</code> instance in the …\nA <code>Layer</code> that wraps an inner <code>Layer</code> and adds a <code>Filter</code> which …\nIndicates that an error occurred while parsing a <code>EnvFilter</code> …\nA filter comparable to a verbosity <code>Level</code>.\nIndicates that a string could not be parsed to a valid …\nIndicates that a string could not be parsed as a filtering …\nA filter that enables or disables spans and events based …\nCombines this <code>Filter</code> with another <code>Filter</code> s so that spans …\nBoxes <code>self</code>, erasing its concrete type.\nFilter combinators\nReturns the default level for this filter, if one is set.\nConstructs a <code>DynFilterFn</code> from a function or closure that …\nBorrows the <code>Filter</code> used by this layer.\nConstructs a <code>FilterFn</code>, from a function or closure that …\nMutably borrows the <code>Filter</code> used by this layer.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new <code>EnvFilter</code> from the directives in the …\nReturns a new <code>EnvFilter</code> from the directives in the …\nBorrows the inner <code>Layer</code> wrapped by this <code>Filtered</code> layer.\nMutably borrows the inner <code>Layer</code> wrapped by this <code>Filtered</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the target-<code>LevelFilter</code> pairs in …\nConstructs a <code>Filter</code> from a function or closure that …\nConstructs a <code>FilterFn</code> from a function or closure that …\nWraps the provided <code>Layer</code> so that it is filtered by the …\nReturns a new <code>Targets</code> filter.\nInverts <code>self</code>, returning a filter that enables spans and …\nCombines two <code>Filter</code>s so that spans and events are enabled …\nReturns a new <code>EnvFilter</code> from the directives in the given …\nReturns a new <code>EnvFilter</code> from the directives in the given …\nA filter that enables or disables spans and events based …\nReturns a new <code>EnvFilter</code> from the directives in the …\nAdds a function for filtering callsites to this filter.\nSets the default level to enable for spans and events …\nSets a default [filtering directive] that will be added to …\nSets the name of the environment variable used by the …\nSets the highest verbosity <code>Level</code> the filter function will …\nSets the highest verbosity <code>Level</code> the filter function will …\nSets whether span field values can be matched with regular …\nEnables spans and events with targets starting with the …\nAdds targets from an iterator of target-<code>LevelFilter</code> pairs …\nReturns whether a target-<code>Level</code> pair would be enabled by …\nCombines two <code>Filter</code>s so that spans and events are enabled …\nInverts the result of a <code>Filter</code>.\nCombines two <code>Filter</code>s so that spans and events are enabled …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn owning iterator over the target-level pairs of a <code>Targets</code>…\nA borrowing iterator over the target-level pairs of a …\nA filter that enables or disables spans and events based …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProvides the current span context to a formatter.\nA type that can format a tracing <code>Event</code> to a <code>Writer</code>.\nA type that can format a set of fields to a <code>Writer</code>.\nA formatted representation of a span’s fields stored in …\nA <code>Subscriber</code> that logs formatted representations of <code>tracing</code>…\nA <code>Layer</code> that logs formatted representations of <code>tracing</code> …\nA type that can create <code>io::Write</code> instances.\nA <code>Subscriber</code> that logs formatted representations of <code>tracing</code>…\nConfigures and constructs <code>Subscriber</code>s.\nA writer intended to support <code>libtest</code>’s output capturing …\nThe concrete <code>io::Write</code> implementation returned by …\nRecord additional field(s) on an existing span.\nReturns a new <code>format::Writer</code> for writing to this …\nSets the layer being built to use a less verbose formatter.\nSets the subscriber being built to use a less verbose …\nReturns the current span for this formatter.\nSets the event formatter that the layer being built will …\nSets the event formatter that the subscriber being built …\nReturns an iterator over the stored data for all the spans …\nReturns <code>true</code> if an active span exists for the given <code>Id</code>.\nReturns the field formatter configured by the subscriber …\nThe formatted fields of a span.\nFinish the builder, returning a new <code>FmtSubscriber</code>.\nReturns a new <code>SubscriberBuilder</code> for configuring a …\nSets the field formatter that the layer being built will …\nSets the field formatter that the subscriber being built …\nFormatters for logging <code>tracing</code> events.\nReturns the default configuration for an [event formatter].\nWrite a log message for <code>Event</code> in <code>Context</code> to the given …\nFormat the provided <code>fields</code> to the provided <code>Writer</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInstall a global tracing subscriber that listens for …\nInstall this Subscriber as the global default.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new formatting layer that can be composed with …\nSets whether to write errors from <code>FormatEvent</code> to the …\nSets whether to write errors from <code>FormatEvent</code> to the …\nReturns stored data for the span that the wrapped …\nReturns an instance of <code>Writer</code>.\nReturns a <code>Writer</code> for writing data from the span or event …\nUpdates the event formatter by applying a function to the …\nUpdates the event formatter by applying a function to the …\nUpdates the field formatter by applying a function to the …\nUpdates the field formatter by applying a function to the …\nUpdates the <code>MakeWriter</code> by applying a function to the …\nUpdates the <code>MakeWriter</code> by applying a function to the …\nReturns metadata for the span with the given <code>id</code>, if it …\nReturns a new <code>Layer</code> with the default configuration.\nReturns a new <code>FormattedFields</code>.\nReturns a new <code>TestWriter</code> with the default configuration.\nReturns stored data for the parent span of the event …\nSets the layer being built to use an excessively pretty, …\nSets the subscriber being built to use an excessively …\nReturns a <code>Handle</code> that may be used to reload the …\nSets whether this layer should use ANSI terminal formatting\nReturns stored data for the span with the given <code>id</code>, if it …\nReturns an iterator over the stored data for all the spans …\nFormatters for event timestamps.\nReturns a new <code>SystemTime</code> timestamp provider.\nInstall a global tracing subscriber that listens for …\nInstall this Subscriber as the global default if one is …\nVisits every span in the current context with a closure.\nSets whether or not the formatter emits ANSI terminal …\nSets whether or not the formatter emits ANSI terminal …\nSets the <code>EnvFilter</code> that the subscriber will use to …\nSets whether or not an event’s source code file path is …\nSets whether or not an event’s source code file path is …\nConfigures the subscriber being built to allow filter …\nSets whether or not an event’s level is displayed.\nSets whether or not an event’s level is displayed.\nSets whether or not an event’s source code line number is\nSets whether or not an event’s source code line number is\nSets the maximum verbosity level that will be enabled by …\nConfigures how synthesized events are emitted at points in …\nConfigures how synthesized events are emitted at points in …\nSets whether or not an event’s target is displayed.\nSets whether or not an event’s target is displayed.\nConfigures the layer to support <code>libtest</code>’s output …\nConfigures the subscriber to support <code>libtest</code>’s output …\nSets whether or not the thread ID of the current thread is …\nSets whether or not the thread ID of the current thread is …\nSets whether or not the name of the current thread is …\nSets whether or not the name of the current thread is …\nUse the given <code>timer</code> for span and event timestamps.\nUse the given <code>timer</code> for log message timestamps.\nSets the <code>MakeWriter</code> that the layer being built will use to …\nSets the <code>MakeWriter</code> that the subscriber being built will …\nDo not emit timestamps with spans and event.\nDo not emit timestamps with log messages.\nAbstractions for creating <code>io::Write</code> instances.\nBorrows the writer for this <code>Layer</code>.\nMutably borrows the writer for this <code>Layer</code>.\none event per enter/exit of a span\none event when the span is dropped\nMarker for <code>Format</code> that indicates that the compact log …\nThe default <code>FormatFields</code> implementation.\nThe visitor produced by <code>DefaultFields</code>’s <code>MakeVisitor</code> …\none event per enter of a span\none event per exit of a span\nevents at all points (new, enter, exit, drop)\nA <code>FormatFields</code> implementation that formats fields by …\nThe visitor produced by <code>FieldFn</code>’s <code>MakeVisitor</code> …\nConfigures what points in the span lifecycle are logged as …\nA pre-configured event formatter.\nA type that can format a tracing <code>Event</code> to a <code>Writer</code>.\nA type that can format a set of fields to a <code>Writer</code>.\nMarker for <code>Format</code> that indicates that the default log …\none event when span is created\nspans are ignored (this is the default)\nAn excessively pretty, human-readable event formatter.\nAn excessively pretty, human-readable <code>MakeVisitor</code> …\nThe visitor produced by <code>Pretty</code>’s <code>MakeVisitor</code> …\nA writer to which formatted representations of spans and …\nRecord additional field(s) on an existing span.\nReturn a new <code>Writer</code> that mutably borrows <code>self</code>.\nUse a less verbose output format.\nReturns a <code>FormatFields</code> implementation that formats fields …\nReturns the default configuration for an [event formatter].\nWrite a log message for <code>Event</code> in <code>Context</code> to the given …\nFormat the provided <code>fields</code> to the provided <code>Writer</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>true</code> if ANSI escape codes may be used to add colors\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Writer</code> from any type that implements …\nReturns a new default visitor that formats to the provided …\nReturns a new default <code>PrettyFields</code> implementation.\nReturns a new default visitor that formats to the provided …\nReturns a new default <code>FormatFields</code> implementation.\nUse an excessively pretty, human-readable output format.\nEnable ANSI encoding for formatted fields.\nEnable ANSI terminal colors for formatted output.\nSets whether or not an event’s source code file path is …\nSets whether or not an event’s level is displayed.\nSets whether or not an event’s source code line number is\nSets whether the event’s source code location is …\nSets whether or not the source code location from which an …\nSets whether or not an event’s target is displayed.\nSets whether or not the thread ID of the current thread is …\nSets whether or not the name of the current thread is …\nUse the given <code>timer</code> for log message timestamps.\nDo not emit timestamps with log messages.\nWrites a <code>char</code> into this writer, returning whether the …\nGlue for usage of the <code>write!</code> macro with <code>Writer</code>s.\nWrites a string slice into this <code>Writer</code>, returning whether …\nA type that can measure and format the current time.\nRetrieve and print the current wall-clock time.\nRetrieve and print the relative elapsed wall-clock time …\nMeasure and write out the current time.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a new <code>SystemTime</code> timestamp provider.\nReturns a new <code>Uptime</code> timestamp provider.\nA writer of type <code>A</code>.\nA writer of type <code>A</code>.\nImplements <code>std::io::Write</code> for an <code>Arc</code> where <code>&amp;W: Write</code>.\nA writer of type <code>B</code>.\nA writer of type <code>B</code>.\nA writer that erases the specific <code>io::Write</code> and <code>MakeWriter</code> …\nA writer that is one of two types implementing <code>io::Write</code>.\nA type that can create <code>io::Write</code> instances.\nExtension trait adding combinators for working with types …\nA type implementing <code>io::Write</code> for a <code>MutexGuard</code> where the …\nA writer which may or may not be enabled.\nCombines a <code>MakeWriter</code> that returns an <code>OptionalWriter</code> with …\nCombines two types implementing <code>MakeWriter</code> (or …\nA writer intended to support <code>libtest</code>’s output capturing …\nA <code>MakeWriter</code> combinator that wraps a <code>MakeWriter</code> with a …\nA <code>MakeWriter</code> combinator that only returns an enabled writer…\nA <code>MakeWriter</code> combinator that only returns an enabled writer…\nThe concrete <code>io::Write</code> implementation returned by …\nCombines <code>self</code> with another type implementing <code>MakeWriter</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an instance of <code>Writer</code>.\nReturns a <code>Writer</code> for writing data from the span or event …\nConstructs a <code>BoxMakeWriter</code> wrapping a type implementing …\nWraps the provided <code>MakeWriter</code> with a maximum <code>Level</code>, so …\nWraps the provided <code>MakeWriter</code> with a minimum <code>Level</code>, so …\nWraps <code>make</code> with the provided <code>filter</code>, returning a <code>MakeWriter</code>…\nCombines\nCombines two types implementing <code>MakeWriter</code>, returning a …\nReturns a disabled writer.\nCombines <code>self</code> with another type implementing <code>MakeWriter</code>, …\nReturns an enabled writer of type <code>T</code>.\nWraps <code>self</code> with a predicate that takes a span or event’s …\nWraps <code>self</code> and returns a <code>MakeWriter</code> that will only write …\nWraps <code>self</code> and returns a <code>MakeWriter</code> that will only write …\nRepresents information about the current context provided …\nA per-<code>Layer</code> filter that determines whether a span or event …\nA layer that does nothing.\nA composable handler for <code>tracing</code> events.\nA <code>Subscriber</code> composed of a <code>Subscriber</code> wrapped by one or …\nExtension trait adding a <code>with(Layer)</code> combinator to …\nComposes this layer around the given <code>Layer</code>, returning a …\nErases the type of this <code>Layer</code>, returning a <code>Box</code>ed <code>dyn Layer</code> …\nReturns an <code>Interest</code> indicating whether this layer will …\nReturns the wrapped subscriber’s view of the current …\nReturns some reference to this <code>Subscriber</code> value if it is …\nReturns <code>true</code> if this layer is interested in a span or …\nReturns <code>true</code> if this layer is interested in a span or …\nReturns whether the wrapped subscriber would enable the …\nRecords the provided <code>event</code> with the wrapped subscriber.\nCalled before <code>on_event</code>, to determine if <code>on_event</code> should be …\nCalled before the filtered [<code>Layer]&#39;s [</code>on_event…\nReturns an iterator over the stored data for all the spans …\nReturns a <code>SpanRef</code> for the parent span of the given <code>Event</code>, …\nReturns <code>true</code> if an active span exists for the given <code>Id</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this <code>Subscriber</code> is the same type as <code>T</code>.\nReturns stored data for the span that the wrapped …\nReturns an optional hint of the highest verbosity level …\nReturns metadata for the span with the given <code>id</code>, if it …\nReturns a new <code>Identity</code> layer.\nNotifies this layer that the span with the given ID has …\nNotifies this filter that a span with the given ID has …\nNotifies this layer that a span with the given ID was …\nNotifies this filter that a span with the given ID was …\nNotifies this layer that an event has occurred.\nNotifies this layer that the span with the given ID was …\nNotifies this filter that a span with the given ID was …\nNotifies this layer that a span with the ID <code>span</code> recorded …\nNotifies this layer that a span ID has been cloned, and …\nPerforms late initialization when attaching a <code>Layer</code> to a …\nNotifies this layer that a new span was constructed with …\nNotifies this filter that a new span was constructed with …\nNotifies this layer that a span with the given <code>Id</code> recorded …\nNotifies this filter that a span with the given <code>Id</code> …\nPerforms late initialization when installing this layer as …\nRegisters a new callsite with this layer, returning …\nReturns stored data for the span with the given <code>id</code>, if it …\nReturns an iterator over the stored data for all the spans …\nWraps <code>self</code> with the provided <code>layer</code>.\nCombines <code>self</code> with a <code>Filter</code>, returning a <code>Filtered</code> layer.\nComposes this <code>Layer</code> with the given <code>Subscriber</code>, returning a …\nExtension trait adding combinators for working with types …\nExtension trait adding utility methods for subscriber …\nA composable handler for <code>tracing</code> events.\nExtension trait adding a <code>with(Layer)</code> combinator to …\nExtension trait providing <code>MakeVisitor</code> combinators.\nExtension trait implemented by types which can be recorded …\nCombines <code>self</code> with another type implementing <code>MakeWriter</code>, …\nComposes this layer around the given <code>Layer</code>, returning a …\nErases the type of this <code>Layer</code>, returning a <code>Box</code>ed <code>dyn Layer</code> …\nWraps <code>self</code> so that any <code>fmt::Debug</code> fields are recorded …\nWraps <code>self</code> so that when fields are formatted to a writer, …\nWraps <code>self</code> so that any string fields named “message” …\nReturns <code>true</code> if this layer is interested in a span or …\nCalled before <code>on_event</code>, to determine if <code>on_event</code> should be …\nAttempts to set <code>self</code> as the global default subscriber in …\nNotifies this layer that the span with the given ID has …\nNotifies this layer that a span with the given ID was …\nNotifies this layer that an event has occurred.\nNotifies this layer that the span with the given ID was …\nNotifies this layer that a span with the ID <code>span</code> recorded …\nNotifies this layer that a span ID has been cloned, and …\nPerforms late initialization when attaching a <code>Layer</code> to a …\nNotifies this layer that a new span was constructed with …\nNotifies this layer that a span with the given <code>Id</code> recorded …\nPerforms late initialization when installing this layer as …\nCombines <code>self</code> with another type implementing <code>MakeWriter</code>, …\nRecord all the fields in <code>self</code> with the provided <code>visitor</code>.\nRegisters a new callsite with this layer, returning …\nSets <code>self</code> as the default subscriber in the current scope, …\nAttempts to set <code>self</code> as the global default subscriber in …\nWraps <code>self</code> with the provided <code>layer</code>.\nCombines <code>self</code> with a <code>Filter</code>, returning a <code>Filtered</code> layer.\nWraps <code>self</code> with a predicate that takes a span or event’s …\nWraps <code>self</code> and returns a <code>MakeWriter</code> that will only write …\nWraps <code>self</code> and returns a <code>MakeWriter</code> that will only write …\nComposes this <code>Layer</code> with the given <code>Subscriber</code>, returning a …\nSpan data stored in a <code>Registry</code>.\nThe type of span data stored in this registry.\nAn immutable, read-only reference to a Span’s extensions.\nAn mutable reference to a Span’s extensions.\nProvides access to stored span data.\nA shared, reusable store for spans.\nAn iterator over the parents of a span, ordered from leaf …\nAn iterator over the parents of a span, ordered from root …\nA stored representation of data associated with a span.\nA reference to [span data] and the associated registry.\nReturns a reference to this span’s <code>Extensions</code>.\nReturns a reference to this span’s <code>Extensions</code>.\nReturns a mutable reference to this span’s <code>Extensions</code>.\nReturns a mutable reference to this span’s <code>Extensions</code>.\nReturns a list of fields defined by the span.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFlips the order of the iterator, so that it is ordered …\nImmutably borrows a type previously inserted into this …\nGet a mutable reference to a type previously inserted on …\nReturns this span’s ID.\nReturns this span’s ID.\nInsert a type into this <code>Extensions</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this span is enabled for the per-layer …\nReturns a reference to the span’s <code>Metadata</code>.\nReturns a static reference to the span’s metadata.\nReturns the span’s name,\nReturns a reference to the ID\nReturns a <code>SpanRef</code> describing this span’s parent, or <code>None</code> …\nRegisters a <code>Filter</code> for per-layer filtering with this …\nRemove a type from this <code>Extensions</code>.\nReplaces an existing <code>T</code> into this extensions.\nReturns an iterator over all parents of this span, …\nReturns a <code>SpanRef</code> for the span with the given <code>Id</code>, if it …\nReturns the <code>SpanData</code> for a given <code>Id</code>, if it exists.\nIndicates that an error occurred when reloading a layer.\nAllows reloading the state of an associated <code>Layer</code>.\nWraps a <code>Layer</code> or <code>Filter</code>, allowing it to be reloaded …\nReturns a clone of the layer or filter’s current value …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>Handle</code> that can be used to reload the wrapped …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this error occurred because the <code>Subscriber</code> …\nReturns <code>true</code> if this error occurred because the layer was …\nInvokes a closure with a mutable reference to the current …\nWraps the given <code>Layer</code> or <code>Filter</code>, returning a <code>reload::Layer</code> …\nReplace the current <code>Layer</code> or <code>Filter</code> with the provided …\nInvokes a closure with a borrowed reference to the current …\nExtension trait adding utility methods for subscriber …\nError returned by <code>try_init</code> if a global default subscriber …\nReturns the argument unchanged.\nAttempts to set <code>self</code> as the global default subscriber in …\nCalls <code>U::from(self)</code>.\nSets <code>self</code> as the default subscriber in the current scope, …\nAttempts to set <code>self</code> as the global default subscriber in …\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nThe unit axes.\nA 2D affine transform, which can represent translation, …\nReduced-size version of <code>glam::Affine3A</code> for use when …\nA 3D affine transform, which can represent translation, …\nAn <code>AspectRatio</code> is the ratio of width to height.\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 3-dimensional SIMD vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nA 4-dimensional SIMD vector mask.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nEuler rotation sequences.\nAll false.\nAll false.\nA trait for extending <code>f32</code> and <code>f64</code> with extra methods.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nThe identity transform.\nThe identity transform.\nA 3x3 identity matrix, where all diagonal elements are <code>1</code>, …\nThe identity transform.\nThe identity transform.\nA 2x2 identity matrix, where all diagonal elements are <code>1</code>, …\nA 3x3 identity matrix, where all diagonal elements are <code>1</code>, …\nA 4x4 identity matrix, where all diagonal elements are <code>1</code>, …\nThe identity quaternion. Corresponds to no rotation.\nAll <code>f32::INFINITY</code>.\nAll <code>f64::INFINITY</code>.\nAll <code>f64::INFINITY</code>.\nAll <code>f64::INFINITY</code>.\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nAll <code>f32::MAX</code>.\nAll <code>f64::MAX</code>.\nAll <code>f64::MAX</code>.\nAll <code>f64::MAX</code>.\nAll <code>i16::MAX</code>.\nAll <code>i16::MAX</code>.\nAll <code>i16::MAX</code>.\nAll <code>u16::MAX</code>.\nAll <code>u16::MAX</code>.\nAll <code>u16::MAX</code>.\nAll <code>i64::MAX</code>.\nAll <code>i64::MAX</code>.\nAll <code>i64::MAX</code>.\nAll <code>u64::MAX</code>.\nAll <code>u64::MAX</code>.\nAll <code>u64::MAX</code>.\nAll <code>f32::MIN</code>.\nAll <code>f64::MIN</code>.\nAll <code>f64::MIN</code>.\nAll <code>f64::MIN</code>.\nAll <code>i16::MIN</code>.\nAll <code>i16::MIN</code>.\nAll <code>i16::MIN</code>.\nAll <code>u16::MIN</code>.\nAll <code>u16::MIN</code>.\nAll <code>u16::MIN</code>.\nAll <code>i64::MIN</code>.\nAll <code>i64::MIN</code>.\nAll <code>i64::MIN</code>.\nAll <code>u64::MIN</code>.\nAll <code>u64::MIN</code>.\nAll <code>u64::MIN</code>.\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll <code>f32::NAN</code>.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll NAN:s.\nAll NANs.\nAll <code>f64::NAN</code>.\nAll <code>f64::NAN</code>.\nAll <code>f64::NAN</code>.\nAll <code>f32::NEG_INFINITY</code>.\nAll <code>f64::NEG_INFINITY</code>.\nAll <code>f64::NEG_INFINITY</code>.\nAll <code>f64::NEG_INFINITY</code>.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nAll negative ones.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative W axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative X axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Y axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nA unit vector pointing along the negative Z axis.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nAll ones.\nA quaternion representing an orientation.\nAn infinite half-line starting at <code>origin</code> and going in …\nAn infinite half-line starting at <code>origin</code> and going in …\nA rectangle defined by two opposite corners.\nAll true.\nAll true.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA rectangle defined by two opposite corners.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive W axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nA unit vector pointing along the positive X axis.\nIntrinsic three-axis rotation XYZ\nIntrinsic three-axis rotation XZY\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nA unit vector pointing along the positive Y axis.\nIntrinsic three-axis rotation YXZ\nIntrinsic three-axis rotation YZX\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nA unit vector pointing along the positive Z axis.\nThe degenerate zero transform.\nThe degenerate zero transform.\nA 3x3 matrix with all elements set to <code>0.0</code>.\nAll zeroes.\nThe degenerate zero transform.\nThe degenerate zero transform.\nA 2x2 matrix with all elements set to <code>0.0</code>.\nA 3x3 matrix with all elements set to <code>0.0</code>.\nA 4x4 matrix with all elements set to <code>0.0</code>.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nAll zeroes.\nIntrinsic three-axis rotation ZXY\nIntrinsic three-axis rotation ZYX\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns a vector containing the absolute value of each …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nReturns true if the absolute difference of all elements …\nAdds two quaternions.\nAdds two 2x2 matrices.\nAdds two 3x3 matrices.\nAdds two 3x3 matrices.\nAdds two 4x4 matrices.\nReturns true if all the elements are true, false otherwise.\nReturns true if all the elements are true, false otherwise.\nReturns the angle (in radians) between two vectors.\nReturns the angle (in radians) for the minimal rotation …\nReturns the angle (in radians) between <code>self</code> and <code>rhs</code> in the …\nReturns the angle (in radians) between two vectors.\nReturns true if any of the elements are true, false …\nReturns true if any of the elements are true, false …\nReturns some vector that is orthogonal to the given one.\nReturns some vector that is orthogonal to the given one.\nGiven a unit vector return two other vectors that together …\nGiven a unit vector return two other vectors that together …\nReturns any unit vector that is orthogonal to the given …\nReturns any unit vector that is orthogonal to the given …\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>f64</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i16</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nCasts all elements of <code>self</code> to <code>i64</code>.\nReturns self as <code>IRect</code> (i32)\nReturns self as <code>IRect</code> (i32)\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nCasts all elements of <code>self</code> to <code>i32</code>.\nReturns self as <code>Rect</code> (f32)\nReturns self as <code>Rect</code> (f32)\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u16</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nReturns self as <code>URect</code> (u32)\nReturns self as <code>URect</code> (u32)\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nReturns a bitmask with the lowest 3 bits set from the …\nReturns a bitmask with the lowest 4 bits set from the …\n<code>bool</code> vector mask types. \nThis module contains traits and implements for working …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nThe center point of the rectangle.\nThe center point of the rectangle.\nThe center point of the rectangle.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no more than <code>max</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector with a length no less than <code>min</code>\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns the quaternion conjugate of <code>self</code>. For a unit …\nCheck if a point lies within this rectangle, inclusive of …\nCheck if a point lies within this rectangle, inclusive of …\nCheck if a point lies within this rectangle, inclusive of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nProvides types for building cubic splines for rendering …\nDefault <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nThe direction of the ray.\nThe direction of the ray.\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nDivides a quaternion by a scalar value. The quotient is …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>. The dot product …\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\n<code>f32</code> vector, quaternion and matrix types. \n<code>f64</code> vector, quaternion and matrix types. \nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreates an affine transform from the given rotation <code>angle</code>.\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given rotation <code>angle</code>.\nCreates a 2x2 matrix containing a rotation of <code>angle</code> (in …\nCreates an affine transformation matrix from the given 2D …\nCreates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …\nCreates an affine transform from the given 2D rotation …\nCreates an affine transform from the given 2D rotation …\nCreates a new vector from an array.\nCreates a rotation quaternion from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates an affine transformation matrix containing a 3D …\nCreate a quaternion for a normalized rotation <code>axis</code> and …\nCreate a new rectangle from its center and half-size.\nCreate a new rectangle from its center and half-size.\nCreate a new rectangle from its center and half-size.\nCreate a new rectangle from its center and size.\nCreate a new rectangle from its center and size.\nCreate a new rectangle from its center and size.\nCreates an affine transform from three column vectors.\nCreates an affine transform from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates an affine transform from three column vectors.\nCreates an affine transform from three column vectors.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates an affine transform from a <code>[f32; 6]</code> array stored …\nCreates an affine transform from a <code>[f32; 12]</code> array stored …\nCreates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …\nCreates an affine transform from a <code>[f64; 6]</code> array stored …\nCreates an affine transform from a <code>[f64; 12]</code> array stored …\nCreates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …\nCreates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …\nCreates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …\nCreates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …\nCreates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …\nCreates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …\nCreates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …\nCreates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …\nCreates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …\nCreates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …\nCreates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …\nCreates an affine transform from the first 6 values in …\nCreates an affine transform from the first 12 values in …\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates an affine transform from the first 6 values in …\nCreates an affine transform from the first 12 values in …\nCreates a 2x2 matrix from the first 4 values in <code>slice</code>.\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates a 4x4 matrix from the first 16 values in <code>slice</code>.\nCreate a new rectangle from two corner points.\nCreate a new rectangle from two corner points.\nCreate a new rectangle from two corner points.\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a affine transformation matrix containing a …\nCreates a quaternion from the given Euler rotation …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transform from a 2x2 matrix (expressing …\nThe given <code>Mat3</code> must be an affine transform,\nCreates an affine transform from a 3x3 matrix (expressing …\nThe given <code>DMat3</code> must be an affine transform,\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 rotation matrix.\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates an affine transform from a 3x3 matrix (expressing …\nThe given <code>Mat3A</code> must be an affine transform,\nThe given <code>Mat4</code> must be an affine transform, i.e. contain …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nThe given <code>DMat4</code> must be an affine transform, i.e. contain …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreate a new <code>AspectRatio</code> from a given amount of <code>x</code> pixels …\nCreates an affine transform from the given <code>rotation</code> …\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transform from the given <code>rotation</code> …\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transformation matrix from the given …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to either …\nCreates an affine transform from the given 3D <code>rotation</code> and …\nCreates an affine transform from the given 3D <code>rotation</code> and …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transformation matrix from the given …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix containing the …\nCreates a 2x2 matrix containing the combining non-uniform …\nCreates an affine transform from the given 2D <code>scale</code>, …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given 2D <code>scale</code>, …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given 3D <code>scale</code>, …\nCreates an affine transform from the given 3D <code>scale</code>, …\nCreates an affine transformation matrix from the given 3D …\nCreate a quaternion that rotates <code>v.length()</code> radians around …\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a rotation quaternion from a slice.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates an affine transformation from the given 2D …\nCreates an affine transformation from the given 3D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation from the given 2D …\nCreates an affine transformation from the given 3D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 3D …\nCreates a new rotation quaternion from a 4D vector.\nCreates a new rotation quaternion.\nGet a point at a given distance along the ray\nGet a point at a given distance along the ray\nRectangle half-size.\nRectangle half-size.\nRectangle half-size.\nRectangle height (max.y - min.y).\nRectangle height (max.y - min.y).\nRectangle height (max.y - min.y).\n<code>i16</code> vector types. \nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>i32</code> vector types. \n<code>i64</code> vector types. \nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreate a new rectangle with a constant inset.\nCreate a new rectangle with a constant inset.\nCreate a new rectangle with a constant inset.\nBuild a new rectangle formed of the intersection of this …\nBuild a new rectangle formed of the intersection of this …\nBuild a new rectangle formed of the intersection of this …\nGet the distance to a plane if the ray intersects it\nGet the distance to a plane if the ray intersects it\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the inverse of this transform.\nReturn the inverse of this transform.\nReturns the inverse of <code>self</code>.\nReturn the inverse of this transform.\nReturn the inverse of this transform.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of a normalized quaternion.\nReturns <code>v</code> normalized to the range <code>[a, b]</code>.\nCalculates the inverse transpose of the 3x3 matrix and …\nCheck if the rectangle is empty.\nCheck if the rectangle is empty.\nCheck if the rectangle is empty.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> of length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nScaling, rotation, shears, and other non-translation …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nThe maximum corner point of the rect.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nThe minimum corner point of the rect.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nMultiplies two quaternions. If they each represent a …\nMultiplies a quaternion and a 3D vector, returning the …\nMultiplies a quaternion by a scalar value.\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nMultiplies two quaternions. If they each represent a …\nMultiplies two 2x2 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 4x4 matrices.\nMultiplies two quaternions. If they each represent a …\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 2x2 matrix by a scalar.\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 4x4 matrix by a scalar.\nTransforms a 2D vector.\nTransforms a 3D vector.\nTransforms a 3D vector.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a <code>Vec3A</code>.\nTransforms a 4D vector.\nCreate a new <code>AspectRatio</code> from a given <code>width</code> and <code>height</code>.\nCreate a new <code>Ray2d</code> from a given origin and direction\nCreate a new <code>Ray3d</code> from a given origin and direction\nCreate a new rectangle from two corner points.\nCreate a new rectangle from two corner points.\nCreate a new rectangle from two corner points.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nBuild a new rectangle from this one with its coordinates …\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nThe origin of the ray.\nThe origin of the ray.\nCreates a left-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite right-handed perspective projection …\nCreates a left-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with […\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nThe <code>bevy_math</code> prelude.\nThis module defines primitive shapes. The origin is (0, 0) …\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nTransforms the given 3D vector as a point, applying …\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nRemap <code>self</code> from the input range to the output range.\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nRectangle size.\nRectangle size.\nRectangle size.\nPerforms a spherical linear interpolation between <code>self</code> and …\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nSubtracts two 2x2 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 4x4 matrices.\nTraits adding swizzle methods to all vector types. \nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nReturns the angle (in radians) of this vector in the range …\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\nReturns the rotation axis (normalized) and angle (in …\nCreates a <code>[f32; 6]</code> array storing data in column major …\nCreates a <code>[f32; 12]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f64; 6]</code> array storing data in column major …\nCreates a <code>[f64; 12]</code> array storing data in column major …\nCreates a <code>[f64; 4]</code> array storing data in column major …\nCreates a <code>[f64; 9]</code> array storing data in column major …\nCreates a <code>[f64; 16]</code> array storing data in column major …\nCreates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …\nReturns the rotation angles for the given euler rotation …\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nCalculates the transpose of the affine 4x3 matrix to a 3x4 …\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code>, applying shear, scale, …\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given <code>Vec3A</code>, applying shear, scale and …\nTranslation\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\n<code>u16</code> vector types. \nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>u32</code> vector types. \n<code>u64</code> vector types. \nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nBuild a new rectangle formed of the union of this …\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nRectangle width (max.x - min.x).\nRectangle width (max.x - min.x).\nRectangle width (max.x - min.x).\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …")