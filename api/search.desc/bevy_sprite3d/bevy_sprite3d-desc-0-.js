searchState.loadedDescShard("bevy_sprite3d", 0, "A precursor struct for a sprite. Set necessary parameters …\nThe sprite’s alpha mode.\ncreates a bundle of components from the Sprite3d struct.\ncreates a bundle of components from the AtlasSprite3d …\nWhether the sprite should be rendered as double-sided. <code>true</code>…\nAn emissive colour, if the sprite should emit light. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nthe sprite image. See <code>readme.md</code> for examples.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe sprite’s pivot. eg. the point specified by the sprite…\nthe number of pixels per metre of the sprite, assuming a …\nthe sprite’s transform\nWhether the sprite should be rendered as unlit. <code>false</code> …")