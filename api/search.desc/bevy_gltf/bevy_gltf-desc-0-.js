searchState.loadedDescShard("bevy_gltf", 0, "Plugin providing an <code>AssetLoader</code> and type definitions for …\nFailed to load asset from an asset path.\nDecoding the base64 mesh data failed.\nUnsupported buffer format.\nFailed to generate tangents.\nRepresentation of a loaded glTF file.\nInvalid glTF file.\nAn error that occurs when loading a glTF file.\nAdditional untyped data that can be present on most glTF …\nLoads glTF files with all of their data as their …\nSpecifies optional settings for processing gltfs at load …\nA glTF mesh, which may consist of multiple <code>GltfPrimitives</code> …\nA glTF node with all of its child nodes, its <code>GltfMesh</code>, …\nAdds support for glTF file loading to the app.\nPart of a <code>GltfMesh</code> that consists of a <code>Mesh</code>, an optional …\nError when loading a texture. Might be due to a disabled …\nInvalid image mime type.\nFailed to load a file.\nMissing sampler for an animation.\nBinary blob is missing.\nFailed to generate morph targets.\nFailed to read bytes from an asset path.\nUnsupported primitive mode.\nRegister a custom vertex attribute so that it is …\nAll animations loaded from the glTF file.\nDirect children of the node.\nCustom vertex attributes that will be recognized when …\nDefault scene to be displayed.\nAdditional data.\nAdditional data.\nAdditional data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf true, the loader will include the root of the gltf root …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProcesses the asset in an asynchronous closure.\nIf true, the loader will spawn cameras for gltf camera …\nIf true, the loader will spawn lights for gltf light nodes.\nIf true, the loader will load mesh nodes and the …\nMaterial to apply to the <code>mesh</code>.\nAdditional data of the <code>material</code>.\nAll materials loaded from the glTF file.\nMesh of the node.\nTopology to be rendered.\nAll meshes loaded from the glTF file.\nNamed animations loaded from the glTF file.\nNamed materials loaded from the glTF file.\nNamed meshes loaded from the glTF file.\nNamed nodes loaded from the glTF file.\nNamed scenes loaded from the glTF file.\nAll nodes loaded from the glTF file.\nPrimitives of the glTF mesh.\nAll scenes loaded from the glTF file.\nThe gltf root of the gltf asset, see …\nList of compressed image formats handled by the loader.\nLocal transform.\nContent of the extra data.\nThe primitive mode.")